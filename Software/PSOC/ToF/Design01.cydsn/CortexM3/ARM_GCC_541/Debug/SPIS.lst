ARM GAS  C:\Users\Mathias\AppData\Local\Temp\ccH8Ni7h.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"SPIS.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.SPIS_Enable,"ax",%progbits
  20              		.align	2
  21              		.global	SPIS_Enable
  22              		.thumb
  23              		.thumb_func
  24              		.type	SPIS_Enable, %function
  25              	SPIS_Enable:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC5\\SPIS.c"
   1:Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/SPIS.c **** * File Name: SPIS.c
   3:Generated_Source\PSoC5/SPIS.c **** * Version 2.70
   4:Generated_Source\PSoC5/SPIS.c **** *
   5:Generated_Source\PSoC5/SPIS.c **** * Description:
   6:Generated_Source\PSoC5/SPIS.c **** *  This file provides all API functionality of the SPI Slave component.
   7:Generated_Source\PSoC5/SPIS.c **** *
   8:Generated_Source\PSoC5/SPIS.c **** * Note:
   9:Generated_Source\PSoC5/SPIS.c **** *  None.
  10:Generated_Source\PSoC5/SPIS.c **** *
  11:Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
  12:Generated_Source\PSoC5/SPIS.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/SPIS.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC5/SPIS.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC5/SPIS.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/SPIS.c **** 
  18:Generated_Source\PSoC5/SPIS.c **** #include "SPIS_PVT.h"
  19:Generated_Source\PSoC5/SPIS.c **** 
  20:Generated_Source\PSoC5/SPIS.c **** #if (SPIS_TX_SOFTWARE_BUF_ENABLED)
  21:Generated_Source\PSoC5/SPIS.c **** 
  22:Generated_Source\PSoC5/SPIS.c ****     volatile uint8 SPIS_txBuffer[SPIS_TX_BUFFER_SIZE];
  23:Generated_Source\PSoC5/SPIS.c ****     volatile uint8 SPIS_txBufferRead;
  24:Generated_Source\PSoC5/SPIS.c ****     volatile uint8 SPIS_txBufferWrite;
  25:Generated_Source\PSoC5/SPIS.c ****     volatile uint8 SPIS_txBufferFull;
  26:Generated_Source\PSoC5/SPIS.c **** 
  27:Generated_Source\PSoC5/SPIS.c **** #endif /* SPIS_TX_SOFTWARE_BUF_ENABLED*/
  28:Generated_Source\PSoC5/SPIS.c **** 
  29:Generated_Source\PSoC5/SPIS.c **** #if (SPIS_RX_SOFTWARE_BUF_ENABLED)
  30:Generated_Source\PSoC5/SPIS.c **** 
ARM GAS  C:\Users\Mathias\AppData\Local\Temp\ccH8Ni7h.s 			page 2


  31:Generated_Source\PSoC5/SPIS.c ****     volatile uint8 SPIS_rxBuffer[SPIS_RX_BUFFER_SIZE];
  32:Generated_Source\PSoC5/SPIS.c ****     volatile uint8 SPIS_rxBufferRead;
  33:Generated_Source\PSoC5/SPIS.c ****     volatile uint8 SPIS_rxBufferWrite;
  34:Generated_Source\PSoC5/SPIS.c ****     volatile uint8 SPIS_rxBufferFull;
  35:Generated_Source\PSoC5/SPIS.c **** 
  36:Generated_Source\PSoC5/SPIS.c **** #endif /* SPIS_RX_SOFTWARE_BUF_ENABLED */
  37:Generated_Source\PSoC5/SPIS.c **** 
  38:Generated_Source\PSoC5/SPIS.c **** uint8 SPIS_initVar = 0u;
  39:Generated_Source\PSoC5/SPIS.c **** 
  40:Generated_Source\PSoC5/SPIS.c **** volatile uint8 SPIS_swStatusTx;
  41:Generated_Source\PSoC5/SPIS.c **** volatile uint8 SPIS_swStatusRx;
  42:Generated_Source\PSoC5/SPIS.c **** 
  43:Generated_Source\PSoC5/SPIS.c **** 
  44:Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
  45:Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_Init
  46:Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
  47:Generated_Source\PSoC5/SPIS.c **** *
  48:Generated_Source\PSoC5/SPIS.c **** * Summary:
  49:Generated_Source\PSoC5/SPIS.c **** *  Inits/Restores default SPIS configuration provided with customizer.
  50:Generated_Source\PSoC5/SPIS.c **** *
  51:Generated_Source\PSoC5/SPIS.c **** * Parameters:
  52:Generated_Source\PSoC5/SPIS.c **** *  None.
  53:Generated_Source\PSoC5/SPIS.c **** *
  54:Generated_Source\PSoC5/SPIS.c **** * Return:
  55:Generated_Source\PSoC5/SPIS.c **** *  None.
  56:Generated_Source\PSoC5/SPIS.c **** *
  57:Generated_Source\PSoC5/SPIS.c **** * Side Effects:
  58:Generated_Source\PSoC5/SPIS.c **** *  When this function is called it initializes all of the necessary parameters
  59:Generated_Source\PSoC5/SPIS.c **** *  for execution. i.e. setting the initial interrupt mask, configuring the
  60:Generated_Source\PSoC5/SPIS.c **** *  interrupt service routine, configuring the bit-counter parameters and
  61:Generated_Source\PSoC5/SPIS.c **** *  clearing the FIFO and Status Register.
  62:Generated_Source\PSoC5/SPIS.c **** *
  63:Generated_Source\PSoC5/SPIS.c **** * Reentrant:
  64:Generated_Source\PSoC5/SPIS.c **** *  No.
  65:Generated_Source\PSoC5/SPIS.c **** *
  66:Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
  67:Generated_Source\PSoC5/SPIS.c **** void SPIS_Init(void) 
  68:Generated_Source\PSoC5/SPIS.c **** {
  69:Generated_Source\PSoC5/SPIS.c ****     /*Initialize the Bit counter */
  70:Generated_Source\PSoC5/SPIS.c ****     SPIS_COUNTER_PERIOD_REG = SPIS_BITCTR_INIT;
  71:Generated_Source\PSoC5/SPIS.c **** 
  72:Generated_Source\PSoC5/SPIS.c ****     /* ISR initialization */
  73:Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_INTERNAL_TX_INT_ENABLED)
  74:Generated_Source\PSoC5/SPIS.c **** 
  75:Generated_Source\PSoC5/SPIS.c ****         CyIntDisable(SPIS_TX_ISR_NUMBER);
  76:Generated_Source\PSoC5/SPIS.c **** 
  77:Generated_Source\PSoC5/SPIS.c ****         /* Set the ISR to point to the SPIS_isr Interrupt. */
  78:Generated_Source\PSoC5/SPIS.c ****         (void)CyIntSetVector(SPIS_TX_ISR_NUMBER, &SPIS_TX_ISR);
  79:Generated_Source\PSoC5/SPIS.c **** 
  80:Generated_Source\PSoC5/SPIS.c ****         /* Set the priority. */
  81:Generated_Source\PSoC5/SPIS.c ****         CyIntSetPriority(SPIS_TX_ISR_NUMBER, SPIS_TX_ISR_PRIORITY);
  82:Generated_Source\PSoC5/SPIS.c **** 
  83:Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_INTERNAL_TX_INT_ENABLED */
  84:Generated_Source\PSoC5/SPIS.c **** 
  85:Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_INTERNAL_RX_INT_ENABLED)
  86:Generated_Source\PSoC5/SPIS.c **** 
  87:Generated_Source\PSoC5/SPIS.c ****         CyIntDisable(SPIS_RX_ISR_NUMBER);
ARM GAS  C:\Users\Mathias\AppData\Local\Temp\ccH8Ni7h.s 			page 3


  88:Generated_Source\PSoC5/SPIS.c **** 
  89:Generated_Source\PSoC5/SPIS.c ****         /* Set the ISR to point to the SPIS_isr Interrupt. */
  90:Generated_Source\PSoC5/SPIS.c ****         (void)CyIntSetVector(SPIS_RX_ISR_NUMBER, &SPIS_RX_ISR);
  91:Generated_Source\PSoC5/SPIS.c **** 
  92:Generated_Source\PSoC5/SPIS.c ****         /* Set the priority. */
  93:Generated_Source\PSoC5/SPIS.c ****         CyIntSetPriority(SPIS_RX_ISR_NUMBER, SPIS_RX_ISR_PRIORITY);
  94:Generated_Source\PSoC5/SPIS.c **** 
  95:Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_INTERNAL_RX_INT_ENABLED */
  96:Generated_Source\PSoC5/SPIS.c **** 
  97:Generated_Source\PSoC5/SPIS.c ****     /* Clear any stray data from the RX and TX FIFO */
  98:Generated_Source\PSoC5/SPIS.c ****     SPIS_ClearFIFO();
  99:Generated_Source\PSoC5/SPIS.c **** 
 100:Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_RX_SOFTWARE_BUF_ENABLED)
 101:Generated_Source\PSoC5/SPIS.c ****         SPIS_rxBufferFull = 0u;
 102:Generated_Source\PSoC5/SPIS.c ****         SPIS_rxBufferRead = 0u;
 103:Generated_Source\PSoC5/SPIS.c ****         SPIS_rxBufferWrite = 0u;
 104:Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_RX_SOFTWARE_BUF_ENABLED */
 105:Generated_Source\PSoC5/SPIS.c **** 
 106:Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_TX_SOFTWARE_BUF_ENABLED)
 107:Generated_Source\PSoC5/SPIS.c ****         SPIS_txBufferFull = 0u;
 108:Generated_Source\PSoC5/SPIS.c ****         SPIS_txBufferRead = 0u;
 109:Generated_Source\PSoC5/SPIS.c ****         SPIS_txBufferWrite = 0u;
 110:Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_TX_SOFTWARE_BUF_ENABLED */
 111:Generated_Source\PSoC5/SPIS.c **** 
 112:Generated_Source\PSoC5/SPIS.c ****     (void) SPIS_ReadTxStatus(); /* Clear any pending status bits */
 113:Generated_Source\PSoC5/SPIS.c ****     (void) SPIS_ReadRxStatus(); /* Clear any pending status bits */
 114:Generated_Source\PSoC5/SPIS.c **** 
 115:Generated_Source\PSoC5/SPIS.c **** 
 116:Generated_Source\PSoC5/SPIS.c ****     /* Configure the Initial interrupt mask */
 117:Generated_Source\PSoC5/SPIS.c ****     #if (SPIS_TX_SOFTWARE_BUF_ENABLED)
 118:Generated_Source\PSoC5/SPIS.c ****         SPIS_TX_STATUS_MASK_REG  = (SPIS_TX_INIT_INTERRUPTS_MASK &
 119:Generated_Source\PSoC5/SPIS.c ****                                                 (uint8)~SPIS_STS_TX_FIFO_NOT_FULL);
 120:Generated_Source\PSoC5/SPIS.c ****     #else /* SPIS_TX_SOFTWARE_BUF_ENABLED */
 121:Generated_Source\PSoC5/SPIS.c ****         SPIS_TX_STATUS_MASK_REG  = SPIS_TX_INIT_INTERRUPTS_MASK;
 122:Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_TX_SOFTWARE_BUF_ENABLED */
 123:Generated_Source\PSoC5/SPIS.c **** 
 124:Generated_Source\PSoC5/SPIS.c ****     SPIS_RX_STATUS_MASK_REG  = SPIS_RX_INIT_INTERRUPTS_MASK;
 125:Generated_Source\PSoC5/SPIS.c **** }
 126:Generated_Source\PSoC5/SPIS.c **** 
 127:Generated_Source\PSoC5/SPIS.c **** 
 128:Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 129:Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_Enable
 130:Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 131:Generated_Source\PSoC5/SPIS.c **** *
 132:Generated_Source\PSoC5/SPIS.c **** * Summary:
 133:Generated_Source\PSoC5/SPIS.c **** *  Enable SPIS component.
 134:Generated_Source\PSoC5/SPIS.c **** *
 135:Generated_Source\PSoC5/SPIS.c **** * Parameters:
 136:Generated_Source\PSoC5/SPIS.c **** *  None.
 137:Generated_Source\PSoC5/SPIS.c **** *
 138:Generated_Source\PSoC5/SPIS.c **** * Return:
 139:Generated_Source\PSoC5/SPIS.c **** *  None.
 140:Generated_Source\PSoC5/SPIS.c **** *
 141:Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 142:Generated_Source\PSoC5/SPIS.c **** void SPIS_Enable(void) 
 143:Generated_Source\PSoC5/SPIS.c **** {
  28              		.loc 1 143 0
ARM GAS  C:\Users\Mathias\AppData\Local\Temp\ccH8Ni7h.s 			page 4


  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 08B5     		push	{r3, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 3, -8
  35              		.cfi_offset 14, -4
 144:Generated_Source\PSoC5/SPIS.c ****     uint8 enableInterrupts;
 145:Generated_Source\PSoC5/SPIS.c ****     enableInterrupts = CyEnterCriticalSection();
  36              		.loc 1 145 0
  37 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  38              	.LVL0:
 146:Generated_Source\PSoC5/SPIS.c **** 
 147:Generated_Source\PSoC5/SPIS.c ****     SPIS_COUNTER_CONTROL_REG |= SPIS_CNTR_ENABLE;
  39              		.loc 1 147 0
  40 0006 0A4A     		ldr	r2, .L3
  41 0008 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  42 000a 43F02003 		orr	r3, r3, #32
  43 000e 1370     		strb	r3, [r2]
 148:Generated_Source\PSoC5/SPIS.c ****     SPIS_TX_STATUS_ACTL_REG |= SPIS_INT_ENABLE;
  44              		.loc 1 148 0
  45 0010 013A     		subs	r2, r2, #1
  46 0012 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  47 0014 43F01003 		orr	r3, r3, #16
  48 0018 1370     		strb	r3, [r2]
 149:Generated_Source\PSoC5/SPIS.c ****     SPIS_RX_STATUS_ACTL_REG |= SPIS_INT_ENABLE;
  49              		.loc 1 149 0
  50 001a FE3A     		subs	r2, r2, #254
  51 001c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  52 001e 43F01003 		orr	r3, r3, #16
  53 0022 1370     		strb	r3, [r2]
 150:Generated_Source\PSoC5/SPIS.c **** 
 151:Generated_Source\PSoC5/SPIS.c ****     CyExitCriticalSection(enableInterrupts);
  54              		.loc 1 151 0
  55 0024 FFF7FEFF 		bl	CyExitCriticalSection
  56              	.LVL1:
 152:Generated_Source\PSoC5/SPIS.c **** 
 153:Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_INTERNAL_TX_INT_ENABLED)
 154:Generated_Source\PSoC5/SPIS.c ****         CyIntEnable(SPIS_TX_ISR_NUMBER);
 155:Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_INTERNAL_TX_INT_ENABLED */
 156:Generated_Source\PSoC5/SPIS.c **** 
 157:Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_INTERNAL_RX_INT_ENABLED)
 158:Generated_Source\PSoC5/SPIS.c ****         CyIntEnable(SPIS_RX_ISR_NUMBER);
  57              		.loc 1 158 0
  58 0028 0122     		movs	r2, #1
  59 002a 024B     		ldr	r3, .L3+4
  60 002c 1A60     		str	r2, [r3]
  61 002e 08BD     		pop	{r3, pc}
  62              	.L4:
  63              		.align	2
  64              	.L3:
  65 0030 99650040 		.word	1073767833
  66 0034 00E100E0 		.word	-536813312
  67              		.cfi_endproc
  68              	.LFE1:
  69              		.size	SPIS_Enable, .-SPIS_Enable
  70              		.section	.text.SPIS_Stop,"ax",%progbits
ARM GAS  C:\Users\Mathias\AppData\Local\Temp\ccH8Ni7h.s 			page 5


  71              		.align	2
  72              		.global	SPIS_Stop
  73              		.thumb
  74              		.thumb_func
  75              		.type	SPIS_Stop, %function
  76              	SPIS_Stop:
  77              	.LFB3:
 159:Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_INTERNAL_RX_INT_ENABLED */
 160:Generated_Source\PSoC5/SPIS.c **** }
 161:Generated_Source\PSoC5/SPIS.c **** 
 162:Generated_Source\PSoC5/SPIS.c **** 
 163:Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 164:Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_Start
 165:Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 166:Generated_Source\PSoC5/SPIS.c **** *
 167:Generated_Source\PSoC5/SPIS.c **** * Summary:
 168:Generated_Source\PSoC5/SPIS.c **** *  Initialize and Enable the SPI Slave component.
 169:Generated_Source\PSoC5/SPIS.c **** *
 170:Generated_Source\PSoC5/SPIS.c **** * Parameters:
 171:Generated_Source\PSoC5/SPIS.c **** *  None.
 172:Generated_Source\PSoC5/SPIS.c **** *
 173:Generated_Source\PSoC5/SPIS.c **** * Return:
 174:Generated_Source\PSoC5/SPIS.c **** *  None.
 175:Generated_Source\PSoC5/SPIS.c **** *
 176:Generated_Source\PSoC5/SPIS.c **** * Global variables:
 177:Generated_Source\PSoC5/SPIS.c **** *  SPIS_initVar - used to check initial configuration, modified on
 178:Generated_Source\PSoC5/SPIS.c **** *  first function call.
 179:Generated_Source\PSoC5/SPIS.c **** *
 180:Generated_Source\PSoC5/SPIS.c **** * Theory:
 181:Generated_Source\PSoC5/SPIS.c **** *  Enable the clock input to enable operation.
 182:Generated_Source\PSoC5/SPIS.c **** *
 183:Generated_Source\PSoC5/SPIS.c **** * Reentrant:
 184:Generated_Source\PSoC5/SPIS.c **** *  No.
 185:Generated_Source\PSoC5/SPIS.c **** *
 186:Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 187:Generated_Source\PSoC5/SPIS.c **** void SPIS_Start(void) 
 188:Generated_Source\PSoC5/SPIS.c **** {
 189:Generated_Source\PSoC5/SPIS.c ****     if(SPIS_initVar == 0u)
 190:Generated_Source\PSoC5/SPIS.c ****     {
 191:Generated_Source\PSoC5/SPIS.c ****         SPIS_Init();
 192:Generated_Source\PSoC5/SPIS.c ****         SPIS_initVar = 1u;
 193:Generated_Source\PSoC5/SPIS.c ****     }
 194:Generated_Source\PSoC5/SPIS.c **** 
 195:Generated_Source\PSoC5/SPIS.c ****     SPIS_Enable();
 196:Generated_Source\PSoC5/SPIS.c **** }
 197:Generated_Source\PSoC5/SPIS.c **** 
 198:Generated_Source\PSoC5/SPIS.c **** 
 199:Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 200:Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_Stop
 201:Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 202:Generated_Source\PSoC5/SPIS.c **** *
 203:Generated_Source\PSoC5/SPIS.c **** * Summary:
 204:Generated_Source\PSoC5/SPIS.c **** *  Disable the SPI Slave component.
 205:Generated_Source\PSoC5/SPIS.c **** *
 206:Generated_Source\PSoC5/SPIS.c **** * Parameters:
 207:Generated_Source\PSoC5/SPIS.c **** *  None.
 208:Generated_Source\PSoC5/SPIS.c **** *
ARM GAS  C:\Users\Mathias\AppData\Local\Temp\ccH8Ni7h.s 			page 6


 209:Generated_Source\PSoC5/SPIS.c **** * Return:
 210:Generated_Source\PSoC5/SPIS.c **** *  None.
 211:Generated_Source\PSoC5/SPIS.c **** *
 212:Generated_Source\PSoC5/SPIS.c **** * Theory:
 213:Generated_Source\PSoC5/SPIS.c **** *  Disable the internal interrupt if one is used.
 214:Generated_Source\PSoC5/SPIS.c **** *
 215:Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 216:Generated_Source\PSoC5/SPIS.c **** void SPIS_Stop(void) 
 217:Generated_Source\PSoC5/SPIS.c **** {
  78              		.loc 1 217 0
  79              		.cfi_startproc
  80              		@ args = 0, pretend = 0, frame = 0
  81              		@ frame_needed = 0, uses_anonymous_args = 0
  82 0000 08B5     		push	{r3, lr}
  83              		.cfi_def_cfa_offset 8
  84              		.cfi_offset 3, -8
  85              		.cfi_offset 14, -4
 218:Generated_Source\PSoC5/SPIS.c ****     uint8 enableInterrupts;
 219:Generated_Source\PSoC5/SPIS.c ****     enableInterrupts = CyEnterCriticalSection();
  86              		.loc 1 219 0
  87 0002 FFF7FEFF 		bl	CyEnterCriticalSection
  88              	.LVL2:
 220:Generated_Source\PSoC5/SPIS.c **** 
 221:Generated_Source\PSoC5/SPIS.c ****     SPIS_TX_STATUS_ACTL_REG &= (uint8)~SPIS_INT_ENABLE;
  89              		.loc 1 221 0
  90 0006 084A     		ldr	r2, .L7
  91 0008 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  92 000a 03F0EF03 		and	r3, r3, #239
  93 000e 1370     		strb	r3, [r2]
 222:Generated_Source\PSoC5/SPIS.c ****     SPIS_RX_STATUS_ACTL_REG &= (uint8)~SPIS_INT_ENABLE;
  94              		.loc 1 222 0
  95 0010 FE3A     		subs	r2, r2, #254
  96 0012 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
  97 0014 03F0EF03 		and	r3, r3, #239
  98 0018 1370     		strb	r3, [r2]
 223:Generated_Source\PSoC5/SPIS.c **** 
 224:Generated_Source\PSoC5/SPIS.c ****     CyExitCriticalSection(enableInterrupts);
  99              		.loc 1 224 0
 100 001a FFF7FEFF 		bl	CyExitCriticalSection
 101              	.LVL3:
 225:Generated_Source\PSoC5/SPIS.c **** 
 226:Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_INTERNAL_TX_INT_ENABLED)
 227:Generated_Source\PSoC5/SPIS.c ****         CyIntDisable(SPIS_TX_ISR_NUMBER);
 228:Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_INTERNAL_TX_INT_ENABLED */
 229:Generated_Source\PSoC5/SPIS.c **** 
 230:Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_INTERNAL_RX_INT_ENABLED)
 231:Generated_Source\PSoC5/SPIS.c ****         CyIntDisable(SPIS_RX_ISR_NUMBER);
 102              		.loc 1 231 0
 103 001e 0122     		movs	r2, #1
 104 0020 024B     		ldr	r3, .L7+4
 105 0022 1A60     		str	r2, [r3]
 106 0024 08BD     		pop	{r3, pc}
 107              	.L8:
 108 0026 00BF     		.align	2
 109              	.L7:
 110 0028 98650040 		.word	1073767832
 111 002c 80E100E0 		.word	-536813184
ARM GAS  C:\Users\Mathias\AppData\Local\Temp\ccH8Ni7h.s 			page 7


 112              		.cfi_endproc
 113              	.LFE3:
 114              		.size	SPIS_Stop, .-SPIS_Stop
 115              		.section	.text.SPIS_EnableTxInt,"ax",%progbits
 116              		.align	2
 117              		.global	SPIS_EnableTxInt
 118              		.thumb
 119              		.thumb_func
 120              		.type	SPIS_EnableTxInt, %function
 121              	SPIS_EnableTxInt:
 122              	.LFB4:
 232:Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_INTERNAL_RX_INT_ENABLED */
 233:Generated_Source\PSoC5/SPIS.c **** }
 234:Generated_Source\PSoC5/SPIS.c **** 
 235:Generated_Source\PSoC5/SPIS.c **** 
 236:Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 237:Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_EnableTxInt
 238:Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 239:Generated_Source\PSoC5/SPIS.c **** *
 240:Generated_Source\PSoC5/SPIS.c **** * Summary:
 241:Generated_Source\PSoC5/SPIS.c **** *  Enable internal Tx interrupt generation.
 242:Generated_Source\PSoC5/SPIS.c **** *
 243:Generated_Source\PSoC5/SPIS.c **** * Parameters:
 244:Generated_Source\PSoC5/SPIS.c **** *  None.
 245:Generated_Source\PSoC5/SPIS.c **** *
 246:Generated_Source\PSoC5/SPIS.c **** * Return:
 247:Generated_Source\PSoC5/SPIS.c **** *  None.
 248:Generated_Source\PSoC5/SPIS.c **** *
 249:Generated_Source\PSoC5/SPIS.c **** * Theory:
 250:Generated_Source\PSoC5/SPIS.c **** *  Enable the internal Tx interrupt output -or- the interrupt component itself.
 251:Generated_Source\PSoC5/SPIS.c **** *
 252:Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 253:Generated_Source\PSoC5/SPIS.c **** void SPIS_EnableTxInt(void) 
 254:Generated_Source\PSoC5/SPIS.c **** {
 123              		.loc 1 254 0
 124              		.cfi_startproc
 125              		@ args = 0, pretend = 0, frame = 0
 126              		@ frame_needed = 0, uses_anonymous_args = 0
 127              		@ link register save eliminated.
 128 0000 7047     		bx	lr
 129              		.cfi_endproc
 130              	.LFE4:
 131              		.size	SPIS_EnableTxInt, .-SPIS_EnableTxInt
 132 0002 00BF     		.section	.text.SPIS_EnableRxInt,"ax",%progbits
 133              		.align	2
 134              		.global	SPIS_EnableRxInt
 135              		.thumb
 136              		.thumb_func
 137              		.type	SPIS_EnableRxInt, %function
 138              	SPIS_EnableRxInt:
 139              	.LFB5:
 255:Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_INTERNAL_TX_INT_ENABLED)
 256:Generated_Source\PSoC5/SPIS.c ****         CyIntEnable(SPIS_TX_ISR_NUMBER);
 257:Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_INTERNAL_TX_INT_ENABLED */
 258:Generated_Source\PSoC5/SPIS.c **** }
 259:Generated_Source\PSoC5/SPIS.c **** 
 260:Generated_Source\PSoC5/SPIS.c **** 
ARM GAS  C:\Users\Mathias\AppData\Local\Temp\ccH8Ni7h.s 			page 8


 261:Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 262:Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_EnableRxInt
 263:Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 264:Generated_Source\PSoC5/SPIS.c **** *
 265:Generated_Source\PSoC5/SPIS.c **** * Summary:
 266:Generated_Source\PSoC5/SPIS.c **** *  Enable internal Rx interrupt generation.
 267:Generated_Source\PSoC5/SPIS.c **** *
 268:Generated_Source\PSoC5/SPIS.c **** * Parameters:
 269:Generated_Source\PSoC5/SPIS.c **** *  None.
 270:Generated_Source\PSoC5/SPIS.c **** *
 271:Generated_Source\PSoC5/SPIS.c **** * Return:
 272:Generated_Source\PSoC5/SPIS.c **** *  None.
 273:Generated_Source\PSoC5/SPIS.c **** *
 274:Generated_Source\PSoC5/SPIS.c **** * Theory:
 275:Generated_Source\PSoC5/SPIS.c **** *  Enable the internal Rx interrupt output -or- the interrupt component itself.
 276:Generated_Source\PSoC5/SPIS.c **** *
 277:Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 278:Generated_Source\PSoC5/SPIS.c **** void SPIS_EnableRxInt(void) 
 279:Generated_Source\PSoC5/SPIS.c **** {
 140              		.loc 1 279 0
 141              		.cfi_startproc
 142              		@ args = 0, pretend = 0, frame = 0
 143              		@ frame_needed = 0, uses_anonymous_args = 0
 144              		@ link register save eliminated.
 280:Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_INTERNAL_RX_INT_ENABLED)
 281:Generated_Source\PSoC5/SPIS.c ****         CyIntEnable(SPIS_RX_ISR_NUMBER);
 145              		.loc 1 281 0
 146 0000 0122     		movs	r2, #1
 147 0002 014B     		ldr	r3, .L11
 148 0004 1A60     		str	r2, [r3]
 149 0006 7047     		bx	lr
 150              	.L12:
 151              		.align	2
 152              	.L11:
 153 0008 00E100E0 		.word	-536813312
 154              		.cfi_endproc
 155              	.LFE5:
 156              		.size	SPIS_EnableRxInt, .-SPIS_EnableRxInt
 157              		.section	.text.SPIS_DisableTxInt,"ax",%progbits
 158              		.align	2
 159              		.global	SPIS_DisableTxInt
 160              		.thumb
 161              		.thumb_func
 162              		.type	SPIS_DisableTxInt, %function
 163              	SPIS_DisableTxInt:
 164              	.LFB6:
 282:Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_INTERNAL_RX_INT_ENABLED */
 283:Generated_Source\PSoC5/SPIS.c **** }
 284:Generated_Source\PSoC5/SPIS.c **** 
 285:Generated_Source\PSoC5/SPIS.c **** 
 286:Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 287:Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_DisableTxInt
 288:Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 289:Generated_Source\PSoC5/SPIS.c **** *
 290:Generated_Source\PSoC5/SPIS.c **** * Summary:
 291:Generated_Source\PSoC5/SPIS.c **** *  Disable internal Tx interrupt generation.
 292:Generated_Source\PSoC5/SPIS.c **** *
ARM GAS  C:\Users\Mathias\AppData\Local\Temp\ccH8Ni7h.s 			page 9


 293:Generated_Source\PSoC5/SPIS.c **** * Parameters:
 294:Generated_Source\PSoC5/SPIS.c **** *  None.
 295:Generated_Source\PSoC5/SPIS.c **** *
 296:Generated_Source\PSoC5/SPIS.c **** * Return:
 297:Generated_Source\PSoC5/SPIS.c **** *  None.
 298:Generated_Source\PSoC5/SPIS.c **** *
 299:Generated_Source\PSoC5/SPIS.c **** * Theory:
 300:Generated_Source\PSoC5/SPIS.c **** *  Disable the internal Tx interrupt output -or- the interrupt component itself.
 301:Generated_Source\PSoC5/SPIS.c **** *
 302:Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 303:Generated_Source\PSoC5/SPIS.c **** void SPIS_DisableTxInt(void) 
 304:Generated_Source\PSoC5/SPIS.c **** {
 165              		.loc 1 304 0
 166              		.cfi_startproc
 167              		@ args = 0, pretend = 0, frame = 0
 168              		@ frame_needed = 0, uses_anonymous_args = 0
 169              		@ link register save eliminated.
 170 0000 7047     		bx	lr
 171              		.cfi_endproc
 172              	.LFE6:
 173              		.size	SPIS_DisableTxInt, .-SPIS_DisableTxInt
 174 0002 00BF     		.section	.text.SPIS_DisableRxInt,"ax",%progbits
 175              		.align	2
 176              		.global	SPIS_DisableRxInt
 177              		.thumb
 178              		.thumb_func
 179              		.type	SPIS_DisableRxInt, %function
 180              	SPIS_DisableRxInt:
 181              	.LFB7:
 305:Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_INTERNAL_TX_INT_ENABLED)
 306:Generated_Source\PSoC5/SPIS.c ****         CyIntDisable(SPIS_TX_ISR_NUMBER);
 307:Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_INTERNAL_TX_INT_ENABLED */
 308:Generated_Source\PSoC5/SPIS.c **** }
 309:Generated_Source\PSoC5/SPIS.c **** 
 310:Generated_Source\PSoC5/SPIS.c **** 
 311:Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 312:Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_DisableRxInt
 313:Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 314:Generated_Source\PSoC5/SPIS.c **** *
 315:Generated_Source\PSoC5/SPIS.c **** * Summary:
 316:Generated_Source\PSoC5/SPIS.c **** *  Disable internal Rx interrupt generation.
 317:Generated_Source\PSoC5/SPIS.c **** *
 318:Generated_Source\PSoC5/SPIS.c **** * Parameters:
 319:Generated_Source\PSoC5/SPIS.c **** *  None.
 320:Generated_Source\PSoC5/SPIS.c **** *
 321:Generated_Source\PSoC5/SPIS.c **** * Return:
 322:Generated_Source\PSoC5/SPIS.c **** *  None.
 323:Generated_Source\PSoC5/SPIS.c **** *
 324:Generated_Source\PSoC5/SPIS.c **** * Theory:
 325:Generated_Source\PSoC5/SPIS.c **** *  Disable the internal Rx interrupt output -or- the interrupt component itself.
 326:Generated_Source\PSoC5/SPIS.c **** *
 327:Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 328:Generated_Source\PSoC5/SPIS.c **** void SPIS_DisableRxInt(void) 
 329:Generated_Source\PSoC5/SPIS.c **** {
 182              		.loc 1 329 0
 183              		.cfi_startproc
 184              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Mathias\AppData\Local\Temp\ccH8Ni7h.s 			page 10


 185              		@ frame_needed = 0, uses_anonymous_args = 0
 186              		@ link register save eliminated.
 330:Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_INTERNAL_RX_INT_ENABLED)
 331:Generated_Source\PSoC5/SPIS.c ****         CyIntDisable(SPIS_RX_ISR_NUMBER);
 187              		.loc 1 331 0
 188 0000 0122     		movs	r2, #1
 189 0002 014B     		ldr	r3, .L15
 190 0004 1A60     		str	r2, [r3]
 191 0006 7047     		bx	lr
 192              	.L16:
 193              		.align	2
 194              	.L15:
 195 0008 80E100E0 		.word	-536813184
 196              		.cfi_endproc
 197              	.LFE7:
 198              		.size	SPIS_DisableRxInt, .-SPIS_DisableRxInt
 199              		.section	.text.SPIS_SetTxInterruptMode,"ax",%progbits
 200              		.align	2
 201              		.global	SPIS_SetTxInterruptMode
 202              		.thumb
 203              		.thumb_func
 204              		.type	SPIS_SetTxInterruptMode, %function
 205              	SPIS_SetTxInterruptMode:
 206              	.LFB8:
 332:Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_INTERNAL_RX_INT_ENABLED */
 333:Generated_Source\PSoC5/SPIS.c **** }
 334:Generated_Source\PSoC5/SPIS.c **** 
 335:Generated_Source\PSoC5/SPIS.c **** 
 336:Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 337:Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_SetTxInterruptMode
 338:Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 339:Generated_Source\PSoC5/SPIS.c **** *
 340:Generated_Source\PSoC5/SPIS.c **** * Summary:
 341:Generated_Source\PSoC5/SPIS.c **** *  Configure which status bits trigger an interrupt event.
 342:Generated_Source\PSoC5/SPIS.c **** *
 343:Generated_Source\PSoC5/SPIS.c **** * Parameters:
 344:Generated_Source\PSoC5/SPIS.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
 345:Generated_Source\PSoC5/SPIS.c **** *  header file).
 346:Generated_Source\PSoC5/SPIS.c **** *
 347:Generated_Source\PSoC5/SPIS.c **** * Return:
 348:Generated_Source\PSoC5/SPIS.c **** *  None.
 349:Generated_Source\PSoC5/SPIS.c **** *
 350:Generated_Source\PSoC5/SPIS.c **** * Theory:
 351:Generated_Source\PSoC5/SPIS.c **** *  Enables the output of specific status bits to the interrupt controller.
 352:Generated_Source\PSoC5/SPIS.c **** *
 353:Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 354:Generated_Source\PSoC5/SPIS.c **** void SPIS_SetTxInterruptMode(uint8 intSrc) 
 355:Generated_Source\PSoC5/SPIS.c **** {
 207              		.loc 1 355 0
 208              		.cfi_startproc
 209              		@ args = 0, pretend = 0, frame = 0
 210              		@ frame_needed = 0, uses_anonymous_args = 0
 211              		@ link register save eliminated.
 212              	.LVL4:
 356:Generated_Source\PSoC5/SPIS.c ****     SPIS_TX_STATUS_MASK_REG  = intSrc;
 213              		.loc 1 356 0
 214 0000 014B     		ldr	r3, .L18
ARM GAS  C:\Users\Mathias\AppData\Local\Temp\ccH8Ni7h.s 			page 11


 215 0002 1870     		strb	r0, [r3]
 216 0004 7047     		bx	lr
 217              	.L19:
 218 0006 00BF     		.align	2
 219              	.L18:
 220 0008 88650040 		.word	1073767816
 221              		.cfi_endproc
 222              	.LFE8:
 223              		.size	SPIS_SetTxInterruptMode, .-SPIS_SetTxInterruptMode
 224              		.section	.text.SPIS_SetRxInterruptMode,"ax",%progbits
 225              		.align	2
 226              		.global	SPIS_SetRxInterruptMode
 227              		.thumb
 228              		.thumb_func
 229              		.type	SPIS_SetRxInterruptMode, %function
 230              	SPIS_SetRxInterruptMode:
 231              	.LFB9:
 357:Generated_Source\PSoC5/SPIS.c **** }
 358:Generated_Source\PSoC5/SPIS.c **** 
 359:Generated_Source\PSoC5/SPIS.c **** 
 360:Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 361:Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_SetRxInterruptMode
 362:Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 363:Generated_Source\PSoC5/SPIS.c **** *
 364:Generated_Source\PSoC5/SPIS.c **** * Summary:
 365:Generated_Source\PSoC5/SPIS.c **** *  Configure which status bits trigger an interrupt event.
 366:Generated_Source\PSoC5/SPIS.c **** *
 367:Generated_Source\PSoC5/SPIS.c **** * Parameters:
 368:Generated_Source\PSoC5/SPIS.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
 369:Generated_Source\PSoC5/SPIS.c **** *  header file).
 370:Generated_Source\PSoC5/SPIS.c **** *
 371:Generated_Source\PSoC5/SPIS.c **** * Return:
 372:Generated_Source\PSoC5/SPIS.c **** *  None.
 373:Generated_Source\PSoC5/SPIS.c **** *
 374:Generated_Source\PSoC5/SPIS.c **** * Theory:
 375:Generated_Source\PSoC5/SPIS.c **** *  Enables the output of specific status bits to the interrupt controller.
 376:Generated_Source\PSoC5/SPIS.c **** *
 377:Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 378:Generated_Source\PSoC5/SPIS.c **** void SPIS_SetRxInterruptMode(uint8 intSrc) 
 379:Generated_Source\PSoC5/SPIS.c **** {
 232              		.loc 1 379 0
 233              		.cfi_startproc
 234              		@ args = 0, pretend = 0, frame = 0
 235              		@ frame_needed = 0, uses_anonymous_args = 0
 236              		@ link register save eliminated.
 237              	.LVL5:
 380:Generated_Source\PSoC5/SPIS.c ****     SPIS_RX_STATUS_MASK_REG  = intSrc;
 238              		.loc 1 380 0
 239 0000 014B     		ldr	r3, .L21
 240 0002 1870     		strb	r0, [r3]
 241 0004 7047     		bx	lr
 242              	.L22:
 243 0006 00BF     		.align	2
 244              	.L21:
 245 0008 8A640040 		.word	1073767562
 246              		.cfi_endproc
 247              	.LFE9:
ARM GAS  C:\Users\Mathias\AppData\Local\Temp\ccH8Ni7h.s 			page 12


 248              		.size	SPIS_SetRxInterruptMode, .-SPIS_SetRxInterruptMode
 249              		.section	.text.SPIS_ReadTxStatus,"ax",%progbits
 250              		.align	2
 251              		.global	SPIS_ReadTxStatus
 252              		.thumb
 253              		.thumb_func
 254              		.type	SPIS_ReadTxStatus, %function
 255              	SPIS_ReadTxStatus:
 256              	.LFB10:
 381:Generated_Source\PSoC5/SPIS.c **** }
 382:Generated_Source\PSoC5/SPIS.c **** 
 383:Generated_Source\PSoC5/SPIS.c **** 
 384:Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 385:Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_ReadTxStatus
 386:Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 387:Generated_Source\PSoC5/SPIS.c **** *
 388:Generated_Source\PSoC5/SPIS.c **** * Summary:
 389:Generated_Source\PSoC5/SPIS.c **** *  Read the Tx status register for the component.
 390:Generated_Source\PSoC5/SPIS.c **** *
 391:Generated_Source\PSoC5/SPIS.c **** * Parameters:
 392:Generated_Source\PSoC5/SPIS.c **** *  None.
 393:Generated_Source\PSoC5/SPIS.c **** *
 394:Generated_Source\PSoC5/SPIS.c **** * Return:
 395:Generated_Source\PSoC5/SPIS.c **** *  Contents of the Tx status register.
 396:Generated_Source\PSoC5/SPIS.c **** *
 397:Generated_Source\PSoC5/SPIS.c **** * Global variables:
 398:Generated_Source\PSoC5/SPIS.c **** *  SPIS_swStatusTx - used to store in software status register,
 399:Generated_Source\PSoC5/SPIS.c **** *  modified every function call - resets to zero.
 400:Generated_Source\PSoC5/SPIS.c **** *
 401:Generated_Source\PSoC5/SPIS.c **** * Theory:
 402:Generated_Source\PSoC5/SPIS.c **** *  Allows the user and the API to read the Tx status register for error
 403:Generated_Source\PSoC5/SPIS.c **** *  detection and flow control.
 404:Generated_Source\PSoC5/SPIS.c **** *
 405:Generated_Source\PSoC5/SPIS.c **** * Side Effects:
 406:Generated_Source\PSoC5/SPIS.c **** *  Clear Tx status register of the component.
 407:Generated_Source\PSoC5/SPIS.c **** *
 408:Generated_Source\PSoC5/SPIS.c **** * Reentrant:
 409:Generated_Source\PSoC5/SPIS.c **** *  No.
 410:Generated_Source\PSoC5/SPIS.c **** *
 411:Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 412:Generated_Source\PSoC5/SPIS.c **** uint8 SPIS_ReadTxStatus(void) 
 413:Generated_Source\PSoC5/SPIS.c **** {
 257              		.loc 1 413 0
 258              		.cfi_startproc
 259              		@ args = 0, pretend = 0, frame = 0
 260              		@ frame_needed = 0, uses_anonymous_args = 0
 261              		@ link register save eliminated.
 414:Generated_Source\PSoC5/SPIS.c ****     uint8 tmpStatus;
 415:Generated_Source\PSoC5/SPIS.c **** 
 416:Generated_Source\PSoC5/SPIS.c ****     #if (SPIS_TX_SOFTWARE_BUF_ENABLED)
 417:Generated_Source\PSoC5/SPIS.c **** 
 418:Generated_Source\PSoC5/SPIS.c ****         SPIS_DisableTxInt();
 419:Generated_Source\PSoC5/SPIS.c **** 
 420:Generated_Source\PSoC5/SPIS.c ****         tmpStatus = SPIS_GET_STATUS_TX(SPIS_swStatusTx);
 421:Generated_Source\PSoC5/SPIS.c **** 
 422:Generated_Source\PSoC5/SPIS.c ****         SPIS_swStatusTx = 0u;
 423:Generated_Source\PSoC5/SPIS.c **** 
ARM GAS  C:\Users\Mathias\AppData\Local\Temp\ccH8Ni7h.s 			page 13


 424:Generated_Source\PSoC5/SPIS.c ****         /* Enable Interrupts */
 425:Generated_Source\PSoC5/SPIS.c ****         SPIS_EnableTxInt();
 426:Generated_Source\PSoC5/SPIS.c **** 
 427:Generated_Source\PSoC5/SPIS.c ****     #else /* !SPIS_TX_SOFTWARE_BUF_ENABLED */
 428:Generated_Source\PSoC5/SPIS.c **** 
 429:Generated_Source\PSoC5/SPIS.c ****         tmpStatus = SPIS_TX_STATUS_REG;
 262              		.loc 1 429 0
 263 0000 014B     		ldr	r3, .L24
 264 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 265              	.LVL6:
 430:Generated_Source\PSoC5/SPIS.c **** 
 431:Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_TX_SOFTWARE_BUF_ENABLED */
 432:Generated_Source\PSoC5/SPIS.c **** 
 433:Generated_Source\PSoC5/SPIS.c ****     return(tmpStatus);
 434:Generated_Source\PSoC5/SPIS.c **** }
 266              		.loc 1 434 0
 267 0004 7047     		bx	lr
 268              	.L25:
 269 0006 00BF     		.align	2
 270              	.L24:
 271 0008 68650040 		.word	1073767784
 272              		.cfi_endproc
 273              	.LFE10:
 274              		.size	SPIS_ReadTxStatus, .-SPIS_ReadTxStatus
 275              		.section	.text.SPIS_ReadRxStatus,"ax",%progbits
 276              		.align	2
 277              		.global	SPIS_ReadRxStatus
 278              		.thumb
 279              		.thumb_func
 280              		.type	SPIS_ReadRxStatus, %function
 281              	SPIS_ReadRxStatus:
 282              	.LFB11:
 435:Generated_Source\PSoC5/SPIS.c **** 
 436:Generated_Source\PSoC5/SPIS.c **** 
 437:Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 438:Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_ReadRxStatus
 439:Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 440:Generated_Source\PSoC5/SPIS.c **** *
 441:Generated_Source\PSoC5/SPIS.c **** * Summary:
 442:Generated_Source\PSoC5/SPIS.c **** *  Read the Rx status register for the component.
 443:Generated_Source\PSoC5/SPIS.c **** *
 444:Generated_Source\PSoC5/SPIS.c **** * Parameters:
 445:Generated_Source\PSoC5/SPIS.c **** *  None.
 446:Generated_Source\PSoC5/SPIS.c **** *
 447:Generated_Source\PSoC5/SPIS.c **** * Return:
 448:Generated_Source\PSoC5/SPIS.c **** *  Contents of the Rx status register.
 449:Generated_Source\PSoC5/SPIS.c **** *
 450:Generated_Source\PSoC5/SPIS.c **** * Global variables:
 451:Generated_Source\PSoC5/SPIS.c **** *  SPIS_swStatusRx - used to store in software Rx status register,
 452:Generated_Source\PSoC5/SPIS.c **** *  modified every function call - resets to zero.
 453:Generated_Source\PSoC5/SPIS.c **** *
 454:Generated_Source\PSoC5/SPIS.c **** * Theory:
 455:Generated_Source\PSoC5/SPIS.c **** *  Allows the user and the API to read the Rx status register for error
 456:Generated_Source\PSoC5/SPIS.c **** *  detection and flow control.
 457:Generated_Source\PSoC5/SPIS.c **** *
 458:Generated_Source\PSoC5/SPIS.c **** * Side Effects:
 459:Generated_Source\PSoC5/SPIS.c **** *  Clear Rx status register of the component.
ARM GAS  C:\Users\Mathias\AppData\Local\Temp\ccH8Ni7h.s 			page 14


 460:Generated_Source\PSoC5/SPIS.c **** *
 461:Generated_Source\PSoC5/SPIS.c **** * Reentrant:
 462:Generated_Source\PSoC5/SPIS.c **** *  No.
 463:Generated_Source\PSoC5/SPIS.c **** *
 464:Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 465:Generated_Source\PSoC5/SPIS.c **** uint8 SPIS_ReadRxStatus(void) 
 466:Generated_Source\PSoC5/SPIS.c **** {
 283              		.loc 1 466 0
 284              		.cfi_startproc
 285              		@ args = 0, pretend = 0, frame = 0
 286              		@ frame_needed = 0, uses_anonymous_args = 0
 287 0000 10B5     		push	{r4, lr}
 288              		.cfi_def_cfa_offset 8
 289              		.cfi_offset 4, -8
 290              		.cfi_offset 14, -4
 467:Generated_Source\PSoC5/SPIS.c ****     uint8 tmpStatus;
 468:Generated_Source\PSoC5/SPIS.c **** 
 469:Generated_Source\PSoC5/SPIS.c ****     #if (SPIS_RX_SOFTWARE_BUF_ENABLED)
 470:Generated_Source\PSoC5/SPIS.c **** 
 471:Generated_Source\PSoC5/SPIS.c ****         SPIS_DisableRxInt();
 291              		.loc 1 471 0
 292 0002 FFF7FEFF 		bl	SPIS_DisableRxInt
 293              	.LVL7:
 472:Generated_Source\PSoC5/SPIS.c **** 
 473:Generated_Source\PSoC5/SPIS.c ****         tmpStatus = SPIS_GET_STATUS_RX(SPIS_swStatusRx);
 294              		.loc 1 473 0
 295 0006 064B     		ldr	r3, .L28
 296 0008 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 297 000a 064A     		ldr	r2, .L28+4
 298 000c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 299 000e 03F06103 		and	r3, r3, #97
 300 0012 1C43     		orrs	r4, r4, r3
 301              	.LVL8:
 474:Generated_Source\PSoC5/SPIS.c **** 
 475:Generated_Source\PSoC5/SPIS.c ****         SPIS_swStatusRx = 0u;
 302              		.loc 1 475 0
 303 0014 0023     		movs	r3, #0
 304 0016 1370     		strb	r3, [r2]
 476:Generated_Source\PSoC5/SPIS.c **** 
 477:Generated_Source\PSoC5/SPIS.c ****         /* Enable Interrupts */
 478:Generated_Source\PSoC5/SPIS.c ****         SPIS_EnableRxInt();
 305              		.loc 1 478 0
 306 0018 FFF7FEFF 		bl	SPIS_EnableRxInt
 307              	.LVL9:
 479:Generated_Source\PSoC5/SPIS.c **** 
 480:Generated_Source\PSoC5/SPIS.c ****     #else /* !SPIS_RX_SOFTWARE_BUF_ENABLED */
 481:Generated_Source\PSoC5/SPIS.c **** 
 482:Generated_Source\PSoC5/SPIS.c ****         tmpStatus = SPIS_RX_STATUS_REG;
 483:Generated_Source\PSoC5/SPIS.c **** 
 484:Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_RX_SOFTWARE_BUF_ENABLED */
 485:Generated_Source\PSoC5/SPIS.c **** 
 486:Generated_Source\PSoC5/SPIS.c ****     return(tmpStatus);
 487:Generated_Source\PSoC5/SPIS.c **** }
 308              		.loc 1 487 0
 309 001c 2046     		mov	r0, r4
 310 001e 10BD     		pop	{r4, pc}
 311              	.LVL10:
ARM GAS  C:\Users\Mathias\AppData\Local\Temp\ccH8Ni7h.s 			page 15


 312              	.L29:
 313              		.align	2
 314              	.L28:
 315 0020 6A640040 		.word	1073767530
 316 0024 00000000 		.word	SPIS_swStatusRx
 317              		.cfi_endproc
 318              	.LFE11:
 319              		.size	SPIS_ReadRxStatus, .-SPIS_ReadRxStatus
 320              		.section	.text.SPIS_WriteTxData,"ax",%progbits
 321              		.align	2
 322              		.global	SPIS_WriteTxData
 323              		.thumb
 324              		.thumb_func
 325              		.type	SPIS_WriteTxData, %function
 326              	SPIS_WriteTxData:
 327              	.LFB12:
 488:Generated_Source\PSoC5/SPIS.c **** 
 489:Generated_Source\PSoC5/SPIS.c **** 
 490:Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 491:Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_WriteTxData
 492:Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 493:Generated_Source\PSoC5/SPIS.c **** *
 494:Generated_Source\PSoC5/SPIS.c **** * Summary:
 495:Generated_Source\PSoC5/SPIS.c **** *  Write a byte of data to be sent across the SPI.
 496:Generated_Source\PSoC5/SPIS.c **** *
 497:Generated_Source\PSoC5/SPIS.c **** * Parameters:
 498:Generated_Source\PSoC5/SPIS.c **** *  txDataByte: The data value to send across the SPI.
 499:Generated_Source\PSoC5/SPIS.c **** *
 500:Generated_Source\PSoC5/SPIS.c **** * Return:
 501:Generated_Source\PSoC5/SPIS.c **** *  None.
 502:Generated_Source\PSoC5/SPIS.c **** *
 503:Generated_Source\PSoC5/SPIS.c **** * Global variables:
 504:Generated_Source\PSoC5/SPIS.c **** *  SPIS_txBufferWrite - used for the account of the bytes which
 505:Generated_Source\PSoC5/SPIS.c **** *  have been written down in the TX software buffer, modified every function
 506:Generated_Source\PSoC5/SPIS.c **** *  call if TX Software Buffer is used.
 507:Generated_Source\PSoC5/SPIS.c **** *  SPIS_txBufferRead - used for the account of the bytes which
 508:Generated_Source\PSoC5/SPIS.c **** *  have been read from the TX software buffer.
 509:Generated_Source\PSoC5/SPIS.c **** *  SPIS_txBuffer[SPIS_TX_BUFFER_SIZE] - used to store
 510:Generated_Source\PSoC5/SPIS.c **** *  data to sending, modified every function call if TX Software Buffer is used.
 511:Generated_Source\PSoC5/SPIS.c **** *
 512:Generated_Source\PSoC5/SPIS.c **** * Theory:
 513:Generated_Source\PSoC5/SPIS.c **** *  Allows the user to transmit any byte of data in a single transfer.
 514:Generated_Source\PSoC5/SPIS.c **** *
 515:Generated_Source\PSoC5/SPIS.c **** * Side Effects:
 516:Generated_Source\PSoC5/SPIS.c **** *  If this function is called again before the previous byte is finished then
 517:Generated_Source\PSoC5/SPIS.c **** *  the next byte will be appended to the transfer with no time between
 518:Generated_Source\PSoC5/SPIS.c **** *  the byte transfers. Clear Tx status register of the component.
 519:Generated_Source\PSoC5/SPIS.c **** *
 520:Generated_Source\PSoC5/SPIS.c **** * Reentrant:
 521:Generated_Source\PSoC5/SPIS.c **** *  No.
 522:Generated_Source\PSoC5/SPIS.c **** *
 523:Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 524:Generated_Source\PSoC5/SPIS.c **** void SPIS_WriteTxData(uint8 txData) 
 525:Generated_Source\PSoC5/SPIS.c **** {
 328              		.loc 1 525 0
 329              		.cfi_startproc
 330              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Mathias\AppData\Local\Temp\ccH8Ni7h.s 			page 16


 331              		@ frame_needed = 0, uses_anonymous_args = 0
 332              		@ link register save eliminated.
 333              	.LVL11:
 334              	.L31:
 526:Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_TX_SOFTWARE_BUF_ENABLED)
 527:Generated_Source\PSoC5/SPIS.c **** 
 528:Generated_Source\PSoC5/SPIS.c ****         uint8 tempStatus;
 529:Generated_Source\PSoC5/SPIS.c ****         uint8 tmpTxBufferRead;
 530:Generated_Source\PSoC5/SPIS.c **** 
 531:Generated_Source\PSoC5/SPIS.c ****         /* Block if buffer is full, so we don't overwrite. */
 532:Generated_Source\PSoC5/SPIS.c ****         do
 533:Generated_Source\PSoC5/SPIS.c ****         {
 534:Generated_Source\PSoC5/SPIS.c ****             tmpTxBufferRead = SPIS_txBufferRead;
 535:Generated_Source\PSoC5/SPIS.c ****             if (0u == tmpTxBufferRead)
 536:Generated_Source\PSoC5/SPIS.c ****             {
 537:Generated_Source\PSoC5/SPIS.c ****                 tmpTxBufferRead = SPIS_TX_BUFFER_SIZE - 1u;
 538:Generated_Source\PSoC5/SPIS.c ****             }
 539:Generated_Source\PSoC5/SPIS.c ****             else
 540:Generated_Source\PSoC5/SPIS.c ****             {
 541:Generated_Source\PSoC5/SPIS.c ****                 tmpTxBufferRead--;
 542:Generated_Source\PSoC5/SPIS.c ****             }
 543:Generated_Source\PSoC5/SPIS.c **** 
 544:Generated_Source\PSoC5/SPIS.c ****         }
 545:Generated_Source\PSoC5/SPIS.c ****         while(tmpTxBufferRead == SPIS_txBufferWrite);
 546:Generated_Source\PSoC5/SPIS.c **** 
 547:Generated_Source\PSoC5/SPIS.c ****         /* Disable Interrupt to protect variables that could change on interrupt. */
 548:Generated_Source\PSoC5/SPIS.c ****         SPIS_DisableTxInt();
 549:Generated_Source\PSoC5/SPIS.c **** 
 550:Generated_Source\PSoC5/SPIS.c ****         tempStatus = SPIS_GET_STATUS_TX(SPIS_swStatusTx);
 551:Generated_Source\PSoC5/SPIS.c ****         SPIS_swStatusTx = tempStatus;
 552:Generated_Source\PSoC5/SPIS.c **** 
 553:Generated_Source\PSoC5/SPIS.c ****         if((SPIS_txBufferRead == SPIS_txBufferWrite) &&
 554:Generated_Source\PSoC5/SPIS.c ****             (0u != (SPIS_swStatusTx & SPIS_STS_TX_FIFO_NOT_FULL)))
 555:Generated_Source\PSoC5/SPIS.c ****         {
 556:Generated_Source\PSoC5/SPIS.c ****             /* Put data element into the TX FIFO */
 557:Generated_Source\PSoC5/SPIS.c ****             CY_SET_REG8(SPIS_TXDATA_PTR, txData);
 558:Generated_Source\PSoC5/SPIS.c ****         }
 559:Generated_Source\PSoC5/SPIS.c ****         else
 560:Generated_Source\PSoC5/SPIS.c ****         {
 561:Generated_Source\PSoC5/SPIS.c ****             /* Put data element into the software buffer */
 562:Generated_Source\PSoC5/SPIS.c ****             SPIS_txBufferWrite++;
 563:Generated_Source\PSoC5/SPIS.c ****             if(SPIS_txBufferWrite >= SPIS_TX_BUFFER_SIZE)
 564:Generated_Source\PSoC5/SPIS.c ****             {
 565:Generated_Source\PSoC5/SPIS.c ****                 SPIS_txBufferWrite = 0u;
 566:Generated_Source\PSoC5/SPIS.c ****             }
 567:Generated_Source\PSoC5/SPIS.c **** 
 568:Generated_Source\PSoC5/SPIS.c ****             if(SPIS_txBufferWrite == SPIS_txBufferRead)
 569:Generated_Source\PSoC5/SPIS.c ****             {
 570:Generated_Source\PSoC5/SPIS.c ****                 SPIS_txBufferRead++;
 571:Generated_Source\PSoC5/SPIS.c ****                 if(SPIS_txBufferRead >= SPIS_RX_BUFFER_SIZE)
 572:Generated_Source\PSoC5/SPIS.c ****                 {
 573:Generated_Source\PSoC5/SPIS.c ****                     SPIS_txBufferRead = 0u;
 574:Generated_Source\PSoC5/SPIS.c ****                 }
 575:Generated_Source\PSoC5/SPIS.c ****                 SPIS_txBufferFull = 1u;
 576:Generated_Source\PSoC5/SPIS.c ****             }
 577:Generated_Source\PSoC5/SPIS.c **** 
 578:Generated_Source\PSoC5/SPIS.c ****             SPIS_txBuffer[SPIS_txBufferWrite] = txData;
ARM GAS  C:\Users\Mathias\AppData\Local\Temp\ccH8Ni7h.s 			page 17


 579:Generated_Source\PSoC5/SPIS.c **** 
 580:Generated_Source\PSoC5/SPIS.c ****             SPIS_TX_STATUS_MASK_REG |= SPIS_STS_TX_FIFO_NOT_FULL;
 581:Generated_Source\PSoC5/SPIS.c ****         }
 582:Generated_Source\PSoC5/SPIS.c **** 
 583:Generated_Source\PSoC5/SPIS.c ****         /* Enable Interrupt. */
 584:Generated_Source\PSoC5/SPIS.c ****         SPIS_EnableTxInt();
 585:Generated_Source\PSoC5/SPIS.c **** 
 586:Generated_Source\PSoC5/SPIS.c ****     #else /* !SPIS_TX_SOFTWARE_BUF_ENABLED */
 587:Generated_Source\PSoC5/SPIS.c ****         /* Wait until TX FIFO has a place */
 588:Generated_Source\PSoC5/SPIS.c ****         while(0u == (SPIS_TX_STATUS_REG & SPIS_STS_TX_FIFO_NOT_FULL))
 335              		.loc 1 588 0 discriminator 1
 336 0000 034B     		ldr	r3, .L32
 337 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 338 0004 13F0020F 		tst	r3, #2
 339 0008 FAD0     		beq	.L31
 589:Generated_Source\PSoC5/SPIS.c ****         {
 590:Generated_Source\PSoC5/SPIS.c ****         }
 591:Generated_Source\PSoC5/SPIS.c **** 
 592:Generated_Source\PSoC5/SPIS.c ****         /* Put data element into the TX FIFO */
 593:Generated_Source\PSoC5/SPIS.c ****         CY_SET_REG8(SPIS_TXDATA_PTR, txData);
 340              		.loc 1 593 0
 341 000a 024B     		ldr	r3, .L32+4
 342 000c 1870     		strb	r0, [r3]
 343 000e 7047     		bx	lr
 344              	.L33:
 345              		.align	2
 346              	.L32:
 347 0010 68650040 		.word	1073767784
 348 0014 48640040 		.word	1073767496
 349              		.cfi_endproc
 350              	.LFE12:
 351              		.size	SPIS_WriteTxData, .-SPIS_WriteTxData
 352              		.section	.text.SPIS_WriteTxDataZero,"ax",%progbits
 353              		.align	2
 354              		.global	SPIS_WriteTxDataZero
 355              		.thumb
 356              		.thumb_func
 357              		.type	SPIS_WriteTxDataZero, %function
 358              	SPIS_WriteTxDataZero:
 359              	.LFB13:
 594:Generated_Source\PSoC5/SPIS.c ****         
 595:Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_TX_SOFTWARE_BUF_ENABLED */
 596:Generated_Source\PSoC5/SPIS.c **** }
 597:Generated_Source\PSoC5/SPIS.c **** 
 598:Generated_Source\PSoC5/SPIS.c **** #if(SPIS_MODE_USE_ZERO != 0u)
 599:Generated_Source\PSoC5/SPIS.c **** 
 600:Generated_Source\PSoC5/SPIS.c ****     /*******************************************************************************
 601:Generated_Source\PSoC5/SPIS.c ****     * Function Name: SPIS_WriteTxDataZero
 602:Generated_Source\PSoC5/SPIS.c ****     ********************************************************************************
 603:Generated_Source\PSoC5/SPIS.c ****     *
 604:Generated_Source\PSoC5/SPIS.c ****     * Summary:
 605:Generated_Source\PSoC5/SPIS.c ****     *  Write a byte zero of data to be sent across the SPI. This must be used in
 606:Generated_Source\PSoC5/SPIS.c ****     *  Mode 00 and 01 if the FIFO is empty and data is not being sent.
 607:Generated_Source\PSoC5/SPIS.c ****     *
 608:Generated_Source\PSoC5/SPIS.c ****     * Parameters:
 609:Generated_Source\PSoC5/SPIS.c ****     *  txDataByte: The data value to send across the SPI.
 610:Generated_Source\PSoC5/SPIS.c ****     *
ARM GAS  C:\Users\Mathias\AppData\Local\Temp\ccH8Ni7h.s 			page 18


 611:Generated_Source\PSoC5/SPIS.c ****     * Return:
 612:Generated_Source\PSoC5/SPIS.c ****     *  None.
 613:Generated_Source\PSoC5/SPIS.c ****     *
 614:Generated_Source\PSoC5/SPIS.c ****     * Theory:
 615:Generated_Source\PSoC5/SPIS.c ****     *  Allows the user to transmit any byte of data in a single transfer. Clear
 616:Generated_Source\PSoC5/SPIS.c ****     *  status register of the component.
 617:Generated_Source\PSoC5/SPIS.c ****     *
 618:Generated_Source\PSoC5/SPIS.c ****     *******************************************************************************/
 619:Generated_Source\PSoC5/SPIS.c ****     void SPIS_WriteTxDataZero(uint8 txDataByte)
 620:Generated_Source\PSoC5/SPIS.c ****                                         
 621:Generated_Source\PSoC5/SPIS.c ****     {
 360              		.loc 1 621 0
 361              		.cfi_startproc
 362              		@ args = 0, pretend = 0, frame = 0
 363              		@ frame_needed = 0, uses_anonymous_args = 0
 364              		@ link register save eliminated.
 365              	.LVL12:
 622:Generated_Source\PSoC5/SPIS.c ****         CY_SET_REG8(SPIS_TXDATA_ZERO_PTR, txDataByte);
 366              		.loc 1 622 0
 367 0000 014B     		ldr	r3, .L35
 368 0002 1870     		strb	r0, [r3]
 369 0004 7047     		bx	lr
 370              	.L36:
 371 0006 00BF     		.align	2
 372              	.L35:
 373 0008 08640040 		.word	1073767432
 374              		.cfi_endproc
 375              	.LFE13:
 376              		.size	SPIS_WriteTxDataZero, .-SPIS_WriteTxDataZero
 377              		.section	.text.SPIS_ReadRxData,"ax",%progbits
 378              		.align	2
 379              		.global	SPIS_ReadRxData
 380              		.thumb
 381              		.thumb_func
 382              		.type	SPIS_ReadRxData, %function
 383              	SPIS_ReadRxData:
 384              	.LFB14:
 623:Generated_Source\PSoC5/SPIS.c ****     }
 624:Generated_Source\PSoC5/SPIS.c **** 
 625:Generated_Source\PSoC5/SPIS.c **** #endif /* (SPIS_MODE_USE_ZERO != 0u) */
 626:Generated_Source\PSoC5/SPIS.c **** 
 627:Generated_Source\PSoC5/SPIS.c **** 
 628:Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 629:Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_ReadRxData
 630:Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 631:Generated_Source\PSoC5/SPIS.c **** *
 632:Generated_Source\PSoC5/SPIS.c **** * Summary:
 633:Generated_Source\PSoC5/SPIS.c **** *  Read the next byte of data received across the SPI.
 634:Generated_Source\PSoC5/SPIS.c **** *
 635:Generated_Source\PSoC5/SPIS.c **** * Parameters:
 636:Generated_Source\PSoC5/SPIS.c **** *  None.
 637:Generated_Source\PSoC5/SPIS.c **** *
 638:Generated_Source\PSoC5/SPIS.c **** * Return:
 639:Generated_Source\PSoC5/SPIS.c **** *  The next byte of data read from the FIFO.
 640:Generated_Source\PSoC5/SPIS.c **** *
 641:Generated_Source\PSoC5/SPIS.c **** * Global variables:
 642:Generated_Source\PSoC5/SPIS.c **** *  SPIS_rxBufferWrite - used for the account of the bytes which
ARM GAS  C:\Users\Mathias\AppData\Local\Temp\ccH8Ni7h.s 			page 19


 643:Generated_Source\PSoC5/SPIS.c **** *  have been written down in the RX software buffer.
 644:Generated_Source\PSoC5/SPIS.c **** *  SPIS_rxBufferRead - used for the account of the bytes which
 645:Generated_Source\PSoC5/SPIS.c **** *  have been read from the RX software buffer, modified every function
 646:Generated_Source\PSoC5/SPIS.c **** *  call if RX Software Buffer is used.
 647:Generated_Source\PSoC5/SPIS.c **** *  SPIS_rxBuffer[SPIS_RX_BUFFER_SIZE] - used to store
 648:Generated_Source\PSoC5/SPIS.c **** *  received data.
 649:Generated_Source\PSoC5/SPIS.c **** *
 650:Generated_Source\PSoC5/SPIS.c **** * Theory:
 651:Generated_Source\PSoC5/SPIS.c **** *  Allows the user to read a byte of data received.
 652:Generated_Source\PSoC5/SPIS.c **** *
 653:Generated_Source\PSoC5/SPIS.c **** * Side Effects:
 654:Generated_Source\PSoC5/SPIS.c **** *  Will return invalid data if the FIFO is empty.  User should poll for FIFO
 655:Generated_Source\PSoC5/SPIS.c **** *  empty status before calling Read function.
 656:Generated_Source\PSoC5/SPIS.c **** *
 657:Generated_Source\PSoC5/SPIS.c **** * Reentrant:
 658:Generated_Source\PSoC5/SPIS.c **** *  No.
 659:Generated_Source\PSoC5/SPIS.c **** *
 660:Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 661:Generated_Source\PSoC5/SPIS.c **** uint8 SPIS_ReadRxData(void) 
 662:Generated_Source\PSoC5/SPIS.c **** {
 385              		.loc 1 662 0
 386              		.cfi_startproc
 387              		@ args = 0, pretend = 0, frame = 0
 388              		@ frame_needed = 0, uses_anonymous_args = 0
 389 0000 10B5     		push	{r4, lr}
 390              		.cfi_def_cfa_offset 8
 391              		.cfi_offset 4, -8
 392              		.cfi_offset 14, -4
 663:Generated_Source\PSoC5/SPIS.c ****     uint8 rxData;
 664:Generated_Source\PSoC5/SPIS.c **** 
 665:Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_RX_SOFTWARE_BUF_ENABLED)
 666:Generated_Source\PSoC5/SPIS.c **** 
 667:Generated_Source\PSoC5/SPIS.c ****         /* Disable Interrupt to protect variables that could change on interrupt. */
 668:Generated_Source\PSoC5/SPIS.c ****         SPIS_DisableRxInt();
 393              		.loc 1 668 0
 394 0002 FFF7FEFF 		bl	SPIS_DisableRxInt
 395              	.LVL13:
 669:Generated_Source\PSoC5/SPIS.c **** 
 670:Generated_Source\PSoC5/SPIS.c ****         if(SPIS_rxBufferRead != SPIS_rxBufferWrite)
 396              		.loc 1 670 0
 397 0006 134B     		ldr	r3, .L41
 398 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 399 000a D2B2     		uxtb	r2, r2
 400 000c 124B     		ldr	r3, .L41+4
 401 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 402 0010 DBB2     		uxtb	r3, r3
 403 0012 9A42     		cmp	r2, r3
 404 0014 14D0     		beq	.L38
 671:Generated_Source\PSoC5/SPIS.c ****         {
 672:Generated_Source\PSoC5/SPIS.c ****             if(SPIS_rxBufferFull == 0u)
 405              		.loc 1 672 0
 406 0016 114B     		ldr	r3, .L41+8
 407 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 408 001a 13F0FF0F 		tst	r3, #255
 409 001e 0CD1     		bne	.L39
 673:Generated_Source\PSoC5/SPIS.c ****             {
 674:Generated_Source\PSoC5/SPIS.c ****                 SPIS_rxBufferRead++;
ARM GAS  C:\Users\Mathias\AppData\Local\Temp\ccH8Ni7h.s 			page 20


 410              		.loc 1 674 0
 411 0020 0C4A     		ldr	r2, .L41
 412 0022 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 413 0024 0133     		adds	r3, r3, #1
 414 0026 DBB2     		uxtb	r3, r3
 415 0028 1370     		strb	r3, [r2]
 675:Generated_Source\PSoC5/SPIS.c ****                 if(SPIS_rxBufferRead >= SPIS_RX_BUFFER_SIZE)
 416              		.loc 1 675 0
 417 002a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 418 002c DBB2     		uxtb	r3, r3
 419 002e 072B     		cmp	r3, #7
 420 0030 06D9     		bls	.L38
 676:Generated_Source\PSoC5/SPIS.c ****                 {
 677:Generated_Source\PSoC5/SPIS.c ****                     SPIS_rxBufferRead = 0u;
 421              		.loc 1 677 0
 422 0032 0022     		movs	r2, #0
 423 0034 074B     		ldr	r3, .L41
 424 0036 1A70     		strb	r2, [r3]
 425 0038 02E0     		b	.L38
 426              	.L39:
 678:Generated_Source\PSoC5/SPIS.c ****                 }
 679:Generated_Source\PSoC5/SPIS.c ****             }
 680:Generated_Source\PSoC5/SPIS.c ****             else
 681:Generated_Source\PSoC5/SPIS.c ****             {
 682:Generated_Source\PSoC5/SPIS.c ****                 SPIS_rxBufferFull = 0u;
 427              		.loc 1 682 0
 428 003a 0022     		movs	r2, #0
 429 003c 074B     		ldr	r3, .L41+8
 430 003e 1A70     		strb	r2, [r3]
 431              	.L38:
 683:Generated_Source\PSoC5/SPIS.c ****             }
 684:Generated_Source\PSoC5/SPIS.c ****         }
 685:Generated_Source\PSoC5/SPIS.c **** 
 686:Generated_Source\PSoC5/SPIS.c ****         rxData = SPIS_rxBuffer[SPIS_rxBufferRead];
 432              		.loc 1 686 0
 433 0040 044B     		ldr	r3, .L41
 434 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 435 0044 DBB2     		uxtb	r3, r3
 436 0046 064A     		ldr	r2, .L41+12
 437 0048 D45C     		ldrb	r4, [r2, r3]	@ zero_extendqisi2
 438 004a E4B2     		uxtb	r4, r4
 439              	.LVL14:
 687:Generated_Source\PSoC5/SPIS.c **** 
 688:Generated_Source\PSoC5/SPIS.c ****         /* Enable Interrupt. */
 689:Generated_Source\PSoC5/SPIS.c ****         SPIS_EnableRxInt();
 440              		.loc 1 689 0
 441 004c FFF7FEFF 		bl	SPIS_EnableRxInt
 442              	.LVL15:
 690:Generated_Source\PSoC5/SPIS.c **** 
 691:Generated_Source\PSoC5/SPIS.c ****     #else /* !SPIS_RX_SOFTWARE_BUF_ENABLED */
 692:Generated_Source\PSoC5/SPIS.c **** 
 693:Generated_Source\PSoC5/SPIS.c ****         rxData = CY_GET_REG8(SPIS_RXDATA_PTR);
 694:Generated_Source\PSoC5/SPIS.c **** 
 695:Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_RX_SOFTWARE_BUF_ENABLED */
 696:Generated_Source\PSoC5/SPIS.c **** 
 697:Generated_Source\PSoC5/SPIS.c ****     return (rxData);
 698:Generated_Source\PSoC5/SPIS.c **** 
ARM GAS  C:\Users\Mathias\AppData\Local\Temp\ccH8Ni7h.s 			page 21


 699:Generated_Source\PSoC5/SPIS.c **** }
 443              		.loc 1 699 0
 444 0050 2046     		mov	r0, r4
 445 0052 10BD     		pop	{r4, pc}
 446              	.LVL16:
 447              	.L42:
 448              		.align	2
 449              	.L41:
 450 0054 00000000 		.word	SPIS_rxBufferRead
 451 0058 00000000 		.word	SPIS_rxBufferWrite
 452 005c 00000000 		.word	SPIS_rxBufferFull
 453 0060 00000000 		.word	SPIS_rxBuffer
 454              		.cfi_endproc
 455              	.LFE14:
 456              		.size	SPIS_ReadRxData, .-SPIS_ReadRxData
 457              		.section	.text.SPIS_GetRxBufferSize,"ax",%progbits
 458              		.align	2
 459              		.global	SPIS_GetRxBufferSize
 460              		.thumb
 461              		.thumb_func
 462              		.type	SPIS_GetRxBufferSize, %function
 463              	SPIS_GetRxBufferSize:
 464              	.LFB15:
 700:Generated_Source\PSoC5/SPIS.c **** 
 701:Generated_Source\PSoC5/SPIS.c **** 
 702:Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 703:Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_GetRxBufferSize
 704:Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 705:Generated_Source\PSoC5/SPIS.c **** *
 706:Generated_Source\PSoC5/SPIS.c **** * Summary:
 707:Generated_Source\PSoC5/SPIS.c **** *  Returns the number of bytes/words of data currently held in the RX buffer.
 708:Generated_Source\PSoC5/SPIS.c **** *  If RX Software Buffer not used then function return 0 if FIFO empty or 1 if
 709:Generated_Source\PSoC5/SPIS.c **** *  FIFO not empty. In another case function return size of RX Software Buffer.
 710:Generated_Source\PSoC5/SPIS.c **** *
 711:Generated_Source\PSoC5/SPIS.c **** * Parameters:
 712:Generated_Source\PSoC5/SPIS.c **** *  None.
 713:Generated_Source\PSoC5/SPIS.c **** *
 714:Generated_Source\PSoC5/SPIS.c **** * Return:
 715:Generated_Source\PSoC5/SPIS.c **** *  Integer count of the number of bytes/words in the RX buffer.
 716:Generated_Source\PSoC5/SPIS.c **** *
 717:Generated_Source\PSoC5/SPIS.c **** * Global variables:
 718:Generated_Source\PSoC5/SPIS.c **** *  SPIS_rxBufferWrite - used for the account of the bytes which
 719:Generated_Source\PSoC5/SPIS.c **** *  have been written down in the RX software buffer.
 720:Generated_Source\PSoC5/SPIS.c **** *  SPIS_rxBufferRead - used for the account of the bytes which
 721:Generated_Source\PSoC5/SPIS.c **** *  have been read from the RX software buffer.
 722:Generated_Source\PSoC5/SPIS.c **** *
 723:Generated_Source\PSoC5/SPIS.c **** * Theory:
 724:Generated_Source\PSoC5/SPIS.c **** *  Allows the user to find out how full the RX Buffer is.
 725:Generated_Source\PSoC5/SPIS.c **** *
 726:Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 727:Generated_Source\PSoC5/SPIS.c **** uint8 SPIS_GetRxBufferSize(void) 
 728:Generated_Source\PSoC5/SPIS.c **** {
 465              		.loc 1 728 0
 466              		.cfi_startproc
 467              		@ args = 0, pretend = 0, frame = 0
 468              		@ frame_needed = 0, uses_anonymous_args = 0
 469 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\Mathias\AppData\Local\Temp\ccH8Ni7h.s 			page 22


 470              		.cfi_def_cfa_offset 8
 471              		.cfi_offset 4, -8
 472              		.cfi_offset 14, -4
 729:Generated_Source\PSoC5/SPIS.c ****     uint8 size;
 730:Generated_Source\PSoC5/SPIS.c **** 
 731:Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_RX_SOFTWARE_BUF_ENABLED)
 732:Generated_Source\PSoC5/SPIS.c **** 
 733:Generated_Source\PSoC5/SPIS.c ****         /* Disable Interrupt to protect variables that could change on interrupt. */
 734:Generated_Source\PSoC5/SPIS.c ****         SPIS_DisableRxInt();
 473              		.loc 1 734 0
 474 0002 FFF7FEFF 		bl	SPIS_DisableRxInt
 475              	.LVL17:
 735:Generated_Source\PSoC5/SPIS.c **** 
 736:Generated_Source\PSoC5/SPIS.c ****         if(SPIS_rxBufferRead == SPIS_rxBufferWrite)
 476              		.loc 1 736 0
 477 0006 124B     		ldr	r3, .L48
 478 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 479 000a D2B2     		uxtb	r2, r2
 480 000c 114B     		ldr	r3, .L48+4
 481 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 482 0010 DBB2     		uxtb	r3, r3
 483 0012 9A42     		cmp	r2, r3
 484 0014 16D0     		beq	.L46
 737:Generated_Source\PSoC5/SPIS.c ****         {
 738:Generated_Source\PSoC5/SPIS.c ****             size = 0u; /* No data in RX buffer */
 739:Generated_Source\PSoC5/SPIS.c ****         }
 740:Generated_Source\PSoC5/SPIS.c ****         else if(SPIS_rxBufferRead < SPIS_rxBufferWrite)
 485              		.loc 1 740 0
 486 0016 0E4B     		ldr	r3, .L48
 487 0018 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 488 001a D2B2     		uxtb	r2, r2
 489 001c 0D4B     		ldr	r3, .L48+4
 490 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 491 0020 DBB2     		uxtb	r3, r3
 492 0022 9A42     		cmp	r2, r3
 493 0024 06D2     		bcs	.L45
 741:Generated_Source\PSoC5/SPIS.c ****         {
 742:Generated_Source\PSoC5/SPIS.c ****             size = (SPIS_rxBufferWrite - SPIS_rxBufferRead);
 494              		.loc 1 742 0
 495 0026 0B4B     		ldr	r3, .L48+4
 496 0028 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 497 002a 094A     		ldr	r2, .L48
 498 002c 1478     		ldrb	r4, [r2]	@ zero_extendqisi2
 499 002e 1C1B     		subs	r4, r3, r4
 500 0030 E4B2     		uxtb	r4, r4
 501              	.LVL18:
 502 0032 08E0     		b	.L44
 503              	.LVL19:
 504              	.L45:
 743:Generated_Source\PSoC5/SPIS.c ****         }
 744:Generated_Source\PSoC5/SPIS.c ****         else
 745:Generated_Source\PSoC5/SPIS.c ****         {
 746:Generated_Source\PSoC5/SPIS.c ****             size = (SPIS_RX_BUFFER_SIZE - SPIS_rxBufferRead) + SPIS_rxBufferWrite;
 505              		.loc 1 746 0
 506 0034 074B     		ldr	r3, .L48+4
 507 0036 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 508 0038 054A     		ldr	r2, .L48
ARM GAS  C:\Users\Mathias\AppData\Local\Temp\ccH8Ni7h.s 			page 23


 509 003a 1478     		ldrb	r4, [r2]	@ zero_extendqisi2
 510 003c 1C1B     		subs	r4, r3, r4
 511 003e 0834     		adds	r4, r4, #8
 512 0040 E4B2     		uxtb	r4, r4
 513              	.LVL20:
 514 0042 00E0     		b	.L44
 515              	.LVL21:
 516              	.L46:
 738:Generated_Source\PSoC5/SPIS.c ****         }
 517              		.loc 1 738 0
 518 0044 0024     		movs	r4, #0
 519              	.L44:
 520              	.LVL22:
 747:Generated_Source\PSoC5/SPIS.c ****         }
 748:Generated_Source\PSoC5/SPIS.c **** 
 749:Generated_Source\PSoC5/SPIS.c ****         /* Enable interrupt. */
 750:Generated_Source\PSoC5/SPIS.c ****         SPIS_EnableRxInt();
 521              		.loc 1 750 0
 522 0046 FFF7FEFF 		bl	SPIS_EnableRxInt
 523              	.LVL23:
 751:Generated_Source\PSoC5/SPIS.c **** 
 752:Generated_Source\PSoC5/SPIS.c ****     #else /* !SPIS_RX_SOFTWARE_BUF_ENABLED*/
 753:Generated_Source\PSoC5/SPIS.c **** 
 754:Generated_Source\PSoC5/SPIS.c ****         /* We can only know if there is data in the fifo. */
 755:Generated_Source\PSoC5/SPIS.c ****         size = ((SPIS_RX_STATUS_REG & SPIS_STS_RX_FIFO_NOT_EMPTY) != 0u) ? 1u : 0u;
 756:Generated_Source\PSoC5/SPIS.c **** 
 757:Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_RX_SOFTWARE_BUF_ENABLED */
 758:Generated_Source\PSoC5/SPIS.c **** 
 759:Generated_Source\PSoC5/SPIS.c ****     return (size);
 760:Generated_Source\PSoC5/SPIS.c **** }
 524              		.loc 1 760 0
 525 004a 2046     		mov	r0, r4
 526 004c 10BD     		pop	{r4, pc}
 527              	.LVL24:
 528              	.L49:
 529 004e 00BF     		.align	2
 530              	.L48:
 531 0050 00000000 		.word	SPIS_rxBufferRead
 532 0054 00000000 		.word	SPIS_rxBufferWrite
 533              		.cfi_endproc
 534              	.LFE15:
 535              		.size	SPIS_GetRxBufferSize, .-SPIS_GetRxBufferSize
 536              		.section	.text.SPIS_GetTxBufferSize,"ax",%progbits
 537              		.align	2
 538              		.global	SPIS_GetTxBufferSize
 539              		.thumb
 540              		.thumb_func
 541              		.type	SPIS_GetTxBufferSize, %function
 542              	SPIS_GetTxBufferSize:
 543              	.LFB16:
 761:Generated_Source\PSoC5/SPIS.c **** 
 762:Generated_Source\PSoC5/SPIS.c **** 
 763:Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 764:Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_GetTxBufferSize
 765:Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 766:Generated_Source\PSoC5/SPIS.c **** *
 767:Generated_Source\PSoC5/SPIS.c **** * Summary:
ARM GAS  C:\Users\Mathias\AppData\Local\Temp\ccH8Ni7h.s 			page 24


 768:Generated_Source\PSoC5/SPIS.c **** *  Returns the number of bytes/words of data currently held in the TX buffer.
 769:Generated_Source\PSoC5/SPIS.c **** *  If TX Software Buffer not used then function return 0 - if FIFO empty, 1 - if
 770:Generated_Source\PSoC5/SPIS.c **** *  FIFO not full, 4 - if FIFO full. In another case function return size of TX
 771:Generated_Source\PSoC5/SPIS.c **** *  Software Buffer.
 772:Generated_Source\PSoC5/SPIS.c **** *
 773:Generated_Source\PSoC5/SPIS.c **** * Parameters:
 774:Generated_Source\PSoC5/SPIS.c **** *  None.
 775:Generated_Source\PSoC5/SPIS.c **** *
 776:Generated_Source\PSoC5/SPIS.c **** * Return:
 777:Generated_Source\PSoC5/SPIS.c **** *  Integer count of the number of bytes/words in the TX buffer.
 778:Generated_Source\PSoC5/SPIS.c **** *
 779:Generated_Source\PSoC5/SPIS.c **** * Global variables:
 780:Generated_Source\PSoC5/SPIS.c **** *  SPIS_txBufferWrite - used for the account of the bytes which
 781:Generated_Source\PSoC5/SPIS.c **** *  have been written down in the TX software buffer.
 782:Generated_Source\PSoC5/SPIS.c **** *  SPIS_txBufferRead - used for the account of the bytes which
 783:Generated_Source\PSoC5/SPIS.c **** *  have been read from the TX software buffer.
 784:Generated_Source\PSoC5/SPIS.c **** *
 785:Generated_Source\PSoC5/SPIS.c **** * Theory:
 786:Generated_Source\PSoC5/SPIS.c **** *  Allows the user to find out how full the TX Buffer is.
 787:Generated_Source\PSoC5/SPIS.c **** *
 788:Generated_Source\PSoC5/SPIS.c **** * Side Effects:
 789:Generated_Source\PSoC5/SPIS.c **** *  Clear status register of the component.
 790:Generated_Source\PSoC5/SPIS.c **** *
 791:Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 792:Generated_Source\PSoC5/SPIS.c **** uint8  SPIS_GetTxBufferSize(void) 
 793:Generated_Source\PSoC5/SPIS.c **** {
 544              		.loc 1 793 0
 545              		.cfi_startproc
 546              		@ args = 0, pretend = 0, frame = 0
 547              		@ frame_needed = 0, uses_anonymous_args = 0
 548              		@ link register save eliminated.
 794:Generated_Source\PSoC5/SPIS.c ****     uint8 size;
 795:Generated_Source\PSoC5/SPIS.c **** 
 796:Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_TX_SOFTWARE_BUF_ENABLED)
 797:Generated_Source\PSoC5/SPIS.c **** 
 798:Generated_Source\PSoC5/SPIS.c ****         /* Disable Interrupt to protect variables that could change on interrupt. */
 799:Generated_Source\PSoC5/SPIS.c ****         SPIS_DisableTxInt();
 800:Generated_Source\PSoC5/SPIS.c **** 
 801:Generated_Source\PSoC5/SPIS.c ****         if(SPIS_txBufferRead == SPIS_txBufferWrite)
 802:Generated_Source\PSoC5/SPIS.c ****         {
 803:Generated_Source\PSoC5/SPIS.c ****             size = 0u;
 804:Generated_Source\PSoC5/SPIS.c ****         }
 805:Generated_Source\PSoC5/SPIS.c ****         else if(SPIS_txBufferRead < SPIS_txBufferWrite)
 806:Generated_Source\PSoC5/SPIS.c ****         {
 807:Generated_Source\PSoC5/SPIS.c ****             size = (SPIS_txBufferWrite - SPIS_txBufferRead);
 808:Generated_Source\PSoC5/SPIS.c ****         }
 809:Generated_Source\PSoC5/SPIS.c ****         else
 810:Generated_Source\PSoC5/SPIS.c ****         {
 811:Generated_Source\PSoC5/SPIS.c ****             size = (SPIS_TX_BUFFER_SIZE - SPIS_txBufferRead) + SPIS_txBufferWrite;
 812:Generated_Source\PSoC5/SPIS.c ****         }
 813:Generated_Source\PSoC5/SPIS.c **** 
 814:Generated_Source\PSoC5/SPIS.c ****         /* Enable Interrupt. */
 815:Generated_Source\PSoC5/SPIS.c ****         SPIS_EnableTxInt();
 816:Generated_Source\PSoC5/SPIS.c **** 
 817:Generated_Source\PSoC5/SPIS.c ****     #else /* !SPIS_TX_SOFTWARE_BUF_ENABLED */
 818:Generated_Source\PSoC5/SPIS.c **** 
 819:Generated_Source\PSoC5/SPIS.c ****         size = SPIS_TX_STATUS_REG;
ARM GAS  C:\Users\Mathias\AppData\Local\Temp\ccH8Ni7h.s 			page 25


 549              		.loc 1 819 0
 550 0000 074B     		ldr	r3, .L54
 551 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 552 0004 DBB2     		uxtb	r3, r3
 553              	.LVL25:
 820:Generated_Source\PSoC5/SPIS.c **** 
 821:Generated_Source\PSoC5/SPIS.c ****         /* Is the fifo is full. */
 822:Generated_Source\PSoC5/SPIS.c ****         if((size & SPIS_STS_TX_FIFO_EMPTY) != 0u)
 554              		.loc 1 822 0
 555 0006 13F0040F 		tst	r3, #4
 556 000a 04D1     		bne	.L52
 823:Generated_Source\PSoC5/SPIS.c ****         {
 824:Generated_Source\PSoC5/SPIS.c ****             size = 0u;
 825:Generated_Source\PSoC5/SPIS.c ****         }
 826:Generated_Source\PSoC5/SPIS.c ****         else if((size & SPIS_STS_TX_FIFO_NOT_FULL) != 0u)
 557              		.loc 1 826 0
 558 000c 13F0020F 		tst	r3, #2
 559 0010 03D0     		beq	.L53
 827:Generated_Source\PSoC5/SPIS.c ****         {
 828:Generated_Source\PSoC5/SPIS.c ****             size = 1u;
 560              		.loc 1 828 0
 561 0012 0120     		movs	r0, #1
 562 0014 7047     		bx	lr
 563              	.L52:
 824:Generated_Source\PSoC5/SPIS.c ****         }
 564              		.loc 1 824 0
 565 0016 0020     		movs	r0, #0
 566 0018 7047     		bx	lr
 567              	.L53:
 829:Generated_Source\PSoC5/SPIS.c ****         }
 830:Generated_Source\PSoC5/SPIS.c ****         else
 831:Generated_Source\PSoC5/SPIS.c ****         {
 832:Generated_Source\PSoC5/SPIS.c ****             size = 4u;
 568              		.loc 1 832 0
 569 001a 0420     		movs	r0, #4
 570              	.LVL26:
 833:Generated_Source\PSoC5/SPIS.c ****         }
 834:Generated_Source\PSoC5/SPIS.c **** 
 835:Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_TX_SOFTWARE_BUF_ENABLED */
 836:Generated_Source\PSoC5/SPIS.c **** 
 837:Generated_Source\PSoC5/SPIS.c ****     return (size);
 838:Generated_Source\PSoC5/SPIS.c **** }
 571              		.loc 1 838 0
 572 001c 7047     		bx	lr
 573              	.L55:
 574 001e 00BF     		.align	2
 575              	.L54:
 576 0020 68650040 		.word	1073767784
 577              		.cfi_endproc
 578              	.LFE16:
 579              		.size	SPIS_GetTxBufferSize, .-SPIS_GetTxBufferSize
 580              		.section	.text.SPIS_ClearRxBuffer,"ax",%progbits
 581              		.align	2
 582              		.global	SPIS_ClearRxBuffer
 583              		.thumb
 584              		.thumb_func
 585              		.type	SPIS_ClearRxBuffer, %function
ARM GAS  C:\Users\Mathias\AppData\Local\Temp\ccH8Ni7h.s 			page 26


 586              	SPIS_ClearRxBuffer:
 587              	.LFB17:
 839:Generated_Source\PSoC5/SPIS.c **** 
 840:Generated_Source\PSoC5/SPIS.c **** 
 841:Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 842:Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_ClearRxBuffer
 843:Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 844:Generated_Source\PSoC5/SPIS.c **** *
 845:Generated_Source\PSoC5/SPIS.c **** * Summary:
 846:Generated_Source\PSoC5/SPIS.c **** *  Clear the RX RAM buffer by setting the read and write pointers both to zero.
 847:Generated_Source\PSoC5/SPIS.c **** *
 848:Generated_Source\PSoC5/SPIS.c **** * Parameters:
 849:Generated_Source\PSoC5/SPIS.c **** *  None.
 850:Generated_Source\PSoC5/SPIS.c **** *
 851:Generated_Source\PSoC5/SPIS.c **** * Return:
 852:Generated_Source\PSoC5/SPIS.c **** *  None.
 853:Generated_Source\PSoC5/SPIS.c **** *
 854:Generated_Source\PSoC5/SPIS.c **** * Global variables:
 855:Generated_Source\PSoC5/SPIS.c **** *  SPIS_rxBufferWrite - used for the account of the bytes which
 856:Generated_Source\PSoC5/SPIS.c **** *  have been written down in the RX software buffer, modified every function
 857:Generated_Source\PSoC5/SPIS.c **** *  call - resets to zero.
 858:Generated_Source\PSoC5/SPIS.c **** *  SPIS_rxBufferRead - used for the account of the bytes which
 859:Generated_Source\PSoC5/SPIS.c **** *  have been read from the RX software buffer, modified every function call -
 860:Generated_Source\PSoC5/SPIS.c **** *  resets to zero.
 861:Generated_Source\PSoC5/SPIS.c **** *
 862:Generated_Source\PSoC5/SPIS.c **** * Theory:
 863:Generated_Source\PSoC5/SPIS.c **** *  Setting the pointers to zero makes the system believe there is no data to
 864:Generated_Source\PSoC5/SPIS.c **** *  read and writing will resume at address 0 overwriting any data that may have
 865:Generated_Source\PSoC5/SPIS.c **** *  remained in the RAM.
 866:Generated_Source\PSoC5/SPIS.c **** *
 867:Generated_Source\PSoC5/SPIS.c **** * Side Effects:
 868:Generated_Source\PSoC5/SPIS.c **** *  Any received data not read from the RAM buffer will be lost when overwritten.
 869:Generated_Source\PSoC5/SPIS.c **** *
 870:Generated_Source\PSoC5/SPIS.c **** * Reentrant:
 871:Generated_Source\PSoC5/SPIS.c **** *  No.
 872:Generated_Source\PSoC5/SPIS.c **** *
 873:Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 874:Generated_Source\PSoC5/SPIS.c **** void SPIS_ClearRxBuffer(void) 
 875:Generated_Source\PSoC5/SPIS.c **** {
 588              		.loc 1 875 0
 589              		.cfi_startproc
 590              		@ args = 0, pretend = 0, frame = 0
 591              		@ frame_needed = 0, uses_anonymous_args = 0
 592 0000 08B5     		push	{r3, lr}
 593              		.cfi_def_cfa_offset 8
 594              		.cfi_offset 3, -8
 595              		.cfi_offset 14, -4
 876:Generated_Source\PSoC5/SPIS.c ****     /* Clear Hardware RX FIFO */
 877:Generated_Source\PSoC5/SPIS.c ****     while((SPIS_RX_STATUS_REG & SPIS_STS_RX_FIFO_NOT_EMPTY) != 0u)
 596              		.loc 1 877 0
 597 0002 01E0     		b	.L57
 598              	.L58:
 878:Generated_Source\PSoC5/SPIS.c ****     {
 879:Generated_Source\PSoC5/SPIS.c ****         CY_GET_REG8(SPIS_RXDATA_PTR);
 599              		.loc 1 879 0
 600 0004 094B     		ldr	r3, .L60
 601 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\Mathias\AppData\Local\Temp\ccH8Ni7h.s 			page 27


 602              	.L57:
 877:Generated_Source\PSoC5/SPIS.c ****     {
 603              		.loc 1 877 0
 604 0008 094B     		ldr	r3, .L60+4
 605 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 606 000c 13F0080F 		tst	r3, #8
 607 0010 F8D1     		bne	.L58
 880:Generated_Source\PSoC5/SPIS.c ****     }
 881:Generated_Source\PSoC5/SPIS.c **** 
 882:Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_RX_SOFTWARE_BUF_ENABLED)
 883:Generated_Source\PSoC5/SPIS.c **** 
 884:Generated_Source\PSoC5/SPIS.c ****         /* Disable interrupt to protect variables that could change on interrupt. */
 885:Generated_Source\PSoC5/SPIS.c ****         SPIS_DisableRxInt();
 608              		.loc 1 885 0
 609 0012 FFF7FEFF 		bl	SPIS_DisableRxInt
 610              	.LVL27:
 886:Generated_Source\PSoC5/SPIS.c **** 
 887:Generated_Source\PSoC5/SPIS.c ****         SPIS_rxBufferRead  = 0u;
 611              		.loc 1 887 0
 612 0016 0023     		movs	r3, #0
 613 0018 064A     		ldr	r2, .L60+8
 614 001a 1370     		strb	r3, [r2]
 888:Generated_Source\PSoC5/SPIS.c ****         SPIS_rxBufferWrite = 0u;
 615              		.loc 1 888 0
 616 001c 064A     		ldr	r2, .L60+12
 617 001e 1370     		strb	r3, [r2]
 889:Generated_Source\PSoC5/SPIS.c **** 		SPIS_rxBufferFull  = 0u;
 618              		.loc 1 889 0
 619 0020 064A     		ldr	r2, .L60+16
 620 0022 1370     		strb	r3, [r2]
 890:Generated_Source\PSoC5/SPIS.c ****         /* Enable interrupt. */
 891:Generated_Source\PSoC5/SPIS.c ****         SPIS_EnableRxInt();
 621              		.loc 1 891 0
 622 0024 FFF7FEFF 		bl	SPIS_EnableRxInt
 623              	.LVL28:
 624 0028 08BD     		pop	{r3, pc}
 625              	.L61:
 626 002a 00BF     		.align	2
 627              	.L60:
 628 002c 58640040 		.word	1073767512
 629 0030 6A640040 		.word	1073767530
 630 0034 00000000 		.word	SPIS_rxBufferRead
 631 0038 00000000 		.word	SPIS_rxBufferWrite
 632 003c 00000000 		.word	SPIS_rxBufferFull
 633              		.cfi_endproc
 634              	.LFE17:
 635              		.size	SPIS_ClearRxBuffer, .-SPIS_ClearRxBuffer
 636              		.section	.text.SPIS_ClearTxBuffer,"ax",%progbits
 637              		.align	2
 638              		.global	SPIS_ClearTxBuffer
 639              		.thumb
 640              		.thumb_func
 641              		.type	SPIS_ClearTxBuffer, %function
 642              	SPIS_ClearTxBuffer:
 643              	.LFB18:
 892:Generated_Source\PSoC5/SPIS.c **** 
 893:Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_RX_SOFTWARE_BUF_ENABLED */
ARM GAS  C:\Users\Mathias\AppData\Local\Temp\ccH8Ni7h.s 			page 28


 894:Generated_Source\PSoC5/SPIS.c **** }
 895:Generated_Source\PSoC5/SPIS.c **** 
 896:Generated_Source\PSoC5/SPIS.c **** 
 897:Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
 898:Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_ClearTxBuffer
 899:Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
 900:Generated_Source\PSoC5/SPIS.c **** *
 901:Generated_Source\PSoC5/SPIS.c **** * Summary:
 902:Generated_Source\PSoC5/SPIS.c **** *  Clear the TX RAM buffer by setting the read and write pointers both to zero.
 903:Generated_Source\PSoC5/SPIS.c **** *
 904:Generated_Source\PSoC5/SPIS.c **** * Parameters:
 905:Generated_Source\PSoC5/SPIS.c **** *  None.
 906:Generated_Source\PSoC5/SPIS.c **** *
 907:Generated_Source\PSoC5/SPIS.c **** * Return:
 908:Generated_Source\PSoC5/SPIS.c **** *  None.
 909:Generated_Source\PSoC5/SPIS.c **** *
 910:Generated_Source\PSoC5/SPIS.c **** * Global variables:
 911:Generated_Source\PSoC5/SPIS.c **** *  SPIS_txBufferWrite - used for the account of the bytes which
 912:Generated_Source\PSoC5/SPIS.c **** *  have been written down in the TX software buffer, modified every function
 913:Generated_Source\PSoC5/SPIS.c **** *  call - resets to zero.
 914:Generated_Source\PSoC5/SPIS.c **** *  SPIS_txBufferRead - used for the account of the bytes which
 915:Generated_Source\PSoC5/SPIS.c **** *  have been read from the TX software buffer, modified every function call -
 916:Generated_Source\PSoC5/SPIS.c **** *  resets to zero.
 917:Generated_Source\PSoC5/SPIS.c **** *
 918:Generated_Source\PSoC5/SPIS.c **** * Theory:
 919:Generated_Source\PSoC5/SPIS.c **** *  Setting the pointers to zero makes the system believe there is no data to
 920:Generated_Source\PSoC5/SPIS.c **** *  read and writing will resume at address 0 overwriting any data that may have
 921:Generated_Source\PSoC5/SPIS.c **** *  remained in the RAM.
 922:Generated_Source\PSoC5/SPIS.c **** *
 923:Generated_Source\PSoC5/SPIS.c **** * Side Effects:
 924:Generated_Source\PSoC5/SPIS.c **** *  Any data not yet transmitted from the RAM buffer will be lost when
 925:Generated_Source\PSoC5/SPIS.c **** *  overwritten.
 926:Generated_Source\PSoC5/SPIS.c **** *
 927:Generated_Source\PSoC5/SPIS.c **** * Reentrant:
 928:Generated_Source\PSoC5/SPIS.c **** *  No.
 929:Generated_Source\PSoC5/SPIS.c **** *
 930:Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
 931:Generated_Source\PSoC5/SPIS.c **** void SPIS_ClearTxBuffer(void) 
 932:Generated_Source\PSoC5/SPIS.c **** {
 644              		.loc 1 932 0
 645              		.cfi_startproc
 646              		@ args = 0, pretend = 0, frame = 0
 647              		@ frame_needed = 0, uses_anonymous_args = 0
 648 0000 08B5     		push	{r3, lr}
 649              		.cfi_def_cfa_offset 8
 650              		.cfi_offset 3, -8
 651              		.cfi_offset 14, -4
 933:Generated_Source\PSoC5/SPIS.c ****     uint8 enableInterrupts;
 934:Generated_Source\PSoC5/SPIS.c **** 
 935:Generated_Source\PSoC5/SPIS.c ****     /* Clear Hardware TX FIFO */
 936:Generated_Source\PSoC5/SPIS.c ****     enableInterrupts = CyEnterCriticalSection();
 652              		.loc 1 936 0
 653 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 654              	.LVL29:
 937:Generated_Source\PSoC5/SPIS.c **** 
 938:Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_DATA_WIDTH <= 8u)
 939:Generated_Source\PSoC5/SPIS.c **** 
ARM GAS  C:\Users\Mathias\AppData\Local\Temp\ccH8Ni7h.s 			page 29


 940:Generated_Source\PSoC5/SPIS.c ****         /* Clear TX FIFO */
 941:Generated_Source\PSoC5/SPIS.c ****         SPIS_TX_AUX_CONTROL_DP0_REG |= (uint8)SPIS_FIFO_CLR;
 655              		.loc 1 941 0
 656 0006 064B     		ldr	r3, .L64
 657 0008 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 658 000a 42F00302 		orr	r2, r2, #3
 659 000e 1A70     		strb	r2, [r3]
 942:Generated_Source\PSoC5/SPIS.c ****         SPIS_TX_AUX_CONTROL_DP0_REG &= (uint8)~SPIS_FIFO_CLR;
 660              		.loc 1 942 0
 661 0010 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 662 0012 02F0FC02 		and	r2, r2, #252
 663 0016 1A70     		strb	r2, [r3]
 943:Generated_Source\PSoC5/SPIS.c **** 
 944:Generated_Source\PSoC5/SPIS.c ****     #else
 945:Generated_Source\PSoC5/SPIS.c **** 
 946:Generated_Source\PSoC5/SPIS.c ****         /* Clear TX FIFO */
 947:Generated_Source\PSoC5/SPIS.c ****         SPIS_TX_AUX_CONTROL_DP0_REG |= (uint8)SPIS_FIFO_CLR;
 948:Generated_Source\PSoC5/SPIS.c ****         SPIS_TX_AUX_CONTROL_DP0_REG &= (uint8)~SPIS_FIFO_CLR;
 949:Generated_Source\PSoC5/SPIS.c ****         SPIS_TX_AUX_CONTROL_DP1_REG |= (uint8)SPIS_FIFO_CLR;
 950:Generated_Source\PSoC5/SPIS.c ****         SPIS_TX_AUX_CONTROL_DP1_REG &= (uint8)~SPIS_FIFO_CLR;
 951:Generated_Source\PSoC5/SPIS.c **** 
 952:Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_DATA_WIDTH > 8u */
 953:Generated_Source\PSoC5/SPIS.c **** 
 954:Generated_Source\PSoC5/SPIS.c ****     CyExitCriticalSection(enableInterrupts);
 664              		.loc 1 954 0
 665 0018 FFF7FEFF 		bl	CyExitCriticalSection
 666              	.LVL30:
 667 001c 08BD     		pop	{r3, pc}
 668              	.L65:
 669 001e 00BF     		.align	2
 670              	.L64:
 671 0020 98640040 		.word	1073767576
 672              		.cfi_endproc
 673              	.LFE18:
 674              		.size	SPIS_ClearTxBuffer, .-SPIS_ClearTxBuffer
 675              		.section	.text.SPIS_PutArray,"ax",%progbits
 676              		.align	2
 677              		.global	SPIS_PutArray
 678              		.thumb
 679              		.thumb_func
 680              		.type	SPIS_PutArray, %function
 681              	SPIS_PutArray:
 682              	.LFB19:
 955:Generated_Source\PSoC5/SPIS.c **** 
 956:Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_TX_SOFTWARE_BUF_ENABLED)
 957:Generated_Source\PSoC5/SPIS.c **** 
 958:Generated_Source\PSoC5/SPIS.c ****         /* Disable Interrupt to protect variables that could change on interrupt. */
 959:Generated_Source\PSoC5/SPIS.c ****         SPIS_DisableTxInt();
 960:Generated_Source\PSoC5/SPIS.c **** 
 961:Generated_Source\PSoC5/SPIS.c ****         SPIS_txBufferRead  = 0u;
 962:Generated_Source\PSoC5/SPIS.c ****         SPIS_txBufferWrite = 0u;
 963:Generated_Source\PSoC5/SPIS.c **** 		SPIS_txBufferFull  = 0u;
 964:Generated_Source\PSoC5/SPIS.c **** 		
 965:Generated_Source\PSoC5/SPIS.c ****         /* If Buffer is empty then disable TX FIFO status interrupt */
 966:Generated_Source\PSoC5/SPIS.c ****         SPIS_TX_STATUS_MASK_REG &= (uint8)~SPIS_STS_TX_FIFO_NOT_FULL;
 967:Generated_Source\PSoC5/SPIS.c **** 
 968:Generated_Source\PSoC5/SPIS.c ****         /* Enable Interrupt. */
ARM GAS  C:\Users\Mathias\AppData\Local\Temp\ccH8Ni7h.s 			page 30


 969:Generated_Source\PSoC5/SPIS.c ****         SPIS_EnableTxInt();
 970:Generated_Source\PSoC5/SPIS.c **** 
 971:Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_TX_SOFTWARE_BUF_ENABLED */
 972:Generated_Source\PSoC5/SPIS.c **** }
 973:Generated_Source\PSoC5/SPIS.c **** 
 974:Generated_Source\PSoC5/SPIS.c **** 
 975:Generated_Source\PSoC5/SPIS.c **** #if (SPIS_BIDIRECTIONAL_MODE != 0u)
 976:Generated_Source\PSoC5/SPIS.c **** 
 977:Generated_Source\PSoC5/SPIS.c ****     /*******************************************************************************
 978:Generated_Source\PSoC5/SPIS.c ****     * Function Name: SPIS_TxEnable
 979:Generated_Source\PSoC5/SPIS.c ****     ********************************************************************************
 980:Generated_Source\PSoC5/SPIS.c ****     *
 981:Generated_Source\PSoC5/SPIS.c ****     * Summary:
 982:Generated_Source\PSoC5/SPIS.c ****     *  If the SPI Slave is configured to use a single bi-directional pin then this
 983:Generated_Source\PSoC5/SPIS.c ****     *  will set the bi-directional pin to transmit.
 984:Generated_Source\PSoC5/SPIS.c ****     *
 985:Generated_Source\PSoC5/SPIS.c ****     * Parameters:
 986:Generated_Source\PSoC5/SPIS.c ****     *  None.
 987:Generated_Source\PSoC5/SPIS.c ****     *
 988:Generated_Source\PSoC5/SPIS.c ****     * Return:
 989:Generated_Source\PSoC5/SPIS.c ****     *  None.
 990:Generated_Source\PSoC5/SPIS.c ****     *
 991:Generated_Source\PSoC5/SPIS.c ****     *******************************************************************************/
 992:Generated_Source\PSoC5/SPIS.c ****     void SPIS_TxEnable(void) 
 993:Generated_Source\PSoC5/SPIS.c ****     {
 994:Generated_Source\PSoC5/SPIS.c ****             SPIS_CONTROL_REG |= SPIS_CTRL_TX_SIGNAL_EN;
 995:Generated_Source\PSoC5/SPIS.c ****     }
 996:Generated_Source\PSoC5/SPIS.c **** 
 997:Generated_Source\PSoC5/SPIS.c **** 
 998:Generated_Source\PSoC5/SPIS.c ****     /*******************************************************************************
 999:Generated_Source\PSoC5/SPIS.c ****     * Function Name: SPIS_TxDisable
1000:Generated_Source\PSoC5/SPIS.c ****     ********************************************************************************
1001:Generated_Source\PSoC5/SPIS.c ****     *
1002:Generated_Source\PSoC5/SPIS.c ****     * Summary:
1003:Generated_Source\PSoC5/SPIS.c ****     *  If the SPI Slave is configured to use a single bi-directional pin then this
1004:Generated_Source\PSoC5/SPIS.c ****     *  will set the bi-directional pin to receive.
1005:Generated_Source\PSoC5/SPIS.c ****     *
1006:Generated_Source\PSoC5/SPIS.c ****     * Parameters:
1007:Generated_Source\PSoC5/SPIS.c ****     *  None.
1008:Generated_Source\PSoC5/SPIS.c ****     *
1009:Generated_Source\PSoC5/SPIS.c ****     * Return:
1010:Generated_Source\PSoC5/SPIS.c ****     *  None.
1011:Generated_Source\PSoC5/SPIS.c ****     *
1012:Generated_Source\PSoC5/SPIS.c ****     *******************************************************************************/
1013:Generated_Source\PSoC5/SPIS.c ****     void SPIS_TxDisable(void) 
1014:Generated_Source\PSoC5/SPIS.c ****     {
1015:Generated_Source\PSoC5/SPIS.c ****             SPIS_CONTROL_REG &= (uint8)~SPIS_CTRL_TX_SIGNAL_EN;
1016:Generated_Source\PSoC5/SPIS.c ****     }
1017:Generated_Source\PSoC5/SPIS.c **** 
1018:Generated_Source\PSoC5/SPIS.c **** #endif /* SPIS_BIDIRECTIONAL_MODE != 0u */
1019:Generated_Source\PSoC5/SPIS.c **** 
1020:Generated_Source\PSoC5/SPIS.c **** 
1021:Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
1022:Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_PutArray
1023:Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
1024:Generated_Source\PSoC5/SPIS.c **** *
1025:Generated_Source\PSoC5/SPIS.c **** * Summary:
ARM GAS  C:\Users\Mathias\AppData\Local\Temp\ccH8Ni7h.s 			page 31


1026:Generated_Source\PSoC5/SPIS.c **** *  Write available data from RAM/ROM to the TX buffer while space is available
1027:Generated_Source\PSoC5/SPIS.c **** *  in the TX buffer. Keep trying until all data is passed to the TX buffer. If
1028:Generated_Source\PSoC5/SPIS.c **** *  used Mode 00 or 01 before PutArray() function should be called
1029:Generated_Source\PSoC5/SPIS.c **** *  WriteTxDataZero() function.
1030:Generated_Source\PSoC5/SPIS.c **** *
1031:Generated_Source\PSoC5/SPIS.c **** * Parameters:
1032:Generated_Source\PSoC5/SPIS.c **** *  *buffer: Pointer to the location in RAM containing the data to send
1033:Generated_Source\PSoC5/SPIS.c **** *  byteCount: The number of bytes to move to the transmit buffer.
1034:Generated_Source\PSoC5/SPIS.c **** *
1035:Generated_Source\PSoC5/SPIS.c **** * Return:
1036:Generated_Source\PSoC5/SPIS.c **** *  None.
1037:Generated_Source\PSoC5/SPIS.c **** *
1038:Generated_Source\PSoC5/SPIS.c **** * Side Effects:
1039:Generated_Source\PSoC5/SPIS.c **** *  Will stay in this routine until all data has been sent.  May get locked in
1040:Generated_Source\PSoC5/SPIS.c **** *  this loop if data is not being initiated by the master if there is not
1041:Generated_Source\PSoC5/SPIS.c **** *  enough room in the TX FIFO.
1042:Generated_Source\PSoC5/SPIS.c **** *
1043:Generated_Source\PSoC5/SPIS.c **** * Reentrant:
1044:Generated_Source\PSoC5/SPIS.c **** *  No.
1045:Generated_Source\PSoC5/SPIS.c **** *
1046:Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
1047:Generated_Source\PSoC5/SPIS.c **** void SPIS_PutArray(const uint8 buffer[], uint8 byteCount)
1048:Generated_Source\PSoC5/SPIS.c ****                                                                     
1049:Generated_Source\PSoC5/SPIS.c **** {
 683              		.loc 1 1049 0
 684              		.cfi_startproc
 685              		@ args = 0, pretend = 0, frame = 0
 686              		@ frame_needed = 0, uses_anonymous_args = 0
 687              	.LVL31:
 688 0000 70B5     		push	{r4, r5, r6, lr}
 689              		.cfi_def_cfa_offset 16
 690              		.cfi_offset 4, -16
 691              		.cfi_offset 5, -12
 692              		.cfi_offset 6, -8
 693              		.cfi_offset 14, -4
 694 0002 0646     		mov	r6, r0
 695 0004 0C46     		mov	r4, r1
 696              	.LVL32:
1050:Generated_Source\PSoC5/SPIS.c ****     uint8 bufIndex;
1051:Generated_Source\PSoC5/SPIS.c ****     bufIndex = 0u;
 697              		.loc 1 1051 0
 698 0006 0025     		movs	r5, #0
1052:Generated_Source\PSoC5/SPIS.c **** 
1053:Generated_Source\PSoC5/SPIS.c ****     while(byteCount > 0u)
 699              		.loc 1 1053 0
 700 0008 06E0     		b	.L67
 701              	.LVL33:
 702              	.L68:
1054:Generated_Source\PSoC5/SPIS.c ****     {
1055:Generated_Source\PSoC5/SPIS.c ****         SPIS_WriteTxData(buffer[bufIndex]);
 703              		.loc 1 1055 0
 704 000a 705D     		ldrb	r0, [r6, r5]	@ zero_extendqisi2
 705 000c FFF7FEFF 		bl	SPIS_WriteTxData
 706              	.LVL34:
1056:Generated_Source\PSoC5/SPIS.c ****         bufIndex++;
 707              		.loc 1 1056 0
 708 0010 0135     		adds	r5, r5, #1
ARM GAS  C:\Users\Mathias\AppData\Local\Temp\ccH8Ni7h.s 			page 32


 709              	.LVL35:
 710 0012 EDB2     		uxtb	r5, r5
 711              	.LVL36:
1057:Generated_Source\PSoC5/SPIS.c ****         byteCount--;
 712              		.loc 1 1057 0
 713 0014 013C     		subs	r4, r4, #1
 714              	.LVL37:
 715 0016 E4B2     		uxtb	r4, r4
 716              	.LVL38:
 717              	.L67:
1053:Generated_Source\PSoC5/SPIS.c ****     {
 718              		.loc 1 1053 0
 719 0018 002C     		cmp	r4, #0
 720 001a F6D1     		bne	.L68
1058:Generated_Source\PSoC5/SPIS.c ****     }
1059:Generated_Source\PSoC5/SPIS.c **** }
 721              		.loc 1 1059 0
 722 001c 70BD     		pop	{r4, r5, r6, pc}
 723              		.cfi_endproc
 724              	.LFE19:
 725              		.size	SPIS_PutArray, .-SPIS_PutArray
 726 001e 00BF     		.section	.text.SPIS_ClearFIFO,"ax",%progbits
 727              		.align	2
 728              		.global	SPIS_ClearFIFO
 729              		.thumb
 730              		.thumb_func
 731              		.type	SPIS_ClearFIFO, %function
 732              	SPIS_ClearFIFO:
 733              	.LFB20:
1060:Generated_Source\PSoC5/SPIS.c **** 
1061:Generated_Source\PSoC5/SPIS.c **** 
1062:Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
1063:Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_ClearFIFO
1064:Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
1065:Generated_Source\PSoC5/SPIS.c **** *
1066:Generated_Source\PSoC5/SPIS.c **** * Summary:
1067:Generated_Source\PSoC5/SPIS.c **** *  Clear the RX and TX FIFO's of all data for a fresh start.
1068:Generated_Source\PSoC5/SPIS.c **** *
1069:Generated_Source\PSoC5/SPIS.c **** * Parameters:
1070:Generated_Source\PSoC5/SPIS.c **** *  None.
1071:Generated_Source\PSoC5/SPIS.c **** *
1072:Generated_Source\PSoC5/SPIS.c **** * Return:
1073:Generated_Source\PSoC5/SPIS.c **** *  None.
1074:Generated_Source\PSoC5/SPIS.c **** *
1075:Generated_Source\PSoC5/SPIS.c **** * Side Effects:
1076:Generated_Source\PSoC5/SPIS.c **** *  Clear status register of the component.
1077:Generated_Source\PSoC5/SPIS.c **** *
1078:Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
1079:Generated_Source\PSoC5/SPIS.c **** void SPIS_ClearFIFO(void) 
1080:Generated_Source\PSoC5/SPIS.c **** {
 734              		.loc 1 1080 0
 735              		.cfi_startproc
 736              		@ args = 0, pretend = 0, frame = 0
 737              		@ frame_needed = 0, uses_anonymous_args = 0
 738 0000 08B5     		push	{r3, lr}
 739              		.cfi_def_cfa_offset 8
 740              		.cfi_offset 3, -8
ARM GAS  C:\Users\Mathias\AppData\Local\Temp\ccH8Ni7h.s 			page 33


 741              		.cfi_offset 14, -4
1081:Generated_Source\PSoC5/SPIS.c ****     uint8 enableInterrupts;
1082:Generated_Source\PSoC5/SPIS.c **** 
1083:Generated_Source\PSoC5/SPIS.c ****     while((SPIS_RX_STATUS_REG & SPIS_STS_RX_FIFO_NOT_EMPTY) != 0u)
 742              		.loc 1 1083 0
 743 0002 01E0     		b	.L71
 744              	.L72:
1084:Generated_Source\PSoC5/SPIS.c ****     {
1085:Generated_Source\PSoC5/SPIS.c ****         CY_GET_REG8(SPIS_RXDATA_PTR);
 745              		.loc 1 1085 0
 746 0004 0A4B     		ldr	r3, .L74
 747 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 748              	.L71:
1083:Generated_Source\PSoC5/SPIS.c ****     {
 749              		.loc 1 1083 0
 750 0008 0A4B     		ldr	r3, .L74+4
 751 000a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 752 000c 13F0080F 		tst	r3, #8
 753 0010 F8D1     		bne	.L72
1086:Generated_Source\PSoC5/SPIS.c ****     }
1087:Generated_Source\PSoC5/SPIS.c **** 
1088:Generated_Source\PSoC5/SPIS.c ****     enableInterrupts = CyEnterCriticalSection();
 754              		.loc 1 1088 0
 755 0012 FFF7FEFF 		bl	CyEnterCriticalSection
 756              	.LVL39:
1089:Generated_Source\PSoC5/SPIS.c **** 
1090:Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_DATA_WIDTH <= 8u)
1091:Generated_Source\PSoC5/SPIS.c **** 
1092:Generated_Source\PSoC5/SPIS.c ****         /* Clear TX FIFO */
1093:Generated_Source\PSoC5/SPIS.c ****         SPIS_TX_AUX_CONTROL_DP0_REG |= (uint8)SPIS_FIFO_CLR;
 757              		.loc 1 1093 0
 758 0016 084B     		ldr	r3, .L74+8
 759 0018 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 760 001a 42F00302 		orr	r2, r2, #3
 761 001e 1A70     		strb	r2, [r3]
1094:Generated_Source\PSoC5/SPIS.c ****         SPIS_TX_AUX_CONTROL_DP0_REG &= (uint8)~SPIS_FIFO_CLR;
 762              		.loc 1 1094 0
 763 0020 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 764 0022 02F0FC02 		and	r2, r2, #252
 765 0026 1A70     		strb	r2, [r3]
1095:Generated_Source\PSoC5/SPIS.c **** 
1096:Generated_Source\PSoC5/SPIS.c ****     #else
1097:Generated_Source\PSoC5/SPIS.c **** 
1098:Generated_Source\PSoC5/SPIS.c ****         /* Clear TX FIFO */
1099:Generated_Source\PSoC5/SPIS.c ****         SPIS_TX_AUX_CONTROL_DP0_REG |= (uint8)SPIS_FIFO_CLR;
1100:Generated_Source\PSoC5/SPIS.c ****         SPIS_TX_AUX_CONTROL_DP0_REG &= (uint8)~SPIS_FIFO_CLR;
1101:Generated_Source\PSoC5/SPIS.c ****         SPIS_TX_AUX_CONTROL_DP1_REG |= (uint8)SPIS_FIFO_CLR;
1102:Generated_Source\PSoC5/SPIS.c ****         SPIS_TX_AUX_CONTROL_DP1_REG &= (uint8)~SPIS_FIFO_CLR;
1103:Generated_Source\PSoC5/SPIS.c **** 
1104:Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_DATA_WIDTH <= 8u */
1105:Generated_Source\PSoC5/SPIS.c **** 
1106:Generated_Source\PSoC5/SPIS.c ****     CyExitCriticalSection(enableInterrupts);
 766              		.loc 1 1106 0
 767 0028 FFF7FEFF 		bl	CyExitCriticalSection
 768              	.LVL40:
 769 002c 08BD     		pop	{r3, pc}
 770              	.L75:
ARM GAS  C:\Users\Mathias\AppData\Local\Temp\ccH8Ni7h.s 			page 34


 771 002e 00BF     		.align	2
 772              	.L74:
 773 0030 58640040 		.word	1073767512
 774 0034 6A640040 		.word	1073767530
 775 0038 98640040 		.word	1073767576
 776              		.cfi_endproc
 777              	.LFE20:
 778              		.size	SPIS_ClearFIFO, .-SPIS_ClearFIFO
 779              		.section	.text.SPIS_Init,"ax",%progbits
 780              		.align	2
 781              		.global	SPIS_Init
 782              		.thumb
 783              		.thumb_func
 784              		.type	SPIS_Init, %function
 785              	SPIS_Init:
 786              	.LFB0:
  68:Generated_Source\PSoC5/SPIS.c ****     /*Initialize the Bit counter */
 787              		.loc 1 68 0
 788              		.cfi_startproc
 789              		@ args = 0, pretend = 0, frame = 0
 790              		@ frame_needed = 0, uses_anonymous_args = 0
 791 0000 10B5     		push	{r4, lr}
 792              		.cfi_def_cfa_offset 8
 793              		.cfi_offset 4, -8
 794              		.cfi_offset 14, -4
  70:Generated_Source\PSoC5/SPIS.c **** 
 795              		.loc 1 70 0
 796 0002 0724     		movs	r4, #7
 797 0004 0F4B     		ldr	r3, .L78
 798 0006 1C70     		strb	r4, [r3]
  87:Generated_Source\PSoC5/SPIS.c **** 
 799              		.loc 1 87 0
 800 0008 0122     		movs	r2, #1
 801 000a 0F4B     		ldr	r3, .L78+4
 802 000c 1A60     		str	r2, [r3]
  90:Generated_Source\PSoC5/SPIS.c **** 
 803              		.loc 1 90 0
 804 000e 0F49     		ldr	r1, .L78+8
 805 0010 0020     		movs	r0, #0
 806 0012 FFF7FEFF 		bl	CyIntSetVector
 807              	.LVL41:
  93:Generated_Source\PSoC5/SPIS.c **** 
 808              		.loc 1 93 0
 809 0016 2146     		mov	r1, r4
 810 0018 0020     		movs	r0, #0
 811 001a FFF7FEFF 		bl	CyIntSetPriority
 812              	.LVL42:
  98:Generated_Source\PSoC5/SPIS.c **** 
 813              		.loc 1 98 0
 814 001e FFF7FEFF 		bl	SPIS_ClearFIFO
 815              	.LVL43:
 101:Generated_Source\PSoC5/SPIS.c ****         SPIS_rxBufferRead = 0u;
 816              		.loc 1 101 0
 817 0022 0024     		movs	r4, #0
 818 0024 0A4B     		ldr	r3, .L78+12
 819 0026 1C70     		strb	r4, [r3]
 102:Generated_Source\PSoC5/SPIS.c ****         SPIS_rxBufferWrite = 0u;
ARM GAS  C:\Users\Mathias\AppData\Local\Temp\ccH8Ni7h.s 			page 35


 820              		.loc 1 102 0
 821 0028 0A4B     		ldr	r3, .L78+16
 822 002a 1C70     		strb	r4, [r3]
 103:Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_RX_SOFTWARE_BUF_ENABLED */
 823              		.loc 1 103 0
 824 002c 0A4B     		ldr	r3, .L78+20
 825 002e 1C70     		strb	r4, [r3]
 112:Generated_Source\PSoC5/SPIS.c ****     (void) SPIS_ReadRxStatus(); /* Clear any pending status bits */
 826              		.loc 1 112 0
 827 0030 FFF7FEFF 		bl	SPIS_ReadTxStatus
 828              	.LVL44:
 113:Generated_Source\PSoC5/SPIS.c **** 
 829              		.loc 1 113 0
 830 0034 FFF7FEFF 		bl	SPIS_ReadRxStatus
 831              	.LVL45:
 121:Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_TX_SOFTWARE_BUF_ENABLED */
 832              		.loc 1 121 0
 833 0038 084B     		ldr	r3, .L78+24
 834 003a 1C70     		strb	r4, [r3]
 124:Generated_Source\PSoC5/SPIS.c **** }
 835              		.loc 1 124 0
 836 003c 0822     		movs	r2, #8
 837 003e FE3B     		subs	r3, r3, #254
 838 0040 1A70     		strb	r2, [r3]
 839 0042 10BD     		pop	{r4, pc}
 840              	.L79:
 841              		.align	2
 842              	.L78:
 843 0044 89650040 		.word	1073767817
 844 0048 80E100E0 		.word	-536813184
 845 004c 00000000 		.word	SPIS_RX_ISR
 846 0050 00000000 		.word	SPIS_rxBufferFull
 847 0054 00000000 		.word	SPIS_rxBufferRead
 848 0058 00000000 		.word	SPIS_rxBufferWrite
 849 005c 88650040 		.word	1073767816
 850              		.cfi_endproc
 851              	.LFE0:
 852              		.size	SPIS_Init, .-SPIS_Init
 853              		.section	.text.SPIS_Start,"ax",%progbits
 854              		.align	2
 855              		.global	SPIS_Start
 856              		.thumb
 857              		.thumb_func
 858              		.type	SPIS_Start, %function
 859              	SPIS_Start:
 860              	.LFB2:
 188:Generated_Source\PSoC5/SPIS.c ****     if(SPIS_initVar == 0u)
 861              		.loc 1 188 0
 862              		.cfi_startproc
 863              		@ args = 0, pretend = 0, frame = 0
 864              		@ frame_needed = 0, uses_anonymous_args = 0
 865 0000 08B5     		push	{r3, lr}
 866              		.cfi_def_cfa_offset 8
 867              		.cfi_offset 3, -8
 868              		.cfi_offset 14, -4
 189:Generated_Source\PSoC5/SPIS.c ****     {
 869              		.loc 1 189 0
ARM GAS  C:\Users\Mathias\AppData\Local\Temp\ccH8Ni7h.s 			page 36


 870 0002 054B     		ldr	r3, .L83
 871 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 872 0006 23B9     		cbnz	r3, .L81
 191:Generated_Source\PSoC5/SPIS.c ****         SPIS_initVar = 1u;
 873              		.loc 1 191 0
 874 0008 FFF7FEFF 		bl	SPIS_Init
 875              	.LVL46:
 192:Generated_Source\PSoC5/SPIS.c ****     }
 876              		.loc 1 192 0
 877 000c 0122     		movs	r2, #1
 878 000e 024B     		ldr	r3, .L83
 879 0010 1A70     		strb	r2, [r3]
 880              	.L81:
 195:Generated_Source\PSoC5/SPIS.c **** }
 881              		.loc 1 195 0
 882 0012 FFF7FEFF 		bl	SPIS_Enable
 883              	.LVL47:
 884 0016 08BD     		pop	{r3, pc}
 885              	.L84:
 886              		.align	2
 887              	.L83:
 888 0018 00000000 		.word	.LANCHOR0
 889              		.cfi_endproc
 890              	.LFE2:
 891              		.size	SPIS_Start, .-SPIS_Start
 892              		.section	.text.SPIS_EnableInt,"ax",%progbits
 893              		.align	2
 894              		.global	SPIS_EnableInt
 895              		.thumb
 896              		.thumb_func
 897              		.type	SPIS_EnableInt, %function
 898              	SPIS_EnableInt:
 899              	.LFB21:
1107:Generated_Source\PSoC5/SPIS.c **** }
1108:Generated_Source\PSoC5/SPIS.c **** 
1109:Generated_Source\PSoC5/SPIS.c **** 
1110:Generated_Source\PSoC5/SPIS.c **** /* Following functions are for version Compatibility, they are obsolete.
1111:Generated_Source\PSoC5/SPIS.c **** *  Please do not use it in new projects.
1112:Generated_Source\PSoC5/SPIS.c **** */
1113:Generated_Source\PSoC5/SPIS.c **** 
1114:Generated_Source\PSoC5/SPIS.c **** 
1115:Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
1116:Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_EnableInt
1117:Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
1118:Generated_Source\PSoC5/SPIS.c **** *
1119:Generated_Source\PSoC5/SPIS.c **** * Summary:
1120:Generated_Source\PSoC5/SPIS.c **** *  Enable internal interrupt generation.
1121:Generated_Source\PSoC5/SPIS.c **** *
1122:Generated_Source\PSoC5/SPIS.c **** * Parameters:
1123:Generated_Source\PSoC5/SPIS.c **** *  None.
1124:Generated_Source\PSoC5/SPIS.c **** *
1125:Generated_Source\PSoC5/SPIS.c **** * Return:
1126:Generated_Source\PSoC5/SPIS.c **** *  None.
1127:Generated_Source\PSoC5/SPIS.c **** *
1128:Generated_Source\PSoC5/SPIS.c **** * Theory:
1129:Generated_Source\PSoC5/SPIS.c **** *  Enable the internal interrupt output -or- the interrupt component itself.
1130:Generated_Source\PSoC5/SPIS.c **** *
ARM GAS  C:\Users\Mathias\AppData\Local\Temp\ccH8Ni7h.s 			page 37


1131:Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
1132:Generated_Source\PSoC5/SPIS.c **** void SPIS_EnableInt(void) 
1133:Generated_Source\PSoC5/SPIS.c **** {
 900              		.loc 1 1133 0
 901              		.cfi_startproc
 902              		@ args = 0, pretend = 0, frame = 0
 903              		@ frame_needed = 0, uses_anonymous_args = 0
 904              		@ link register save eliminated.
1134:Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_INTERNAL_TX_INT_ENABLED)
1135:Generated_Source\PSoC5/SPIS.c ****         CyIntEnable(SPIS_TX_ISR_NUMBER);
1136:Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_INTERNAL_TX_INT_ENABLED */
1137:Generated_Source\PSoC5/SPIS.c **** 
1138:Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_INTERNAL_RX_INT_ENABLED)
1139:Generated_Source\PSoC5/SPIS.c ****         CyIntEnable(SPIS_RX_ISR_NUMBER);
 905              		.loc 1 1139 0
 906 0000 0122     		movs	r2, #1
 907 0002 014B     		ldr	r3, .L86
 908 0004 1A60     		str	r2, [r3]
 909 0006 7047     		bx	lr
 910              	.L87:
 911              		.align	2
 912              	.L86:
 913 0008 00E100E0 		.word	-536813312
 914              		.cfi_endproc
 915              	.LFE21:
 916              		.size	SPIS_EnableInt, .-SPIS_EnableInt
 917              		.section	.text.SPIS_DisableInt,"ax",%progbits
 918              		.align	2
 919              		.global	SPIS_DisableInt
 920              		.thumb
 921              		.thumb_func
 922              		.type	SPIS_DisableInt, %function
 923              	SPIS_DisableInt:
 924              	.LFB22:
1140:Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_INTERNAL_RX_INT_ENABLED */
1141:Generated_Source\PSoC5/SPIS.c **** }
1142:Generated_Source\PSoC5/SPIS.c **** 
1143:Generated_Source\PSoC5/SPIS.c **** 
1144:Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
1145:Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_DisableInt
1146:Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
1147:Generated_Source\PSoC5/SPIS.c **** *
1148:Generated_Source\PSoC5/SPIS.c **** * Summary:
1149:Generated_Source\PSoC5/SPIS.c **** *  Disable internal interrupt generation.
1150:Generated_Source\PSoC5/SPIS.c **** *
1151:Generated_Source\PSoC5/SPIS.c **** * Parameters:
1152:Generated_Source\PSoC5/SPIS.c **** *  None.
1153:Generated_Source\PSoC5/SPIS.c **** *
1154:Generated_Source\PSoC5/SPIS.c **** * Return:
1155:Generated_Source\PSoC5/SPIS.c **** *  None.
1156:Generated_Source\PSoC5/SPIS.c **** *
1157:Generated_Source\PSoC5/SPIS.c **** * Theory:
1158:Generated_Source\PSoC5/SPIS.c **** *  Disable the internal interrupt output -or- the interrupt component itself.
1159:Generated_Source\PSoC5/SPIS.c **** *
1160:Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
1161:Generated_Source\PSoC5/SPIS.c **** void SPIS_DisableInt(void) 
1162:Generated_Source\PSoC5/SPIS.c **** {
ARM GAS  C:\Users\Mathias\AppData\Local\Temp\ccH8Ni7h.s 			page 38


 925              		.loc 1 1162 0
 926              		.cfi_startproc
 927              		@ args = 0, pretend = 0, frame = 0
 928              		@ frame_needed = 0, uses_anonymous_args = 0
 929              		@ link register save eliminated.
1163:Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_INTERNAL_TX_INT_ENABLED)
1164:Generated_Source\PSoC5/SPIS.c ****         CyIntDisable(SPIS_TX_ISR_NUMBER);
1165:Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_INTERNAL_TX_INT_ENABLED */
1166:Generated_Source\PSoC5/SPIS.c **** 
1167:Generated_Source\PSoC5/SPIS.c ****     #if(SPIS_INTERNAL_RX_INT_ENABLED)
1168:Generated_Source\PSoC5/SPIS.c ****         CyIntDisable(SPIS_RX_ISR_NUMBER);
 930              		.loc 1 1168 0
 931 0000 0122     		movs	r2, #1
 932 0002 014B     		ldr	r3, .L89
 933 0004 1A60     		str	r2, [r3]
 934 0006 7047     		bx	lr
 935              	.L90:
 936              		.align	2
 937              	.L89:
 938 0008 80E100E0 		.word	-536813184
 939              		.cfi_endproc
 940              	.LFE22:
 941              		.size	SPIS_DisableInt, .-SPIS_DisableInt
 942              		.section	.text.SPIS_SetInterruptMode,"ax",%progbits
 943              		.align	2
 944              		.global	SPIS_SetInterruptMode
 945              		.thumb
 946              		.thumb_func
 947              		.type	SPIS_SetInterruptMode, %function
 948              	SPIS_SetInterruptMode:
 949              	.LFB23:
1169:Generated_Source\PSoC5/SPIS.c ****     #endif /* SPIS_INTERNAL_RX_INT_ENABLED */
1170:Generated_Source\PSoC5/SPIS.c **** }
1171:Generated_Source\PSoC5/SPIS.c **** 
1172:Generated_Source\PSoC5/SPIS.c **** 
1173:Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
1174:Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_SetInterruptMode
1175:Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
1176:Generated_Source\PSoC5/SPIS.c **** *
1177:Generated_Source\PSoC5/SPIS.c **** * Summary:
1178:Generated_Source\PSoC5/SPIS.c **** *  Configure which status bits trigger an interrupt event.
1179:Generated_Source\PSoC5/SPIS.c **** *
1180:Generated_Source\PSoC5/SPIS.c **** * Parameters:
1181:Generated_Source\PSoC5/SPIS.c **** *  intSrc: An or'd combination of the desired status bit masks (defined in the
1182:Generated_Source\PSoC5/SPIS.c **** *  header file).
1183:Generated_Source\PSoC5/SPIS.c **** *
1184:Generated_Source\PSoC5/SPIS.c **** * Return:
1185:Generated_Source\PSoC5/SPIS.c **** *  None.
1186:Generated_Source\PSoC5/SPIS.c **** *
1187:Generated_Source\PSoC5/SPIS.c **** * Theory:
1188:Generated_Source\PSoC5/SPIS.c **** *  Enables the output of specific status bits to the interrupt controller.
1189:Generated_Source\PSoC5/SPIS.c **** *
1190:Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
1191:Generated_Source\PSoC5/SPIS.c **** void SPIS_SetInterruptMode(uint8 intSrc) 
1192:Generated_Source\PSoC5/SPIS.c **** {
 950              		.loc 1 1192 0
 951              		.cfi_startproc
ARM GAS  C:\Users\Mathias\AppData\Local\Temp\ccH8Ni7h.s 			page 39


 952              		@ args = 0, pretend = 0, frame = 0
 953              		@ frame_needed = 0, uses_anonymous_args = 0
 954              		@ link register save eliminated.
 955              	.LVL48:
1193:Generated_Source\PSoC5/SPIS.c ****     SPIS_TX_STATUS_MASK_REG  = intSrc;
 956              		.loc 1 1193 0
 957 0000 024B     		ldr	r3, .L92
 958 0002 1870     		strb	r0, [r3]
1194:Generated_Source\PSoC5/SPIS.c ****     SPIS_RX_STATUS_MASK_REG  = intSrc;
 959              		.loc 1 1194 0
 960 0004 FE3B     		subs	r3, r3, #254
 961 0006 1870     		strb	r0, [r3]
 962 0008 7047     		bx	lr
 963              	.L93:
 964 000a 00BF     		.align	2
 965              	.L92:
 966 000c 88650040 		.word	1073767816
 967              		.cfi_endproc
 968              	.LFE23:
 969              		.size	SPIS_SetInterruptMode, .-SPIS_SetInterruptMode
 970              		.section	.text.SPIS_ReadStatus,"ax",%progbits
 971              		.align	2
 972              		.global	SPIS_ReadStatus
 973              		.thumb
 974              		.thumb_func
 975              		.type	SPIS_ReadStatus, %function
 976              	SPIS_ReadStatus:
 977              	.LFB24:
1195:Generated_Source\PSoC5/SPIS.c **** }
1196:Generated_Source\PSoC5/SPIS.c **** 
1197:Generated_Source\PSoC5/SPIS.c **** 
1198:Generated_Source\PSoC5/SPIS.c **** /*******************************************************************************
1199:Generated_Source\PSoC5/SPIS.c **** * Function Name: SPIS_ReadStatus
1200:Generated_Source\PSoC5/SPIS.c **** ********************************************************************************
1201:Generated_Source\PSoC5/SPIS.c **** *
1202:Generated_Source\PSoC5/SPIS.c **** * Summary:
1203:Generated_Source\PSoC5/SPIS.c **** *  Read the status register for the component.
1204:Generated_Source\PSoC5/SPIS.c **** *
1205:Generated_Source\PSoC5/SPIS.c **** * Parameters:
1206:Generated_Source\PSoC5/SPIS.c **** *  None.
1207:Generated_Source\PSoC5/SPIS.c **** *
1208:Generated_Source\PSoC5/SPIS.c **** * Return:
1209:Generated_Source\PSoC5/SPIS.c **** *  Contents of the status register.
1210:Generated_Source\PSoC5/SPIS.c **** *
1211:Generated_Source\PSoC5/SPIS.c **** * Global variables:
1212:Generated_Source\PSoC5/SPIS.c **** *  SPIS_swStatus - used to store in software status register,
1213:Generated_Source\PSoC5/SPIS.c **** *  modified every function call - resets to zero.
1214:Generated_Source\PSoC5/SPIS.c **** *
1215:Generated_Source\PSoC5/SPIS.c **** * Theory:
1216:Generated_Source\PSoC5/SPIS.c **** *  Allows the user and the API to read the status register for error detection
1217:Generated_Source\PSoC5/SPIS.c **** *  and flow control.
1218:Generated_Source\PSoC5/SPIS.c **** *
1219:Generated_Source\PSoC5/SPIS.c **** * Side Effects:
1220:Generated_Source\PSoC5/SPIS.c **** *  Clear status register of the component.
1221:Generated_Source\PSoC5/SPIS.c **** *
1222:Generated_Source\PSoC5/SPIS.c **** * Reentrant:
1223:Generated_Source\PSoC5/SPIS.c **** *  No.
ARM GAS  C:\Users\Mathias\AppData\Local\Temp\ccH8Ni7h.s 			page 40


1224:Generated_Source\PSoC5/SPIS.c **** *
1225:Generated_Source\PSoC5/SPIS.c **** *******************************************************************************/
1226:Generated_Source\PSoC5/SPIS.c **** uint8 SPIS_ReadStatus(void) 
1227:Generated_Source\PSoC5/SPIS.c **** {
 978              		.loc 1 1227 0
 979              		.cfi_startproc
 980              		@ args = 0, pretend = 0, frame = 0
 981              		@ frame_needed = 0, uses_anonymous_args = 0
 982 0000 10B5     		push	{r4, lr}
 983              		.cfi_def_cfa_offset 8
 984              		.cfi_offset 4, -8
 985              		.cfi_offset 14, -4
1228:Generated_Source\PSoC5/SPIS.c ****     uint8 tmpStatus;
1229:Generated_Source\PSoC5/SPIS.c **** 
1230:Generated_Source\PSoC5/SPIS.c ****     #if ((SPIS_TX_SOFTWARE_BUF_ENABLED) || (SPIS_RX_SOFTWARE_BUF_ENABLED))
1231:Generated_Source\PSoC5/SPIS.c **** 
1232:Generated_Source\PSoC5/SPIS.c ****         SPIS_DisableInt();
 986              		.loc 1 1232 0
 987 0002 FFF7FEFF 		bl	SPIS_DisableInt
 988              	.LVL49:
1233:Generated_Source\PSoC5/SPIS.c **** 
1234:Generated_Source\PSoC5/SPIS.c ****         tmpStatus = SPIS_GET_STATUS_TX(SPIS_swStatusTx) |
 989              		.loc 1 1234 0
 990 0006 0C4B     		ldr	r3, .L96
 991 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 992 000a 0C49     		ldr	r1, .L96+4
 993 000c 0C78     		ldrb	r4, [r1]	@ zero_extendqisi2
 994 000e 04F06104 		and	r4, r4, #97
 995 0012 2343     		orrs	r3, r3, r4
1235:Generated_Source\PSoC5/SPIS.c ****               (SPIS_GET_STATUS_RX(SPIS_swStatusRx) & (uint8)~SPIS_STS_RX_FIFO_FULL);
 996              		.loc 1 1235 0
 997 0014 0A4A     		ldr	r2, .L96+8
 998 0016 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 999 0018 0A4A     		ldr	r2, .L96+12
 1000 001a 1478     		ldrb	r4, [r2]	@ zero_extendqisi2
 1001 001c 04F06104 		and	r4, r4, #97
 1002 0020 0443     		orrs	r4, r4, r0
1234:Generated_Source\PSoC5/SPIS.c ****               (SPIS_GET_STATUS_RX(SPIS_swStatusRx) & (uint8)~SPIS_STS_RX_FIFO_FULL);
 1003              		.loc 1 1234 0
 1004 0022 24F04004 		bic	r4, r4, #64
 1005 0026 1C43     		orrs	r4, r4, r3
 1006              	.LVL50:
1236:Generated_Source\PSoC5/SPIS.c **** 
1237:Generated_Source\PSoC5/SPIS.c ****         SPIS_swStatusTx = 0u;
 1007              		.loc 1 1237 0
 1008 0028 0023     		movs	r3, #0
 1009 002a 0B70     		strb	r3, [r1]
1238:Generated_Source\PSoC5/SPIS.c ****         SPIS_swStatusRx = 0u;
 1010              		.loc 1 1238 0
 1011 002c 1370     		strb	r3, [r2]
1239:Generated_Source\PSoC5/SPIS.c **** 
1240:Generated_Source\PSoC5/SPIS.c ****         /* Enable Interrupts */
1241:Generated_Source\PSoC5/SPIS.c ****         SPIS_EnableInt();
 1012              		.loc 1 1241 0
 1013 002e FFF7FEFF 		bl	SPIS_EnableInt
 1014              	.LVL51:
1242:Generated_Source\PSoC5/SPIS.c **** 
ARM GAS  C:\Users\Mathias\AppData\Local\Temp\ccH8Ni7h.s 			page 41


1243:Generated_Source\PSoC5/SPIS.c ****     #else /* !((SPIS_TX_SOFTWARE_BUF_ENABLED) || (SPIS_RX_SOFTWARE_BUF_ENABLED)) */
1244:Generated_Source\PSoC5/SPIS.c **** 
1245:Generated_Source\PSoC5/SPIS.c ****         tmpStatus = SPIS_TX_STATUS_REG | (SPIS_RX_STATUS_REG &
1246:Generated_Source\PSoC5/SPIS.c ****                                                       (uint8)~SPIS_STS_RX_FIFO_FULL);
1247:Generated_Source\PSoC5/SPIS.c **** 
1248:Generated_Source\PSoC5/SPIS.c ****     #endif /* (SPIS_TX_SOFTWARE_BUF_ENABLED) || (SPIS_RX_SOFTWARE_BUF_ENABLED) */
1249:Generated_Source\PSoC5/SPIS.c **** 
1250:Generated_Source\PSoC5/SPIS.c ****     return(tmpStatus);
1251:Generated_Source\PSoC5/SPIS.c **** }
 1015              		.loc 1 1251 0
 1016 0032 2046     		mov	r0, r4
 1017 0034 10BD     		pop	{r4, pc}
 1018              	.LVL52:
 1019              	.L97:
 1020 0036 00BF     		.align	2
 1021              	.L96:
 1022 0038 68650040 		.word	1073767784
 1023 003c 00000000 		.word	SPIS_swStatusTx
 1024 0040 6A640040 		.word	1073767530
 1025 0044 00000000 		.word	SPIS_swStatusRx
 1026              		.cfi_endproc
 1027              	.LFE24:
 1028              		.size	SPIS_ReadStatus, .-SPIS_ReadStatus
 1029              		.comm	SPIS_swStatusRx,1,1
 1030              		.comm	SPIS_swStatusTx,1,1
 1031              		.global	SPIS_initVar
 1032              		.comm	SPIS_rxBufferFull,1,1
 1033              		.comm	SPIS_rxBufferWrite,1,1
 1034              		.comm	SPIS_rxBufferRead,1,1
 1035              		.comm	SPIS_rxBuffer,8,4
 1036              		.bss
 1037              		.set	.LANCHOR0,. + 0
 1038              		.type	SPIS_initVar, %object
 1039              		.size	SPIS_initVar, 1
 1040              	SPIS_initVar:
 1041 0000 00       		.space	1
 1042              		.text
 1043              	.Letext0:
 1044              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1045              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 1046              		.section	.debug_info,"",%progbits
 1047              	.Ldebug_info0:
 1048 0000 D2050000 		.4byte	0x5d2
 1049 0004 0400     		.2byte	0x4
 1050 0006 00000000 		.4byte	.Ldebug_abbrev0
 1051 000a 04       		.byte	0x4
 1052 000b 01       		.uleb128 0x1
 1053 000c 21030000 		.4byte	.LASF64
 1054 0010 0C       		.byte	0xc
 1055 0011 E9020000 		.4byte	.LASF65
 1056 0015 C1000000 		.4byte	.LASF66
 1057 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1058 001d 00000000 		.4byte	0
 1059 0021 00000000 		.4byte	.Ldebug_line0
 1060 0025 02       		.uleb128 0x2
 1061 0026 01       		.byte	0x1
 1062 0027 06       		.byte	0x6
ARM GAS  C:\Users\Mathias\AppData\Local\Temp\ccH8Ni7h.s 			page 42


 1063 0028 AC000000 		.4byte	.LASF0
 1064 002c 02       		.uleb128 0x2
 1065 002d 01       		.byte	0x1
 1066 002e 08       		.byte	0x8
 1067 002f DB020000 		.4byte	.LASF1
 1068 0033 02       		.uleb128 0x2
 1069 0034 02       		.byte	0x2
 1070 0035 05       		.byte	0x5
 1071 0036 17030000 		.4byte	.LASF2
 1072 003a 02       		.uleb128 0x2
 1073 003b 02       		.byte	0x2
 1074 003c 07       		.byte	0x7
 1075 003d AF010000 		.4byte	.LASF3
 1076 0041 02       		.uleb128 0x2
 1077 0042 04       		.byte	0x4
 1078 0043 05       		.byte	0x5
 1079 0044 B8000000 		.4byte	.LASF4
 1080 0048 02       		.uleb128 0x2
 1081 0049 04       		.byte	0x4
 1082 004a 07       		.byte	0x7
 1083 004b 81010000 		.4byte	.LASF5
 1084 004f 02       		.uleb128 0x2
 1085 0050 08       		.byte	0x8
 1086 0051 05       		.byte	0x5
 1087 0052 9E000000 		.4byte	.LASF6
 1088 0056 02       		.uleb128 0x2
 1089 0057 08       		.byte	0x8
 1090 0058 07       		.byte	0x7
 1091 0059 6A000000 		.4byte	.LASF7
 1092 005d 03       		.uleb128 0x3
 1093 005e 04       		.byte	0x4
 1094 005f 05       		.byte	0x5
 1095 0060 696E7400 		.ascii	"int\000"
 1096 0064 02       		.uleb128 0x2
 1097 0065 04       		.byte	0x4
 1098 0066 07       		.byte	0x7
 1099 0067 64010000 		.4byte	.LASF8
 1100 006b 04       		.uleb128 0x4
 1101 006c 1D010000 		.4byte	.LASF9
 1102 0070 02       		.byte	0x2
 1103 0071 E401     		.2byte	0x1e4
 1104 0073 2C000000 		.4byte	0x2c
 1105 0077 04       		.uleb128 0x4
 1106 0078 36010000 		.4byte	.LASF10
 1107 007c 02       		.byte	0x2
 1108 007d E601     		.2byte	0x1e6
 1109 007f 48000000 		.4byte	0x48
 1110 0083 02       		.uleb128 0x2
 1111 0084 04       		.byte	0x4
 1112 0085 04       		.byte	0x4
 1113 0086 A5020000 		.4byte	.LASF11
 1114 008a 02       		.uleb128 0x2
 1115 008b 08       		.byte	0x8
 1116 008c 04       		.byte	0x4
 1117 008d 23010000 		.4byte	.LASF12
 1118 0091 02       		.uleb128 0x2
 1119 0092 01       		.byte	0x1
ARM GAS  C:\Users\Mathias\AppData\Local\Temp\ccH8Ni7h.s 			page 43


 1120 0093 08       		.byte	0x8
 1121 0094 E3030000 		.4byte	.LASF13
 1122 0098 04       		.uleb128 0x4
 1123 0099 C5020000 		.4byte	.LASF14
 1124 009d 02       		.byte	0x2
 1125 009e 8E02     		.2byte	0x28e
 1126 00a0 A4000000 		.4byte	0xa4
 1127 00a4 05       		.uleb128 0x5
 1128 00a5 6B000000 		.4byte	0x6b
 1129 00a9 04       		.uleb128 0x4
 1130 00aa 3B020000 		.4byte	.LASF15
 1131 00ae 02       		.byte	0x2
 1132 00af 9002     		.2byte	0x290
 1133 00b1 B5000000 		.4byte	0xb5
 1134 00b5 05       		.uleb128 0x5
 1135 00b6 77000000 		.4byte	0x77
 1136 00ba 02       		.uleb128 0x2
 1137 00bb 08       		.byte	0x8
 1138 00bc 04       		.byte	0x4
 1139 00bd 78020000 		.4byte	.LASF16
 1140 00c1 02       		.uleb128 0x2
 1141 00c2 04       		.byte	0x4
 1142 00c3 07       		.byte	0x7
 1143 00c4 6F020000 		.4byte	.LASF17
 1144 00c8 06       		.uleb128 0x6
 1145 00c9 2A010000 		.4byte	.LASF18
 1146 00cd 01       		.byte	0x1
 1147 00ce 8E       		.byte	0x8e
 1148 00cf 00000000 		.4byte	.LFB1
 1149 00d3 38000000 		.4byte	.LFE1-.LFB1
 1150 00d7 01       		.uleb128 0x1
 1151 00d8 9C       		.byte	0x9c
 1152 00d9 FF000000 		.4byte	0xff
 1153 00dd 07       		.uleb128 0x7
 1154 00de 3C040000 		.4byte	.LASF20
 1155 00e2 01       		.byte	0x1
 1156 00e3 90       		.byte	0x90
 1157 00e4 6B000000 		.4byte	0x6b
 1158 00e8 00000000 		.4byte	.LLST0
 1159 00ec 08       		.uleb128 0x8
 1160 00ed 06000000 		.4byte	.LVL0
 1161 00f1 A9050000 		.4byte	0x5a9
 1162 00f5 08       		.uleb128 0x8
 1163 00f6 28000000 		.4byte	.LVL1
 1164 00fa B4050000 		.4byte	0x5b4
 1165 00fe 00       		.byte	0
 1166 00ff 06       		.uleb128 0x6
 1167 0100 AB020000 		.4byte	.LASF19
 1168 0104 01       		.byte	0x1
 1169 0105 D8       		.byte	0xd8
 1170 0106 00000000 		.4byte	.LFB3
 1171 010a 30000000 		.4byte	.LFE3-.LFB3
 1172 010e 01       		.uleb128 0x1
 1173 010f 9C       		.byte	0x9c
 1174 0110 36010000 		.4byte	0x136
 1175 0114 07       		.uleb128 0x7
 1176 0115 3C040000 		.4byte	.LASF20
ARM GAS  C:\Users\Mathias\AppData\Local\Temp\ccH8Ni7h.s 			page 44


 1177 0119 01       		.byte	0x1
 1178 011a DA       		.byte	0xda
 1179 011b 6B000000 		.4byte	0x6b
 1180 011f 13000000 		.4byte	.LLST1
 1181 0123 08       		.uleb128 0x8
 1182 0124 06000000 		.4byte	.LVL2
 1183 0128 A9050000 		.4byte	0x5a9
 1184 012c 08       		.uleb128 0x8
 1185 012d 1E000000 		.4byte	.LVL3
 1186 0131 B4050000 		.4byte	0x5b4
 1187 0135 00       		.byte	0
 1188 0136 09       		.uleb128 0x9
 1189 0137 4D040000 		.4byte	.LASF21
 1190 013b 01       		.byte	0x1
 1191 013c FD       		.byte	0xfd
 1192 013d 00000000 		.4byte	.LFB4
 1193 0141 02000000 		.4byte	.LFE4-.LFB4
 1194 0145 01       		.uleb128 0x1
 1195 0146 9C       		.byte	0x9c
 1196 0147 0A       		.uleb128 0xa
 1197 0148 CA020000 		.4byte	.LASF22
 1198 014c 01       		.byte	0x1
 1199 014d 1601     		.2byte	0x116
 1200 014f 00000000 		.4byte	.LFB5
 1201 0153 0C000000 		.4byte	.LFE5-.LFB5
 1202 0157 01       		.uleb128 0x1
 1203 0158 9C       		.byte	0x9c
 1204 0159 0A       		.uleb128 0xa
 1205 015a 29020000 		.4byte	.LASF23
 1206 015e 01       		.byte	0x1
 1207 015f 2F01     		.2byte	0x12f
 1208 0161 00000000 		.4byte	.LFB6
 1209 0165 02000000 		.4byte	.LFE6-.LFB6
 1210 0169 01       		.uleb128 0x1
 1211 016a 9C       		.byte	0x9c
 1212 016b 0A       		.uleb128 0xa
 1213 016c 69040000 		.4byte	.LASF24
 1214 0170 01       		.byte	0x1
 1215 0171 4801     		.2byte	0x148
 1216 0173 00000000 		.4byte	.LFB7
 1217 0177 0C000000 		.4byte	.LFE7-.LFB7
 1218 017b 01       		.uleb128 0x1
 1219 017c 9C       		.byte	0x9c
 1220 017d 0B       		.uleb128 0xb
 1221 017e 20000000 		.4byte	.LASF25
 1222 0182 01       		.byte	0x1
 1223 0183 6201     		.2byte	0x162
 1224 0185 00000000 		.4byte	.LFB8
 1225 0189 0C000000 		.4byte	.LFE8-.LFB8
 1226 018d 01       		.uleb128 0x1
 1227 018e 9C       		.byte	0x9c
 1228 018f A2010000 		.4byte	0x1a2
 1229 0193 0C       		.uleb128 0xc
 1230 0194 10020000 		.4byte	.LASF27
 1231 0198 01       		.byte	0x1
 1232 0199 6201     		.2byte	0x162
 1233 019b 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\Mathias\AppData\Local\Temp\ccH8Ni7h.s 			page 45


 1234 019f 01       		.uleb128 0x1
 1235 01a0 50       		.byte	0x50
 1236 01a1 00       		.byte	0
 1237 01a2 0B       		.uleb128 0xb
 1238 01a3 C4030000 		.4byte	.LASF26
 1239 01a7 01       		.byte	0x1
 1240 01a8 7A01     		.2byte	0x17a
 1241 01aa 00000000 		.4byte	.LFB9
 1242 01ae 0C000000 		.4byte	.LFE9-.LFB9
 1243 01b2 01       		.uleb128 0x1
 1244 01b3 9C       		.byte	0x9c
 1245 01b4 C7010000 		.4byte	0x1c7
 1246 01b8 0C       		.uleb128 0xc
 1247 01b9 10020000 		.4byte	.LASF27
 1248 01bd 01       		.byte	0x1
 1249 01be 7A01     		.2byte	0x17a
 1250 01c0 6B000000 		.4byte	0x6b
 1251 01c4 01       		.uleb128 0x1
 1252 01c5 50       		.byte	0x50
 1253 01c6 00       		.byte	0
 1254 01c7 0D       		.uleb128 0xd
 1255 01c8 17020000 		.4byte	.LASF29
 1256 01cc 01       		.byte	0x1
 1257 01cd 9C01     		.2byte	0x19c
 1258 01cf 6B000000 		.4byte	0x6b
 1259 01d3 00000000 		.4byte	.LFB10
 1260 01d7 0C000000 		.4byte	.LFE10-.LFB10
 1261 01db 01       		.uleb128 0x1
 1262 01dc 9C       		.byte	0x9c
 1263 01dd F0010000 		.4byte	0x1f0
 1264 01e1 0E       		.uleb128 0xe
 1265 01e2 81000000 		.4byte	.LASF28
 1266 01e6 01       		.byte	0x1
 1267 01e7 9E01     		.2byte	0x19e
 1268 01e9 6B000000 		.4byte	0x6b
 1269 01ed 01       		.uleb128 0x1
 1270 01ee 50       		.byte	0x50
 1271 01ef 00       		.byte	0
 1272 01f0 0D       		.uleb128 0xd
 1273 01f1 E8030000 		.4byte	.LASF30
 1274 01f5 01       		.byte	0x1
 1275 01f6 D101     		.2byte	0x1d1
 1276 01f8 6B000000 		.4byte	0x6b
 1277 01fc 00000000 		.4byte	.LFB11
 1278 0200 28000000 		.4byte	.LFE11-.LFB11
 1279 0204 01       		.uleb128 0x1
 1280 0205 9C       		.byte	0x9c
 1281 0206 2D020000 		.4byte	0x22d
 1282 020a 0F       		.uleb128 0xf
 1283 020b 81000000 		.4byte	.LASF28
 1284 020f 01       		.byte	0x1
 1285 0210 D301     		.2byte	0x1d3
 1286 0212 6B000000 		.4byte	0x6b
 1287 0216 26000000 		.4byte	.LLST2
 1288 021a 08       		.uleb128 0x8
 1289 021b 06000000 		.4byte	.LVL7
 1290 021f 6B010000 		.4byte	0x16b
ARM GAS  C:\Users\Mathias\AppData\Local\Temp\ccH8Ni7h.s 			page 46


 1291 0223 08       		.uleb128 0x8
 1292 0224 1C000000 		.4byte	.LVL9
 1293 0228 47010000 		.4byte	0x147
 1294 022c 00       		.byte	0
 1295 022d 0B       		.uleb128 0xb
 1296 022e DA010000 		.4byte	.LASF31
 1297 0232 01       		.byte	0x1
 1298 0233 0C02     		.2byte	0x20c
 1299 0235 00000000 		.4byte	.LFB12
 1300 0239 18000000 		.4byte	.LFE12-.LFB12
 1301 023d 01       		.uleb128 0x1
 1302 023e 9C       		.byte	0x9c
 1303 023f 52020000 		.4byte	0x252
 1304 0243 0C       		.uleb128 0xc
 1305 0244 8A040000 		.4byte	.LASF32
 1306 0248 01       		.byte	0x1
 1307 0249 0C02     		.2byte	0x20c
 1308 024b 6B000000 		.4byte	0x6b
 1309 024f 01       		.uleb128 0x1
 1310 0250 50       		.byte	0x50
 1311 0251 00       		.byte	0
 1312 0252 0B       		.uleb128 0xb
 1313 0253 3D010000 		.4byte	.LASF33
 1314 0257 01       		.byte	0x1
 1315 0258 6B02     		.2byte	0x26b
 1316 025a 00000000 		.4byte	.LFB13
 1317 025e 0C000000 		.4byte	.LFE13-.LFB13
 1318 0262 01       		.uleb128 0x1
 1319 0263 9C       		.byte	0x9c
 1320 0264 77020000 		.4byte	0x277
 1321 0268 0C       		.uleb128 0xc
 1322 0269 5E040000 		.4byte	.LASF34
 1323 026d 01       		.byte	0x1
 1324 026e 6B02     		.2byte	0x26b
 1325 0270 6B000000 		.4byte	0x6b
 1326 0274 01       		.uleb128 0x1
 1327 0275 50       		.byte	0x50
 1328 0276 00       		.byte	0
 1329 0277 0D       		.uleb128 0xd
 1330 0278 84020000 		.4byte	.LASF35
 1331 027c 01       		.byte	0x1
 1332 027d 9502     		.2byte	0x295
 1333 027f 6B000000 		.4byte	0x6b
 1334 0283 00000000 		.4byte	.LFB14
 1335 0287 64000000 		.4byte	.LFE14-.LFB14
 1336 028b 01       		.uleb128 0x1
 1337 028c 9C       		.byte	0x9c
 1338 028d B4020000 		.4byte	0x2b4
 1339 0291 0F       		.uleb128 0xf
 1340 0292 DC030000 		.4byte	.LASF36
 1341 0296 01       		.byte	0x1
 1342 0297 9702     		.2byte	0x297
 1343 0299 6B000000 		.4byte	0x6b
 1344 029d 44000000 		.4byte	.LLST3
 1345 02a1 08       		.uleb128 0x8
 1346 02a2 06000000 		.4byte	.LVL13
 1347 02a6 6B010000 		.4byte	0x16b
ARM GAS  C:\Users\Mathias\AppData\Local\Temp\ccH8Ni7h.s 			page 47


 1348 02aa 08       		.uleb128 0x8
 1349 02ab 50000000 		.4byte	.LVL15
 1350 02af 47010000 		.4byte	0x147
 1351 02b3 00       		.byte	0
 1352 02b4 0D       		.uleb128 0xd
 1353 02b5 55000000 		.4byte	.LASF37
 1354 02b9 01       		.byte	0x1
 1355 02ba D702     		.2byte	0x2d7
 1356 02bc 6B000000 		.4byte	0x6b
 1357 02c0 00000000 		.4byte	.LFB15
 1358 02c4 58000000 		.4byte	.LFE15-.LFB15
 1359 02c8 01       		.uleb128 0x1
 1360 02c9 9C       		.byte	0x9c
 1361 02ca F1020000 		.4byte	0x2f1
 1362 02ce 0F       		.uleb128 0xf
 1363 02cf AA010000 		.4byte	.LASF38
 1364 02d3 01       		.byte	0x1
 1365 02d4 D902     		.2byte	0x2d9
 1366 02d6 6B000000 		.4byte	0x6b
 1367 02da 62000000 		.4byte	.LLST4
 1368 02de 08       		.uleb128 0x8
 1369 02df 06000000 		.4byte	.LVL17
 1370 02e3 6B010000 		.4byte	0x16b
 1371 02e7 08       		.uleb128 0x8
 1372 02e8 4A000000 		.4byte	.LVL23
 1373 02ec 47010000 		.4byte	0x147
 1374 02f0 00       		.byte	0
 1375 02f1 0D       		.uleb128 0xd
 1376 02f2 FA030000 		.4byte	.LASF39
 1377 02f6 01       		.byte	0x1
 1378 02f7 1803     		.2byte	0x318
 1379 02f9 6B000000 		.4byte	0x6b
 1380 02fd 00000000 		.4byte	.LFB16
 1381 0301 24000000 		.4byte	.LFE16-.LFB16
 1382 0305 01       		.uleb128 0x1
 1383 0306 9C       		.byte	0x9c
 1384 0307 1C030000 		.4byte	0x31c
 1385 030b 0F       		.uleb128 0xf
 1386 030c AA010000 		.4byte	.LASF38
 1387 0310 01       		.byte	0x1
 1388 0311 1A03     		.2byte	0x31a
 1389 0313 6B000000 		.4byte	0x6b
 1390 0317 8B000000 		.4byte	.LLST5
 1391 031b 00       		.byte	0
 1392 031c 0B       		.uleb128 0xb
 1393 031d 8B000000 		.4byte	.LASF40
 1394 0321 01       		.byte	0x1
 1395 0322 6A03     		.2byte	0x36a
 1396 0324 00000000 		.4byte	.LFB17
 1397 0328 40000000 		.4byte	.LFE17-.LFB17
 1398 032c 01       		.uleb128 0x1
 1399 032d 9C       		.byte	0x9c
 1400 032e 45030000 		.4byte	0x345
 1401 0332 08       		.uleb128 0x8
 1402 0333 16000000 		.4byte	.LVL27
 1403 0337 6B010000 		.4byte	0x16b
 1404 033b 08       		.uleb128 0x8
ARM GAS  C:\Users\Mathias\AppData\Local\Temp\ccH8Ni7h.s 			page 48


 1405 033c 28000000 		.4byte	.LVL28
 1406 0340 47010000 		.4byte	0x147
 1407 0344 00       		.byte	0
 1408 0345 0B       		.uleb128 0xb
 1409 0346 5C020000 		.4byte	.LASF41
 1410 034a 01       		.byte	0x1
 1411 034b A303     		.2byte	0x3a3
 1412 034d 00000000 		.4byte	.LFB18
 1413 0351 24000000 		.4byte	.LFE18-.LFB18
 1414 0355 01       		.uleb128 0x1
 1415 0356 9C       		.byte	0x9c
 1416 0357 7E030000 		.4byte	0x37e
 1417 035b 0F       		.uleb128 0xf
 1418 035c 3C040000 		.4byte	.LASF20
 1419 0360 01       		.byte	0x1
 1420 0361 A503     		.2byte	0x3a5
 1421 0363 6B000000 		.4byte	0x6b
 1422 0367 A9000000 		.4byte	.LLST6
 1423 036b 08       		.uleb128 0x8
 1424 036c 06000000 		.4byte	.LVL29
 1425 0370 A9050000 		.4byte	0x5a9
 1426 0374 08       		.uleb128 0x8
 1427 0375 1C000000 		.4byte	.LVL30
 1428 0379 B4050000 		.4byte	0x5b4
 1429 037d 00       		.byte	0
 1430 037e 0B       		.uleb128 0xb
 1431 037f 4E020000 		.4byte	.LASF42
 1432 0383 01       		.byte	0x1
 1433 0384 1704     		.2byte	0x417
 1434 0386 00000000 		.4byte	.LFB19
 1435 038a 1E000000 		.4byte	.LFE19-.LFB19
 1436 038e 01       		.uleb128 0x1
 1437 038f 9C       		.byte	0x9c
 1438 0390 CE030000 		.4byte	0x3ce
 1439 0394 10       		.uleb128 0x10
 1440 0395 0F040000 		.4byte	.LASF43
 1441 0399 01       		.byte	0x1
 1442 039a 1704     		.2byte	0x417
 1443 039c CE030000 		.4byte	0x3ce
 1444 03a0 BC000000 		.4byte	.LLST7
 1445 03a4 10       		.uleb128 0x10
 1446 03a5 AF030000 		.4byte	.LASF44
 1447 03a9 01       		.byte	0x1
 1448 03aa 1704     		.2byte	0x417
 1449 03ac 6B000000 		.4byte	0x6b
 1450 03b0 DA000000 		.4byte	.LLST8
 1451 03b4 0F       		.uleb128 0xf
 1452 03b5 D1010000 		.4byte	.LASF45
 1453 03b9 01       		.byte	0x1
 1454 03ba 1A04     		.2byte	0x41a
 1455 03bc 6B000000 		.4byte	0x6b
 1456 03c0 03010000 		.4byte	.LLST9
 1457 03c4 08       		.uleb128 0x8
 1458 03c5 10000000 		.4byte	.LVL34
 1459 03c9 2D020000 		.4byte	0x22d
 1460 03cd 00       		.byte	0
 1461 03ce 11       		.uleb128 0x11
ARM GAS  C:\Users\Mathias\AppData\Local\Temp\ccH8Ni7h.s 			page 49


 1462 03cf 04       		.byte	0x4
 1463 03d0 D4030000 		.4byte	0x3d4
 1464 03d4 12       		.uleb128 0x12
 1465 03d5 6B000000 		.4byte	0x6b
 1466 03d9 0B       		.uleb128 0xb
 1467 03da 46000000 		.4byte	.LASF46
 1468 03de 01       		.byte	0x1
 1469 03df 3704     		.2byte	0x437
 1470 03e1 00000000 		.4byte	.LFB20
 1471 03e5 3C000000 		.4byte	.LFE20-.LFB20
 1472 03e9 01       		.uleb128 0x1
 1473 03ea 9C       		.byte	0x9c
 1474 03eb 12040000 		.4byte	0x412
 1475 03ef 0F       		.uleb128 0xf
 1476 03f0 3C040000 		.4byte	.LASF20
 1477 03f4 01       		.byte	0x1
 1478 03f5 3904     		.2byte	0x439
 1479 03f7 6B000000 		.4byte	0x6b
 1480 03fb 2D010000 		.4byte	.LLST10
 1481 03ff 08       		.uleb128 0x8
 1482 0400 16000000 		.4byte	.LVL39
 1483 0404 A9050000 		.4byte	0x5a9
 1484 0408 08       		.uleb128 0x8
 1485 0409 2C000000 		.4byte	.LVL40
 1486 040d B4050000 		.4byte	0x5b4
 1487 0411 00       		.byte	0
 1488 0412 06       		.uleb128 0x6
 1489 0413 00000000 		.4byte	.LASF47
 1490 0417 01       		.byte	0x1
 1491 0418 43       		.byte	0x43
 1492 0419 00000000 		.4byte	.LFB0
 1493 041d 60000000 		.4byte	.LFE0-.LFB0
 1494 0421 01       		.uleb128 0x1
 1495 0422 9C       		.byte	0x9c
 1496 0423 6F040000 		.4byte	0x46f
 1497 0427 13       		.uleb128 0x13
 1498 0428 16000000 		.4byte	.LVL41
 1499 042c BF050000 		.4byte	0x5bf
 1500 0430 3A040000 		.4byte	0x43a
 1501 0434 14       		.uleb128 0x14
 1502 0435 01       		.uleb128 0x1
 1503 0436 50       		.byte	0x50
 1504 0437 01       		.uleb128 0x1
 1505 0438 30       		.byte	0x30
 1506 0439 00       		.byte	0
 1507 043a 13       		.uleb128 0x13
 1508 043b 1E000000 		.4byte	.LVL42
 1509 043f CA050000 		.4byte	0x5ca
 1510 0443 53040000 		.4byte	0x453
 1511 0447 14       		.uleb128 0x14
 1512 0448 01       		.uleb128 0x1
 1513 0449 50       		.byte	0x50
 1514 044a 01       		.uleb128 0x1
 1515 044b 30       		.byte	0x30
 1516 044c 14       		.uleb128 0x14
 1517 044d 01       		.uleb128 0x1
 1518 044e 51       		.byte	0x51
ARM GAS  C:\Users\Mathias\AppData\Local\Temp\ccH8Ni7h.s 			page 50


 1519 044f 02       		.uleb128 0x2
 1520 0450 74       		.byte	0x74
 1521 0451 00       		.sleb128 0
 1522 0452 00       		.byte	0
 1523 0453 08       		.uleb128 0x8
 1524 0454 22000000 		.4byte	.LVL43
 1525 0458 D9030000 		.4byte	0x3d9
 1526 045c 08       		.uleb128 0x8
 1527 045d 34000000 		.4byte	.LVL44
 1528 0461 C7010000 		.4byte	0x1c7
 1529 0465 08       		.uleb128 0x8
 1530 0466 38000000 		.4byte	.LVL45
 1531 046a F0010000 		.4byte	0x1f0
 1532 046e 00       		.byte	0
 1533 046f 06       		.uleb128 0x6
 1534 0470 B9030000 		.4byte	.LASF48
 1535 0474 01       		.byte	0x1
 1536 0475 BB       		.byte	0xbb
 1537 0476 00000000 		.4byte	.LFB2
 1538 047a 1C000000 		.4byte	.LFE2-.LFB2
 1539 047e 01       		.uleb128 0x1
 1540 047f 9C       		.byte	0x9c
 1541 0480 97040000 		.4byte	0x497
 1542 0484 08       		.uleb128 0x8
 1543 0485 0C000000 		.4byte	.LVL46
 1544 0489 12040000 		.4byte	0x412
 1545 048d 08       		.uleb128 0x8
 1546 048e 16000000 		.4byte	.LVL47
 1547 0492 C8000000 		.4byte	0xc8
 1548 0496 00       		.byte	0
 1549 0497 0A       		.uleb128 0xa
 1550 0498 7B040000 		.4byte	.LASF49
 1551 049c 01       		.byte	0x1
 1552 049d 6C04     		.2byte	0x46c
 1553 049f 00000000 		.4byte	.LFB21
 1554 04a3 0C000000 		.4byte	.LFE21-.LFB21
 1555 04a7 01       		.uleb128 0x1
 1556 04a8 9C       		.byte	0x9c
 1557 04a9 0A       		.uleb128 0xa
 1558 04aa 2C040000 		.4byte	.LASF50
 1559 04ae 01       		.byte	0x1
 1560 04af 8904     		.2byte	0x489
 1561 04b1 00000000 		.4byte	.LFB22
 1562 04b5 0C000000 		.4byte	.LFE22-.LFB22
 1563 04b9 01       		.uleb128 0x1
 1564 04ba 9C       		.byte	0x9c
 1565 04bb 0B       		.uleb128 0xb
 1566 04bc 16040000 		.4byte	.LASF51
 1567 04c0 01       		.byte	0x1
 1568 04c1 A704     		.2byte	0x4a7
 1569 04c3 00000000 		.4byte	.LFB23
 1570 04c7 10000000 		.4byte	.LFE23-.LFB23
 1571 04cb 01       		.uleb128 0x1
 1572 04cc 9C       		.byte	0x9c
 1573 04cd E0040000 		.4byte	0x4e0
 1574 04d1 0C       		.uleb128 0xc
 1575 04d2 10020000 		.4byte	.LASF27
ARM GAS  C:\Users\Mathias\AppData\Local\Temp\ccH8Ni7h.s 			page 51


 1576 04d6 01       		.byte	0x1
 1577 04d7 A704     		.2byte	0x4a7
 1578 04d9 6B000000 		.4byte	0x6b
 1579 04dd 01       		.uleb128 0x1
 1580 04de 50       		.byte	0x50
 1581 04df 00       		.byte	0
 1582 04e0 0D       		.uleb128 0xd
 1583 04e1 07030000 		.4byte	.LASF52
 1584 04e5 01       		.byte	0x1
 1585 04e6 CA04     		.2byte	0x4ca
 1586 04e8 6B000000 		.4byte	0x6b
 1587 04ec 00000000 		.4byte	.LFB24
 1588 04f0 48000000 		.4byte	.LFE24-.LFB24
 1589 04f4 01       		.uleb128 0x1
 1590 04f5 9C       		.byte	0x9c
 1591 04f6 1D050000 		.4byte	0x51d
 1592 04fa 0F       		.uleb128 0xf
 1593 04fb 81000000 		.4byte	.LASF28
 1594 04ff 01       		.byte	0x1
 1595 0500 CC04     		.2byte	0x4cc
 1596 0502 6B000000 		.4byte	0x6b
 1597 0506 40010000 		.4byte	.LLST11
 1598 050a 08       		.uleb128 0x8
 1599 050b 06000000 		.4byte	.LVL49
 1600 050f A9040000 		.4byte	0x4a9
 1601 0513 08       		.uleb128 0x8
 1602 0514 32000000 		.4byte	.LVL51
 1603 0518 97040000 		.4byte	0x497
 1604 051c 00       		.byte	0
 1605 051d 15       		.uleb128 0x15
 1606 051e 41020000 		.4byte	.LASF53
 1607 0522 01       		.byte	0x1
 1608 0523 26       		.byte	0x26
 1609 0524 6B000000 		.4byte	0x6b
 1610 0528 05       		.uleb128 0x5
 1611 0529 03       		.byte	0x3
 1612 052a 00000000 		.4byte	SPIS_initVar
 1613 052e 15       		.uleb128 0x15
 1614 052f B5020000 		.4byte	.LASF54
 1615 0533 01       		.byte	0x1
 1616 0534 28       		.byte	0x28
 1617 0535 A4000000 		.4byte	0xa4
 1618 0539 05       		.uleb128 0x5
 1619 053a 03       		.byte	0x3
 1620 053b 00000000 		.4byte	SPIS_swStatusTx
 1621 053f 15       		.uleb128 0x15
 1622 0540 71010000 		.4byte	.LASF55
 1623 0544 01       		.byte	0x1
 1624 0545 29       		.byte	0x29
 1625 0546 A4000000 		.4byte	0xa4
 1626 054a 05       		.uleb128 0x5
 1627 054b 03       		.byte	0x3
 1628 054c 00000000 		.4byte	SPIS_swStatusRx
 1629 0550 16       		.uleb128 0x16
 1630 0551 A4000000 		.4byte	0xa4
 1631 0555 60050000 		.4byte	0x560
 1632 0559 17       		.uleb128 0x17
ARM GAS  C:\Users\Mathias\AppData\Local\Temp\ccH8Ni7h.s 			page 52


 1633 055a C1000000 		.4byte	0xc1
 1634 055e 07       		.byte	0x7
 1635 055f 00       		.byte	0
 1636 0560 15       		.uleb128 0x15
 1637 0561 38000000 		.4byte	.LASF56
 1638 0565 01       		.byte	0x1
 1639 0566 1F       		.byte	0x1f
 1640 0567 71050000 		.4byte	0x571
 1641 056b 05       		.uleb128 0x5
 1642 056c 03       		.byte	0x3
 1643 056d 00000000 		.4byte	SPIS_rxBuffer
 1644 0571 05       		.uleb128 0x5
 1645 0572 50050000 		.4byte	0x550
 1646 0576 15       		.uleb128 0x15
 1647 0577 FE010000 		.4byte	.LASF57
 1648 057b 01       		.byte	0x1
 1649 057c 20       		.byte	0x20
 1650 057d A4000000 		.4byte	0xa4
 1651 0581 05       		.uleb128 0x5
 1652 0582 03       		.byte	0x3
 1653 0583 00000000 		.4byte	SPIS_rxBufferRead
 1654 0587 15       		.uleb128 0x15
 1655 0588 EB010000 		.4byte	.LASF58
 1656 058c 01       		.byte	0x1
 1657 058d 21       		.byte	0x21
 1658 058e A4000000 		.4byte	0xa4
 1659 0592 05       		.uleb128 0x5
 1660 0593 03       		.byte	0x3
 1661 0594 00000000 		.4byte	SPIS_rxBufferWrite
 1662 0598 15       		.uleb128 0x15
 1663 0599 52010000 		.4byte	.LASF59
 1664 059d 01       		.byte	0x1
 1665 059e 22       		.byte	0x22
 1666 059f A4000000 		.4byte	0xa4
 1667 05a3 05       		.uleb128 0x5
 1668 05a4 03       		.byte	0x3
 1669 05a5 00000000 		.4byte	SPIS_rxBufferFull
 1670 05a9 18       		.uleb128 0x18
 1671 05aa 93010000 		.4byte	.LASF60
 1672 05ae 93010000 		.4byte	.LASF60
 1673 05b2 03       		.byte	0x3
 1674 05b3 7D       		.byte	0x7d
 1675 05b4 18       		.uleb128 0x18
 1676 05b5 0A000000 		.4byte	.LASF61
 1677 05b9 0A000000 		.4byte	.LASF61
 1678 05bd 03       		.byte	0x3
 1679 05be 7E       		.byte	0x7e
 1680 05bf 18       		.uleb128 0x18
 1681 05c0 C2010000 		.4byte	.LASF62
 1682 05c4 C2010000 		.4byte	.LASF62
 1683 05c8 03       		.byte	0x3
 1684 05c9 88       		.byte	0x88
 1685 05ca 18       		.uleb128 0x18
 1686 05cb 94020000 		.4byte	.LASF63
 1687 05cf 94020000 		.4byte	.LASF63
 1688 05d3 03       		.byte	0x3
 1689 05d4 8B       		.byte	0x8b
ARM GAS  C:\Users\Mathias\AppData\Local\Temp\ccH8Ni7h.s 			page 53


 1690 05d5 00       		.byte	0
 1691              		.section	.debug_abbrev,"",%progbits
 1692              	.Ldebug_abbrev0:
 1693 0000 01       		.uleb128 0x1
 1694 0001 11       		.uleb128 0x11
 1695 0002 01       		.byte	0x1
 1696 0003 25       		.uleb128 0x25
 1697 0004 0E       		.uleb128 0xe
 1698 0005 13       		.uleb128 0x13
 1699 0006 0B       		.uleb128 0xb
 1700 0007 03       		.uleb128 0x3
 1701 0008 0E       		.uleb128 0xe
 1702 0009 1B       		.uleb128 0x1b
 1703 000a 0E       		.uleb128 0xe
 1704 000b 55       		.uleb128 0x55
 1705 000c 17       		.uleb128 0x17
 1706 000d 11       		.uleb128 0x11
 1707 000e 01       		.uleb128 0x1
 1708 000f 10       		.uleb128 0x10
 1709 0010 17       		.uleb128 0x17
 1710 0011 00       		.byte	0
 1711 0012 00       		.byte	0
 1712 0013 02       		.uleb128 0x2
 1713 0014 24       		.uleb128 0x24
 1714 0015 00       		.byte	0
 1715 0016 0B       		.uleb128 0xb
 1716 0017 0B       		.uleb128 0xb
 1717 0018 3E       		.uleb128 0x3e
 1718 0019 0B       		.uleb128 0xb
 1719 001a 03       		.uleb128 0x3
 1720 001b 0E       		.uleb128 0xe
 1721 001c 00       		.byte	0
 1722 001d 00       		.byte	0
 1723 001e 03       		.uleb128 0x3
 1724 001f 24       		.uleb128 0x24
 1725 0020 00       		.byte	0
 1726 0021 0B       		.uleb128 0xb
 1727 0022 0B       		.uleb128 0xb
 1728 0023 3E       		.uleb128 0x3e
 1729 0024 0B       		.uleb128 0xb
 1730 0025 03       		.uleb128 0x3
 1731 0026 08       		.uleb128 0x8
 1732 0027 00       		.byte	0
 1733 0028 00       		.byte	0
 1734 0029 04       		.uleb128 0x4
 1735 002a 16       		.uleb128 0x16
 1736 002b 00       		.byte	0
 1737 002c 03       		.uleb128 0x3
 1738 002d 0E       		.uleb128 0xe
 1739 002e 3A       		.uleb128 0x3a
 1740 002f 0B       		.uleb128 0xb
 1741 0030 3B       		.uleb128 0x3b
 1742 0031 05       		.uleb128 0x5
 1743 0032 49       		.uleb128 0x49
 1744 0033 13       		.uleb128 0x13
 1745 0034 00       		.byte	0
 1746 0035 00       		.byte	0
ARM GAS  C:\Users\Mathias\AppData\Local\Temp\ccH8Ni7h.s 			page 54


 1747 0036 05       		.uleb128 0x5
 1748 0037 35       		.uleb128 0x35
 1749 0038 00       		.byte	0
 1750 0039 49       		.uleb128 0x49
 1751 003a 13       		.uleb128 0x13
 1752 003b 00       		.byte	0
 1753 003c 00       		.byte	0
 1754 003d 06       		.uleb128 0x6
 1755 003e 2E       		.uleb128 0x2e
 1756 003f 01       		.byte	0x1
 1757 0040 3F       		.uleb128 0x3f
 1758 0041 19       		.uleb128 0x19
 1759 0042 03       		.uleb128 0x3
 1760 0043 0E       		.uleb128 0xe
 1761 0044 3A       		.uleb128 0x3a
 1762 0045 0B       		.uleb128 0xb
 1763 0046 3B       		.uleb128 0x3b
 1764 0047 0B       		.uleb128 0xb
 1765 0048 27       		.uleb128 0x27
 1766 0049 19       		.uleb128 0x19
 1767 004a 11       		.uleb128 0x11
 1768 004b 01       		.uleb128 0x1
 1769 004c 12       		.uleb128 0x12
 1770 004d 06       		.uleb128 0x6
 1771 004e 40       		.uleb128 0x40
 1772 004f 18       		.uleb128 0x18
 1773 0050 9742     		.uleb128 0x2117
 1774 0052 19       		.uleb128 0x19
 1775 0053 01       		.uleb128 0x1
 1776 0054 13       		.uleb128 0x13
 1777 0055 00       		.byte	0
 1778 0056 00       		.byte	0
 1779 0057 07       		.uleb128 0x7
 1780 0058 34       		.uleb128 0x34
 1781 0059 00       		.byte	0
 1782 005a 03       		.uleb128 0x3
 1783 005b 0E       		.uleb128 0xe
 1784 005c 3A       		.uleb128 0x3a
 1785 005d 0B       		.uleb128 0xb
 1786 005e 3B       		.uleb128 0x3b
 1787 005f 0B       		.uleb128 0xb
 1788 0060 49       		.uleb128 0x49
 1789 0061 13       		.uleb128 0x13
 1790 0062 02       		.uleb128 0x2
 1791 0063 17       		.uleb128 0x17
 1792 0064 00       		.byte	0
 1793 0065 00       		.byte	0
 1794 0066 08       		.uleb128 0x8
 1795 0067 898201   		.uleb128 0x4109
 1796 006a 00       		.byte	0
 1797 006b 11       		.uleb128 0x11
 1798 006c 01       		.uleb128 0x1
 1799 006d 31       		.uleb128 0x31
 1800 006e 13       		.uleb128 0x13
 1801 006f 00       		.byte	0
 1802 0070 00       		.byte	0
 1803 0071 09       		.uleb128 0x9
ARM GAS  C:\Users\Mathias\AppData\Local\Temp\ccH8Ni7h.s 			page 55


 1804 0072 2E       		.uleb128 0x2e
 1805 0073 00       		.byte	0
 1806 0074 3F       		.uleb128 0x3f
 1807 0075 19       		.uleb128 0x19
 1808 0076 03       		.uleb128 0x3
 1809 0077 0E       		.uleb128 0xe
 1810 0078 3A       		.uleb128 0x3a
 1811 0079 0B       		.uleb128 0xb
 1812 007a 3B       		.uleb128 0x3b
 1813 007b 0B       		.uleb128 0xb
 1814 007c 27       		.uleb128 0x27
 1815 007d 19       		.uleb128 0x19
 1816 007e 11       		.uleb128 0x11
 1817 007f 01       		.uleb128 0x1
 1818 0080 12       		.uleb128 0x12
 1819 0081 06       		.uleb128 0x6
 1820 0082 40       		.uleb128 0x40
 1821 0083 18       		.uleb128 0x18
 1822 0084 9742     		.uleb128 0x2117
 1823 0086 19       		.uleb128 0x19
 1824 0087 00       		.byte	0
 1825 0088 00       		.byte	0
 1826 0089 0A       		.uleb128 0xa
 1827 008a 2E       		.uleb128 0x2e
 1828 008b 00       		.byte	0
 1829 008c 3F       		.uleb128 0x3f
 1830 008d 19       		.uleb128 0x19
 1831 008e 03       		.uleb128 0x3
 1832 008f 0E       		.uleb128 0xe
 1833 0090 3A       		.uleb128 0x3a
 1834 0091 0B       		.uleb128 0xb
 1835 0092 3B       		.uleb128 0x3b
 1836 0093 05       		.uleb128 0x5
 1837 0094 27       		.uleb128 0x27
 1838 0095 19       		.uleb128 0x19
 1839 0096 11       		.uleb128 0x11
 1840 0097 01       		.uleb128 0x1
 1841 0098 12       		.uleb128 0x12
 1842 0099 06       		.uleb128 0x6
 1843 009a 40       		.uleb128 0x40
 1844 009b 18       		.uleb128 0x18
 1845 009c 9742     		.uleb128 0x2117
 1846 009e 19       		.uleb128 0x19
 1847 009f 00       		.byte	0
 1848 00a0 00       		.byte	0
 1849 00a1 0B       		.uleb128 0xb
 1850 00a2 2E       		.uleb128 0x2e
 1851 00a3 01       		.byte	0x1
 1852 00a4 3F       		.uleb128 0x3f
 1853 00a5 19       		.uleb128 0x19
 1854 00a6 03       		.uleb128 0x3
 1855 00a7 0E       		.uleb128 0xe
 1856 00a8 3A       		.uleb128 0x3a
 1857 00a9 0B       		.uleb128 0xb
 1858 00aa 3B       		.uleb128 0x3b
 1859 00ab 05       		.uleb128 0x5
 1860 00ac 27       		.uleb128 0x27
ARM GAS  C:\Users\Mathias\AppData\Local\Temp\ccH8Ni7h.s 			page 56


 1861 00ad 19       		.uleb128 0x19
 1862 00ae 11       		.uleb128 0x11
 1863 00af 01       		.uleb128 0x1
 1864 00b0 12       		.uleb128 0x12
 1865 00b1 06       		.uleb128 0x6
 1866 00b2 40       		.uleb128 0x40
 1867 00b3 18       		.uleb128 0x18
 1868 00b4 9742     		.uleb128 0x2117
 1869 00b6 19       		.uleb128 0x19
 1870 00b7 01       		.uleb128 0x1
 1871 00b8 13       		.uleb128 0x13
 1872 00b9 00       		.byte	0
 1873 00ba 00       		.byte	0
 1874 00bb 0C       		.uleb128 0xc
 1875 00bc 05       		.uleb128 0x5
 1876 00bd 00       		.byte	0
 1877 00be 03       		.uleb128 0x3
 1878 00bf 0E       		.uleb128 0xe
 1879 00c0 3A       		.uleb128 0x3a
 1880 00c1 0B       		.uleb128 0xb
 1881 00c2 3B       		.uleb128 0x3b
 1882 00c3 05       		.uleb128 0x5
 1883 00c4 49       		.uleb128 0x49
 1884 00c5 13       		.uleb128 0x13
 1885 00c6 02       		.uleb128 0x2
 1886 00c7 18       		.uleb128 0x18
 1887 00c8 00       		.byte	0
 1888 00c9 00       		.byte	0
 1889 00ca 0D       		.uleb128 0xd
 1890 00cb 2E       		.uleb128 0x2e
 1891 00cc 01       		.byte	0x1
 1892 00cd 3F       		.uleb128 0x3f
 1893 00ce 19       		.uleb128 0x19
 1894 00cf 03       		.uleb128 0x3
 1895 00d0 0E       		.uleb128 0xe
 1896 00d1 3A       		.uleb128 0x3a
 1897 00d2 0B       		.uleb128 0xb
 1898 00d3 3B       		.uleb128 0x3b
 1899 00d4 05       		.uleb128 0x5
 1900 00d5 27       		.uleb128 0x27
 1901 00d6 19       		.uleb128 0x19
 1902 00d7 49       		.uleb128 0x49
 1903 00d8 13       		.uleb128 0x13
 1904 00d9 11       		.uleb128 0x11
 1905 00da 01       		.uleb128 0x1
 1906 00db 12       		.uleb128 0x12
 1907 00dc 06       		.uleb128 0x6
 1908 00dd 40       		.uleb128 0x40
 1909 00de 18       		.uleb128 0x18
 1910 00df 9742     		.uleb128 0x2117
 1911 00e1 19       		.uleb128 0x19
 1912 00e2 01       		.uleb128 0x1
 1913 00e3 13       		.uleb128 0x13
 1914 00e4 00       		.byte	0
 1915 00e5 00       		.byte	0
 1916 00e6 0E       		.uleb128 0xe
 1917 00e7 34       		.uleb128 0x34
ARM GAS  C:\Users\Mathias\AppData\Local\Temp\ccH8Ni7h.s 			page 57


 1918 00e8 00       		.byte	0
 1919 00e9 03       		.uleb128 0x3
 1920 00ea 0E       		.uleb128 0xe
 1921 00eb 3A       		.uleb128 0x3a
 1922 00ec 0B       		.uleb128 0xb
 1923 00ed 3B       		.uleb128 0x3b
 1924 00ee 05       		.uleb128 0x5
 1925 00ef 49       		.uleb128 0x49
 1926 00f0 13       		.uleb128 0x13
 1927 00f1 02       		.uleb128 0x2
 1928 00f2 18       		.uleb128 0x18
 1929 00f3 00       		.byte	0
 1930 00f4 00       		.byte	0
 1931 00f5 0F       		.uleb128 0xf
 1932 00f6 34       		.uleb128 0x34
 1933 00f7 00       		.byte	0
 1934 00f8 03       		.uleb128 0x3
 1935 00f9 0E       		.uleb128 0xe
 1936 00fa 3A       		.uleb128 0x3a
 1937 00fb 0B       		.uleb128 0xb
 1938 00fc 3B       		.uleb128 0x3b
 1939 00fd 05       		.uleb128 0x5
 1940 00fe 49       		.uleb128 0x49
 1941 00ff 13       		.uleb128 0x13
 1942 0100 02       		.uleb128 0x2
 1943 0101 17       		.uleb128 0x17
 1944 0102 00       		.byte	0
 1945 0103 00       		.byte	0
 1946 0104 10       		.uleb128 0x10
 1947 0105 05       		.uleb128 0x5
 1948 0106 00       		.byte	0
 1949 0107 03       		.uleb128 0x3
 1950 0108 0E       		.uleb128 0xe
 1951 0109 3A       		.uleb128 0x3a
 1952 010a 0B       		.uleb128 0xb
 1953 010b 3B       		.uleb128 0x3b
 1954 010c 05       		.uleb128 0x5
 1955 010d 49       		.uleb128 0x49
 1956 010e 13       		.uleb128 0x13
 1957 010f 02       		.uleb128 0x2
 1958 0110 17       		.uleb128 0x17
 1959 0111 00       		.byte	0
 1960 0112 00       		.byte	0
 1961 0113 11       		.uleb128 0x11
 1962 0114 0F       		.uleb128 0xf
 1963 0115 00       		.byte	0
 1964 0116 0B       		.uleb128 0xb
 1965 0117 0B       		.uleb128 0xb
 1966 0118 49       		.uleb128 0x49
 1967 0119 13       		.uleb128 0x13
 1968 011a 00       		.byte	0
 1969 011b 00       		.byte	0
 1970 011c 12       		.uleb128 0x12
 1971 011d 26       		.uleb128 0x26
 1972 011e 00       		.byte	0
 1973 011f 49       		.uleb128 0x49
 1974 0120 13       		.uleb128 0x13
ARM GAS  C:\Users\Mathias\AppData\Local\Temp\ccH8Ni7h.s 			page 58


 1975 0121 00       		.byte	0
 1976 0122 00       		.byte	0
 1977 0123 13       		.uleb128 0x13
 1978 0124 898201   		.uleb128 0x4109
 1979 0127 01       		.byte	0x1
 1980 0128 11       		.uleb128 0x11
 1981 0129 01       		.uleb128 0x1
 1982 012a 31       		.uleb128 0x31
 1983 012b 13       		.uleb128 0x13
 1984 012c 01       		.uleb128 0x1
 1985 012d 13       		.uleb128 0x13
 1986 012e 00       		.byte	0
 1987 012f 00       		.byte	0
 1988 0130 14       		.uleb128 0x14
 1989 0131 8A8201   		.uleb128 0x410a
 1990 0134 00       		.byte	0
 1991 0135 02       		.uleb128 0x2
 1992 0136 18       		.uleb128 0x18
 1993 0137 9142     		.uleb128 0x2111
 1994 0139 18       		.uleb128 0x18
 1995 013a 00       		.byte	0
 1996 013b 00       		.byte	0
 1997 013c 15       		.uleb128 0x15
 1998 013d 34       		.uleb128 0x34
 1999 013e 00       		.byte	0
 2000 013f 03       		.uleb128 0x3
 2001 0140 0E       		.uleb128 0xe
 2002 0141 3A       		.uleb128 0x3a
 2003 0142 0B       		.uleb128 0xb
 2004 0143 3B       		.uleb128 0x3b
 2005 0144 0B       		.uleb128 0xb
 2006 0145 49       		.uleb128 0x49
 2007 0146 13       		.uleb128 0x13
 2008 0147 3F       		.uleb128 0x3f
 2009 0148 19       		.uleb128 0x19
 2010 0149 02       		.uleb128 0x2
 2011 014a 18       		.uleb128 0x18
 2012 014b 00       		.byte	0
 2013 014c 00       		.byte	0
 2014 014d 16       		.uleb128 0x16
 2015 014e 01       		.uleb128 0x1
 2016 014f 01       		.byte	0x1
 2017 0150 49       		.uleb128 0x49
 2018 0151 13       		.uleb128 0x13
 2019 0152 01       		.uleb128 0x1
 2020 0153 13       		.uleb128 0x13
 2021 0154 00       		.byte	0
 2022 0155 00       		.byte	0
 2023 0156 17       		.uleb128 0x17
 2024 0157 21       		.uleb128 0x21
 2025 0158 00       		.byte	0
 2026 0159 49       		.uleb128 0x49
 2027 015a 13       		.uleb128 0x13
 2028 015b 2F       		.uleb128 0x2f
 2029 015c 0B       		.uleb128 0xb
 2030 015d 00       		.byte	0
 2031 015e 00       		.byte	0
ARM GAS  C:\Users\Mathias\AppData\Local\Temp\ccH8Ni7h.s 			page 59


 2032 015f 18       		.uleb128 0x18
 2033 0160 2E       		.uleb128 0x2e
 2034 0161 00       		.byte	0
 2035 0162 3F       		.uleb128 0x3f
 2036 0163 19       		.uleb128 0x19
 2037 0164 3C       		.uleb128 0x3c
 2038 0165 19       		.uleb128 0x19
 2039 0166 6E       		.uleb128 0x6e
 2040 0167 0E       		.uleb128 0xe
 2041 0168 03       		.uleb128 0x3
 2042 0169 0E       		.uleb128 0xe
 2043 016a 3A       		.uleb128 0x3a
 2044 016b 0B       		.uleb128 0xb
 2045 016c 3B       		.uleb128 0x3b
 2046 016d 0B       		.uleb128 0xb
 2047 016e 00       		.byte	0
 2048 016f 00       		.byte	0
 2049 0170 00       		.byte	0
 2050              		.section	.debug_loc,"",%progbits
 2051              	.Ldebug_loc0:
 2052              	.LLST0:
 2053 0000 06000000 		.4byte	.LVL0
 2054 0004 27000000 		.4byte	.LVL1-1
 2055 0008 0100     		.2byte	0x1
 2056 000a 50       		.byte	0x50
 2057 000b 00000000 		.4byte	0
 2058 000f 00000000 		.4byte	0
 2059              	.LLST1:
 2060 0013 06000000 		.4byte	.LVL2
 2061 0017 1D000000 		.4byte	.LVL3-1
 2062 001b 0100     		.2byte	0x1
 2063 001d 50       		.byte	0x50
 2064 001e 00000000 		.4byte	0
 2065 0022 00000000 		.4byte	0
 2066              	.LLST2:
 2067 0026 14000000 		.4byte	.LVL8
 2068 002a 20000000 		.4byte	.LVL10
 2069 002e 0100     		.2byte	0x1
 2070 0030 54       		.byte	0x54
 2071 0031 20000000 		.4byte	.LVL10
 2072 0035 28000000 		.4byte	.LFE11
 2073 0039 0100     		.2byte	0x1
 2074 003b 50       		.byte	0x50
 2075 003c 00000000 		.4byte	0
 2076 0040 00000000 		.4byte	0
 2077              	.LLST3:
 2078 0044 4C000000 		.4byte	.LVL14
 2079 0048 54000000 		.4byte	.LVL16
 2080 004c 0100     		.2byte	0x1
 2081 004e 54       		.byte	0x54
 2082 004f 54000000 		.4byte	.LVL16
 2083 0053 64000000 		.4byte	.LFE14
 2084 0057 0100     		.2byte	0x1
 2085 0059 50       		.byte	0x50
 2086 005a 00000000 		.4byte	0
 2087 005e 00000000 		.4byte	0
 2088              	.LLST4:
ARM GAS  C:\Users\Mathias\AppData\Local\Temp\ccH8Ni7h.s 			page 60


 2089 0062 32000000 		.4byte	.LVL18
 2090 0066 34000000 		.4byte	.LVL19
 2091 006a 0100     		.2byte	0x1
 2092 006c 54       		.byte	0x54
 2093 006d 42000000 		.4byte	.LVL20
 2094 0071 44000000 		.4byte	.LVL21
 2095 0075 0100     		.2byte	0x1
 2096 0077 54       		.byte	0x54
 2097 0078 46000000 		.4byte	.LVL22
 2098 007c 4E000000 		.4byte	.LVL24
 2099 0080 0100     		.2byte	0x1
 2100 0082 54       		.byte	0x54
 2101 0083 00000000 		.4byte	0
 2102 0087 00000000 		.4byte	0
 2103              	.LLST5:
 2104 008b 06000000 		.4byte	.LVL25
 2105 008f 1C000000 		.4byte	.LVL26
 2106 0093 0100     		.2byte	0x1
 2107 0095 53       		.byte	0x53
 2108 0096 1C000000 		.4byte	.LVL26
 2109 009a 24000000 		.4byte	.LFE16
 2110 009e 0100     		.2byte	0x1
 2111 00a0 50       		.byte	0x50
 2112 00a1 00000000 		.4byte	0
 2113 00a5 00000000 		.4byte	0
 2114              	.LLST6:
 2115 00a9 06000000 		.4byte	.LVL29
 2116 00ad 1B000000 		.4byte	.LVL30-1
 2117 00b1 0100     		.2byte	0x1
 2118 00b3 50       		.byte	0x50
 2119 00b4 00000000 		.4byte	0
 2120 00b8 00000000 		.4byte	0
 2121              	.LLST7:
 2122 00bc 00000000 		.4byte	.LVL31
 2123 00c0 0A000000 		.4byte	.LVL33
 2124 00c4 0100     		.2byte	0x1
 2125 00c6 50       		.byte	0x50
 2126 00c7 0A000000 		.4byte	.LVL33
 2127 00cb 1E000000 		.4byte	.LFE19
 2128 00cf 0100     		.2byte	0x1
 2129 00d1 56       		.byte	0x56
 2130 00d2 00000000 		.4byte	0
 2131 00d6 00000000 		.4byte	0
 2132              	.LLST8:
 2133 00da 00000000 		.4byte	.LVL31
 2134 00de 0A000000 		.4byte	.LVL33
 2135 00e2 0100     		.2byte	0x1
 2136 00e4 51       		.byte	0x51
 2137 00e5 0A000000 		.4byte	.LVL33
 2138 00e9 16000000 		.4byte	.LVL37
 2139 00ed 0100     		.2byte	0x1
 2140 00ef 54       		.byte	0x54
 2141 00f0 18000000 		.4byte	.LVL38
 2142 00f4 1E000000 		.4byte	.LFE19
 2143 00f8 0100     		.2byte	0x1
 2144 00fa 54       		.byte	0x54
 2145 00fb 00000000 		.4byte	0
ARM GAS  C:\Users\Mathias\AppData\Local\Temp\ccH8Ni7h.s 			page 61


 2146 00ff 00000000 		.4byte	0
 2147              	.LLST9:
 2148 0103 06000000 		.4byte	.LVL32
 2149 0107 0A000000 		.4byte	.LVL33
 2150 010b 0200     		.2byte	0x2
 2151 010d 30       		.byte	0x30
 2152 010e 9F       		.byte	0x9f
 2153 010f 0A000000 		.4byte	.LVL33
 2154 0113 12000000 		.4byte	.LVL35
 2155 0117 0100     		.2byte	0x1
 2156 0119 55       		.byte	0x55
 2157 011a 14000000 		.4byte	.LVL36
 2158 011e 1E000000 		.4byte	.LFE19
 2159 0122 0100     		.2byte	0x1
 2160 0124 55       		.byte	0x55
 2161 0125 00000000 		.4byte	0
 2162 0129 00000000 		.4byte	0
 2163              	.LLST10:
 2164 012d 16000000 		.4byte	.LVL39
 2165 0131 2B000000 		.4byte	.LVL40-1
 2166 0135 0100     		.2byte	0x1
 2167 0137 50       		.byte	0x50
 2168 0138 00000000 		.4byte	0
 2169 013c 00000000 		.4byte	0
 2170              	.LLST11:
 2171 0140 28000000 		.4byte	.LVL50
 2172 0144 36000000 		.4byte	.LVL52
 2173 0148 0100     		.2byte	0x1
 2174 014a 54       		.byte	0x54
 2175 014b 36000000 		.4byte	.LVL52
 2176 014f 48000000 		.4byte	.LFE24
 2177 0153 0100     		.2byte	0x1
 2178 0155 50       		.byte	0x50
 2179 0156 00000000 		.4byte	0
 2180 015a 00000000 		.4byte	0
 2181              		.section	.debug_aranges,"",%progbits
 2182 0000 DC000000 		.4byte	0xdc
 2183 0004 0200     		.2byte	0x2
 2184 0006 00000000 		.4byte	.Ldebug_info0
 2185 000a 04       		.byte	0x4
 2186 000b 00       		.byte	0
 2187 000c 0000     		.2byte	0
 2188 000e 0000     		.2byte	0
 2189 0010 00000000 		.4byte	.LFB1
 2190 0014 38000000 		.4byte	.LFE1-.LFB1
 2191 0018 00000000 		.4byte	.LFB3
 2192 001c 30000000 		.4byte	.LFE3-.LFB3
 2193 0020 00000000 		.4byte	.LFB4
 2194 0024 02000000 		.4byte	.LFE4-.LFB4
 2195 0028 00000000 		.4byte	.LFB5
 2196 002c 0C000000 		.4byte	.LFE5-.LFB5
 2197 0030 00000000 		.4byte	.LFB6
 2198 0034 02000000 		.4byte	.LFE6-.LFB6
 2199 0038 00000000 		.4byte	.LFB7
 2200 003c 0C000000 		.4byte	.LFE7-.LFB7
 2201 0040 00000000 		.4byte	.LFB8
 2202 0044 0C000000 		.4byte	.LFE8-.LFB8
ARM GAS  C:\Users\Mathias\AppData\Local\Temp\ccH8Ni7h.s 			page 62


 2203 0048 00000000 		.4byte	.LFB9
 2204 004c 0C000000 		.4byte	.LFE9-.LFB9
 2205 0050 00000000 		.4byte	.LFB10
 2206 0054 0C000000 		.4byte	.LFE10-.LFB10
 2207 0058 00000000 		.4byte	.LFB11
 2208 005c 28000000 		.4byte	.LFE11-.LFB11
 2209 0060 00000000 		.4byte	.LFB12
 2210 0064 18000000 		.4byte	.LFE12-.LFB12
 2211 0068 00000000 		.4byte	.LFB13
 2212 006c 0C000000 		.4byte	.LFE13-.LFB13
 2213 0070 00000000 		.4byte	.LFB14
 2214 0074 64000000 		.4byte	.LFE14-.LFB14
 2215 0078 00000000 		.4byte	.LFB15
 2216 007c 58000000 		.4byte	.LFE15-.LFB15
 2217 0080 00000000 		.4byte	.LFB16
 2218 0084 24000000 		.4byte	.LFE16-.LFB16
 2219 0088 00000000 		.4byte	.LFB17
 2220 008c 40000000 		.4byte	.LFE17-.LFB17
 2221 0090 00000000 		.4byte	.LFB18
 2222 0094 24000000 		.4byte	.LFE18-.LFB18
 2223 0098 00000000 		.4byte	.LFB19
 2224 009c 1E000000 		.4byte	.LFE19-.LFB19
 2225 00a0 00000000 		.4byte	.LFB20
 2226 00a4 3C000000 		.4byte	.LFE20-.LFB20
 2227 00a8 00000000 		.4byte	.LFB0
 2228 00ac 60000000 		.4byte	.LFE0-.LFB0
 2229 00b0 00000000 		.4byte	.LFB2
 2230 00b4 1C000000 		.4byte	.LFE2-.LFB2
 2231 00b8 00000000 		.4byte	.LFB21
 2232 00bc 0C000000 		.4byte	.LFE21-.LFB21
 2233 00c0 00000000 		.4byte	.LFB22
 2234 00c4 0C000000 		.4byte	.LFE22-.LFB22
 2235 00c8 00000000 		.4byte	.LFB23
 2236 00cc 10000000 		.4byte	.LFE23-.LFB23
 2237 00d0 00000000 		.4byte	.LFB24
 2238 00d4 48000000 		.4byte	.LFE24-.LFB24
 2239 00d8 00000000 		.4byte	0
 2240 00dc 00000000 		.4byte	0
 2241              		.section	.debug_ranges,"",%progbits
 2242              	.Ldebug_ranges0:
 2243 0000 00000000 		.4byte	.LFB1
 2244 0004 38000000 		.4byte	.LFE1
 2245 0008 00000000 		.4byte	.LFB3
 2246 000c 30000000 		.4byte	.LFE3
 2247 0010 00000000 		.4byte	.LFB4
 2248 0014 02000000 		.4byte	.LFE4
 2249 0018 00000000 		.4byte	.LFB5
 2250 001c 0C000000 		.4byte	.LFE5
 2251 0020 00000000 		.4byte	.LFB6
 2252 0024 02000000 		.4byte	.LFE6
 2253 0028 00000000 		.4byte	.LFB7
 2254 002c 0C000000 		.4byte	.LFE7
 2255 0030 00000000 		.4byte	.LFB8
 2256 0034 0C000000 		.4byte	.LFE8
 2257 0038 00000000 		.4byte	.LFB9
 2258 003c 0C000000 		.4byte	.LFE9
 2259 0040 00000000 		.4byte	.LFB10
ARM GAS  C:\Users\Mathias\AppData\Local\Temp\ccH8Ni7h.s 			page 63


 2260 0044 0C000000 		.4byte	.LFE10
 2261 0048 00000000 		.4byte	.LFB11
 2262 004c 28000000 		.4byte	.LFE11
 2263 0050 00000000 		.4byte	.LFB12
 2264 0054 18000000 		.4byte	.LFE12
 2265 0058 00000000 		.4byte	.LFB13
 2266 005c 0C000000 		.4byte	.LFE13
 2267 0060 00000000 		.4byte	.LFB14
 2268 0064 64000000 		.4byte	.LFE14
 2269 0068 00000000 		.4byte	.LFB15
 2270 006c 58000000 		.4byte	.LFE15
 2271 0070 00000000 		.4byte	.LFB16
 2272 0074 24000000 		.4byte	.LFE16
 2273 0078 00000000 		.4byte	.LFB17
 2274 007c 40000000 		.4byte	.LFE17
 2275 0080 00000000 		.4byte	.LFB18
 2276 0084 24000000 		.4byte	.LFE18
 2277 0088 00000000 		.4byte	.LFB19
 2278 008c 1E000000 		.4byte	.LFE19
 2279 0090 00000000 		.4byte	.LFB20
 2280 0094 3C000000 		.4byte	.LFE20
 2281 0098 00000000 		.4byte	.LFB0
 2282 009c 60000000 		.4byte	.LFE0
 2283 00a0 00000000 		.4byte	.LFB2
 2284 00a4 1C000000 		.4byte	.LFE2
 2285 00a8 00000000 		.4byte	.LFB21
 2286 00ac 0C000000 		.4byte	.LFE21
 2287 00b0 00000000 		.4byte	.LFB22
 2288 00b4 0C000000 		.4byte	.LFE22
 2289 00b8 00000000 		.4byte	.LFB23
 2290 00bc 10000000 		.4byte	.LFE23
 2291 00c0 00000000 		.4byte	.LFB24
 2292 00c4 48000000 		.4byte	.LFE24
 2293 00c8 00000000 		.4byte	0
 2294 00cc 00000000 		.4byte	0
 2295              		.section	.debug_line,"",%progbits
 2296              	.Ldebug_line0:
 2297 0000 68020000 		.section	.debug_str,"MS",%progbits,1
 2297      02004C00 
 2297      00000201 
 2297      FB0E0D00 
 2297      01010101 
 2298              	.LASF47:
 2299 0000 53504953 		.ascii	"SPIS_Init\000"
 2299      5F496E69 
 2299      7400
 2300              	.LASF61:
 2301 000a 43794578 		.ascii	"CyExitCriticalSection\000"
 2301      69744372 
 2301      69746963 
 2301      616C5365 
 2301      6374696F 
 2302              	.LASF25:
 2303 0020 53504953 		.ascii	"SPIS_SetTxInterruptMode\000"
 2303      5F536574 
 2303      5478496E 
 2303      74657272 
ARM GAS  C:\Users\Mathias\AppData\Local\Temp\ccH8Ni7h.s 			page 64


 2303      7570744D 
 2304              	.LASF56:
 2305 0038 53504953 		.ascii	"SPIS_rxBuffer\000"
 2305      5F727842 
 2305      75666665 
 2305      7200
 2306              	.LASF46:
 2307 0046 53504953 		.ascii	"SPIS_ClearFIFO\000"
 2307      5F436C65 
 2307      61724649 
 2307      464F00
 2308              	.LASF37:
 2309 0055 53504953 		.ascii	"SPIS_GetRxBufferSize\000"
 2309      5F476574 
 2309      52784275 
 2309      66666572 
 2309      53697A65 
 2310              	.LASF7:
 2311 006a 6C6F6E67 		.ascii	"long long unsigned int\000"
 2311      206C6F6E 
 2311      6720756E 
 2311      7369676E 
 2311      65642069 
 2312              	.LASF28:
 2313 0081 746D7053 		.ascii	"tmpStatus\000"
 2313      74617475 
 2313      7300
 2314              	.LASF40:
 2315 008b 53504953 		.ascii	"SPIS_ClearRxBuffer\000"
 2315      5F436C65 
 2315      61725278 
 2315      42756666 
 2315      657200
 2316              	.LASF6:
 2317 009e 6C6F6E67 		.ascii	"long long int\000"
 2317      206C6F6E 
 2317      6720696E 
 2317      7400
 2318              	.LASF0:
 2319 00ac 7369676E 		.ascii	"signed char\000"
 2319      65642063 
 2319      68617200 
 2320              	.LASF4:
 2321 00b8 6C6F6E67 		.ascii	"long int\000"
 2321      20696E74 
 2321      00
 2322              	.LASF66:
 2323 00c1 433A5C55 		.ascii	"C:\\Users\\Mathias\\Desktop\\Uni\\4. Semester\\Proj"
 2323      73657273 
 2323      5C4D6174 
 2323      68696173 
 2323      5C446573 
 2324 00ee 656B7420 		.ascii	"ekt 4\\iFollow\\Software\\PSOC\\ToF\\Design01.cydsn"
 2324      345C6946 
 2324      6F6C6C6F 
 2324      775C536F 
 2324      66747761 
ARM GAS  C:\Users\Mathias\AppData\Local\Temp\ccH8Ni7h.s 			page 65


 2325 011c 00       		.ascii	"\000"
 2326              	.LASF9:
 2327 011d 75696E74 		.ascii	"uint8\000"
 2327      3800
 2328              	.LASF12:
 2329 0123 646F7562 		.ascii	"double\000"
 2329      6C6500
 2330              	.LASF18:
 2331 012a 53504953 		.ascii	"SPIS_Enable\000"
 2331      5F456E61 
 2331      626C6500 
 2332              	.LASF10:
 2333 0136 75696E74 		.ascii	"uint32\000"
 2333      333200
 2334              	.LASF33:
 2335 013d 53504953 		.ascii	"SPIS_WriteTxDataZero\000"
 2335      5F577269 
 2335      74655478 
 2335      44617461 
 2335      5A65726F 
 2336              	.LASF59:
 2337 0152 53504953 		.ascii	"SPIS_rxBufferFull\000"
 2337      5F727842 
 2337      75666665 
 2337      7246756C 
 2337      6C00
 2338              	.LASF8:
 2339 0164 756E7369 		.ascii	"unsigned int\000"
 2339      676E6564 
 2339      20696E74 
 2339      00
 2340              	.LASF55:
 2341 0171 53504953 		.ascii	"SPIS_swStatusRx\000"
 2341      5F737753 
 2341      74617475 
 2341      73527800 
 2342              	.LASF5:
 2343 0181 6C6F6E67 		.ascii	"long unsigned int\000"
 2343      20756E73 
 2343      69676E65 
 2343      6420696E 
 2343      7400
 2344              	.LASF60:
 2345 0193 4379456E 		.ascii	"CyEnterCriticalSection\000"
 2345      74657243 
 2345      72697469 
 2345      63616C53 
 2345      65637469 
 2346              	.LASF38:
 2347 01aa 73697A65 		.ascii	"size\000"
 2347      00
 2348              	.LASF3:
 2349 01af 73686F72 		.ascii	"short unsigned int\000"
 2349      7420756E 
 2349      7369676E 
 2349      65642069 
 2349      6E7400
ARM GAS  C:\Users\Mathias\AppData\Local\Temp\ccH8Ni7h.s 			page 66


 2350              	.LASF62:
 2351 01c2 4379496E 		.ascii	"CyIntSetVector\000"
 2351      74536574 
 2351      56656374 
 2351      6F7200
 2352              	.LASF45:
 2353 01d1 62756649 		.ascii	"bufIndex\000"
 2353      6E646578 
 2353      00
 2354              	.LASF31:
 2355 01da 53504953 		.ascii	"SPIS_WriteTxData\000"
 2355      5F577269 
 2355      74655478 
 2355      44617461 
 2355      00
 2356              	.LASF58:
 2357 01eb 53504953 		.ascii	"SPIS_rxBufferWrite\000"
 2357      5F727842 
 2357      75666665 
 2357      72577269 
 2357      746500
 2358              	.LASF57:
 2359 01fe 53504953 		.ascii	"SPIS_rxBufferRead\000"
 2359      5F727842 
 2359      75666665 
 2359      72526561 
 2359      6400
 2360              	.LASF27:
 2361 0210 696E7453 		.ascii	"intSrc\000"
 2361      726300
 2362              	.LASF29:
 2363 0217 53504953 		.ascii	"SPIS_ReadTxStatus\000"
 2363      5F526561 
 2363      64547853 
 2363      74617475 
 2363      7300
 2364              	.LASF23:
 2365 0229 53504953 		.ascii	"SPIS_DisableTxInt\000"
 2365      5F446973 
 2365      61626C65 
 2365      5478496E 
 2365      7400
 2366              	.LASF15:
 2367 023b 72656733 		.ascii	"reg32\000"
 2367      3200
 2368              	.LASF53:
 2369 0241 53504953 		.ascii	"SPIS_initVar\000"
 2369      5F696E69 
 2369      74566172 
 2369      00
 2370              	.LASF42:
 2371 024e 53504953 		.ascii	"SPIS_PutArray\000"
 2371      5F507574 
 2371      41727261 
 2371      7900
 2372              	.LASF41:
 2373 025c 53504953 		.ascii	"SPIS_ClearTxBuffer\000"
ARM GAS  C:\Users\Mathias\AppData\Local\Temp\ccH8Ni7h.s 			page 67


 2373      5F436C65 
 2373      61725478 
 2373      42756666 
 2373      657200
 2374              	.LASF17:
 2375 026f 73697A65 		.ascii	"sizetype\000"
 2375      74797065 
 2375      00
 2376              	.LASF16:
 2377 0278 6C6F6E67 		.ascii	"long double\000"
 2377      20646F75 
 2377      626C6500 
 2378              	.LASF35:
 2379 0284 53504953 		.ascii	"SPIS_ReadRxData\000"
 2379      5F526561 
 2379      64527844 
 2379      61746100 
 2380              	.LASF63:
 2381 0294 4379496E 		.ascii	"CyIntSetPriority\000"
 2381      74536574 
 2381      5072696F 
 2381      72697479 
 2381      00
 2382              	.LASF11:
 2383 02a5 666C6F61 		.ascii	"float\000"
 2383      7400
 2384              	.LASF19:
 2385 02ab 53504953 		.ascii	"SPIS_Stop\000"
 2385      5F53746F 
 2385      7000
 2386              	.LASF54:
 2387 02b5 53504953 		.ascii	"SPIS_swStatusTx\000"
 2387      5F737753 
 2387      74617475 
 2387      73547800 
 2388              	.LASF14:
 2389 02c5 72656738 		.ascii	"reg8\000"
 2389      00
 2390              	.LASF22:
 2391 02ca 53504953 		.ascii	"SPIS_EnableRxInt\000"
 2391      5F456E61 
 2391      626C6552 
 2391      78496E74 
 2391      00
 2392              	.LASF1:
 2393 02db 756E7369 		.ascii	"unsigned char\000"
 2393      676E6564 
 2393      20636861 
 2393      7200
 2394              	.LASF65:
 2395 02e9 47656E65 		.ascii	"Generated_Source\\PSoC5\\SPIS.c\000"
 2395      72617465 
 2395      645F536F 
 2395      75726365 
 2395      5C50536F 
 2396              	.LASF52:
 2397 0307 53504953 		.ascii	"SPIS_ReadStatus\000"
ARM GAS  C:\Users\Mathias\AppData\Local\Temp\ccH8Ni7h.s 			page 68


 2397      5F526561 
 2397      64537461 
 2397      74757300 
 2398              	.LASF2:
 2399 0317 73686F72 		.ascii	"short int\000"
 2399      7420696E 
 2399      7400
 2400              	.LASF64:
 2401 0321 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2401      43313120 
 2401      352E342E 
 2401      31203230 
 2401      31363036 
 2402 0354 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2402      20726576 
 2402      6973696F 
 2402      6E203233 
 2402      37373135 
 2403 0387 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2403      66756E63 
 2403      74696F6E 
 2403      2D736563 
 2403      74696F6E 
 2404              	.LASF44:
 2405 03af 62797465 		.ascii	"byteCount\000"
 2405      436F756E 
 2405      7400
 2406              	.LASF48:
 2407 03b9 53504953 		.ascii	"SPIS_Start\000"
 2407      5F537461 
 2407      727400
 2408              	.LASF26:
 2409 03c4 53504953 		.ascii	"SPIS_SetRxInterruptMode\000"
 2409      5F536574 
 2409      5278496E 
 2409      74657272 
 2409      7570744D 
 2410              	.LASF36:
 2411 03dc 72784461 		.ascii	"rxData\000"
 2411      746100
 2412              	.LASF13:
 2413 03e3 63686172 		.ascii	"char\000"
 2413      00
 2414              	.LASF30:
 2415 03e8 53504953 		.ascii	"SPIS_ReadRxStatus\000"
 2415      5F526561 
 2415      64527853 
 2415      74617475 
 2415      7300
 2416              	.LASF39:
 2417 03fa 53504953 		.ascii	"SPIS_GetTxBufferSize\000"
 2417      5F476574 
 2417      54784275 
 2417      66666572 
 2417      53697A65 
 2418              	.LASF43:
 2419 040f 62756666 		.ascii	"buffer\000"
ARM GAS  C:\Users\Mathias\AppData\Local\Temp\ccH8Ni7h.s 			page 69


 2419      657200
 2420              	.LASF51:
 2421 0416 53504953 		.ascii	"SPIS_SetInterruptMode\000"
 2421      5F536574 
 2421      496E7465 
 2421      72727570 
 2421      744D6F64 
 2422              	.LASF50:
 2423 042c 53504953 		.ascii	"SPIS_DisableInt\000"
 2423      5F446973 
 2423      61626C65 
 2423      496E7400 
 2424              	.LASF20:
 2425 043c 656E6162 		.ascii	"enableInterrupts\000"
 2425      6C65496E 
 2425      74657272 
 2425      75707473 
 2425      00
 2426              	.LASF21:
 2427 044d 53504953 		.ascii	"SPIS_EnableTxInt\000"
 2427      5F456E61 
 2427      626C6554 
 2427      78496E74 
 2427      00
 2428              	.LASF34:
 2429 045e 74784461 		.ascii	"txDataByte\000"
 2429      74614279 
 2429      746500
 2430              	.LASF24:
 2431 0469 53504953 		.ascii	"SPIS_DisableRxInt\000"
 2431      5F446973 
 2431      61626C65 
 2431      5278496E 
 2431      7400
 2432              	.LASF49:
 2433 047b 53504953 		.ascii	"SPIS_EnableInt\000"
 2433      5F456E61 
 2433      626C6549 
 2433      6E7400
 2434              	.LASF32:
 2435 048a 74784461 		.ascii	"txData\000"
 2435      746100
 2436              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
